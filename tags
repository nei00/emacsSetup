!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!cdr	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro !cdr (list)$/;"	f
!cons	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro !cons (car cdr)$/;"	f
"async"	.emacs.d/elpa/async-20190503.656/async-pkg.el	/^(define-package "async" "20190503.656" "Asynchronous processing in Emacs" 'nil :keywords$/;"	f
"dash"	.emacs.d/elpa/dash-20190424.1804/dash-pkg.el	/^(define-package "dash" "20190424.1804" "A modern list library for Emacs" 'nil :commit "77f3bf40c9c85386a50f2dab3dc950513f6f88bd" :keywords '("lists") :authors '(("Magnar Sveen" . "magnars@gmail.com")) :maintainer '("Magnar Sveen" . "magnars@gmail.com"))$/;"	f
"git-commit"	.emacs.d/elpa/git-commit-20190625.323/git-commit-pkg.el	/^(define-package "git-commit" "20190625.323" "Edit Git commit messages" '((emacs "25.1") (dash "20180910") (with-editor "20181103")) :commit "d1e1e3bfb35f1600913f58cfb96419420c77e120" :keywords '("git" "tools" "vc") :maintainer '("Jonas Bernoulli" . "jonas@bernoul.li") :url "https:\/\/github.com\/magit\/magit")$/;"	f
"linum-relative"	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative-pkg.el	/^(define-package "linum-relative" "20180124.1047" "display relative line number in emacs." 'nil :commit "c74a6981b688a5e1e6b8e0809363963ff558ce4d" :keywords '("converience") :authors '(("coldnew" . "coldnew.tw@gmail.com")) :maintainer '("coldnew" . "coldnew.tw@gmail.com") :url "http:\/\/github.com\/coldnew\/linum-relative")$/;"	f
"magit"	.emacs.d/elpa/magit-20190709.1612/magit-pkg.el	/^(define-package "magit" "20190709.1612" "A Git porcelain inside Emacs."$/;"	f
"transient"	.emacs.d/elpa/transient-20190630.1359/transient-pkg.el	/^(define-package "transient" "20190630.1359" "Transient commands"$/;"	f
"with-editor"	.emacs.d/elpa/with-editor-20190511.1157/with-editor-pkg.el	/^(define-package "with-editor" "20190511.1157" "Use the Emacsclient as $EDITOR"$/;"	f
*undo-tree-id-counter*	.emacs.d/evil/lib/undo-tree.el	/^(defvar *undo-tree-id-counter* 0)$/;"	f
---partition-all-in-steps-reversed	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun ---partition-all-in-steps-reversed (n step list)$/;"	f
---truthy?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun ---truthy? (val)$/;"	f
-->	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --> (x &rest forms)$/;"	f
--all-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--all-p '--all?)$/;"	f
--all?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --all? (form list)$/;"	f
--annotate	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --annotate (form list)$/;"	f
--any	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--any '--some)$/;"	f
--any-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--any-p '--any?)$/;"	f
--any?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --any? (form list)$/;"	f
--count	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --count (pred list)$/;"	f
--dotimes	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --dotimes (num &rest body)$/;"	f
--doto	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --doto (eval-initial-value &rest forms)$/;"	f
--drop-while	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --drop-while (form list)$/;"	f
--each	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --each (list &rest body)$/;"	f
--each-indexed	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--each-indexed '--each)$/;"	f
--each-r	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --each-r (list &rest body)$/;"	f
--each-r-while	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --each-r-while (list pred &rest body)$/;"	f
--each-while	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --each-while (list pred &rest body)$/;"	f
--every-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--every-p '--all?)$/;"	f
--every?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--every? '--all?)$/;"	f
--filter	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --filter (form list)$/;"	f
--find	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--find '--first)$/;"	f
--find-index	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --find-index (form list)$/;"	f
--find-indices	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --find-indices (form list)$/;"	f
--find-last-index	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --find-last-index (form list)$/;"	f
--first	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --first (form list)$/;"	f
--fix	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --fix (form list)$/;"	f
--group-by	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --group-by (form list)$/;"	f
--if-let	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --if-let (val then &rest else)$/;"	f
--iterate	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --iterate (form init n)$/;"	f
--keep	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --keep (form list)$/;"	f
--last	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --last (form list)$/;"	f
--map	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --map (form list)$/;"	f
--map-first	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --map-first (pred rep list)$/;"	f
--map-indexed	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --map-indexed (form list)$/;"	f
--map-last	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --map-last (pred rep list)$/;"	f
--map-when	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --map-when (pred rep list)$/;"	f
--mapcat	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --mapcat (form list)$/;"	f
--max-by	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --max-by (form list)$/;"	f
--min-by	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --min-by (form list)$/;"	f
--none-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--none-p '--none?)$/;"	f
--none?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --none? (form list)$/;"	f
--only-some-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--only-some-p '--only-some?)$/;"	f
--only-some?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --only-some? (form list)$/;"	f
--partition-by	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --partition-by (form list)$/;"	f
--partition-by-header	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --partition-by-header (form list)$/;"	f
--reduce	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --reduce (form list)$/;"	f
--reduce-from	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --reduce-from (form initial-value list)$/;"	f
--reduce-r	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --reduce-r (form list)$/;"	f
--reduce-r-from	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --reduce-r-from (form initial-value list)$/;"	f
--reject	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--reject '--remove)$/;"	f
--reject-first	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--reject-first '--remove-first)$/;"	f
--reject-last	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--reject-last '--remove-last)$/;"	f
--remove	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --remove (form list)$/;"	f
--remove-first	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --remove-first (form list)$/;"	f
--remove-last	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --remove-last (form list)$/;"	f
--replace-where	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--replace-where '--map-when)$/;"	f
--select	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--select '--filter)$/;"	f
--separate	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --separate (form list)$/;"	f
--some	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --some (form list)$/;"	f
--some-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--some-p '--any?)$/;"	f
--some?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '--some? '--any?)$/;"	f
--sort	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --sort (form list)$/;"	f
--splice	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --splice (pred form list)$/;"	f
--splice-list	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --splice-list (pred new-list list)$/;"	f
--split-when	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --split-when (form list)$/;"	f
--split-with	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --split-with (pred list)$/;"	f
--take-while	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --take-while (form list)$/;"	f
--tree-map	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --tree-map (form tree)$/;"	f
--tree-map-nodes	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --tree-map-nodes (pred form tree)$/;"	f
--tree-mapreduce	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --tree-mapreduce (form folder tree)$/;"	f
--tree-mapreduce-from	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --tree-mapreduce-from (form folder init-value tree)$/;"	f
--tree-reduce	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --tree-reduce (form tree)$/;"	f
--tree-reduce-from	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --tree-reduce-from (form init-value tree)$/;"	f
--tree-seq	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --tree-seq (branch children tree)$/;"	f
--unfold	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --unfold (form seed)$/;"	f
--update-at	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --update-at (n form list)$/;"	f
--when-let	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --when-let (val &rest body)$/;"	f
--zip-with	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro --zip-with (form list1 list2)$/;"	f
->	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -> (x &optional form &rest more)$/;"	f
->>	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro ->> (x &optional form &rest more)$/;"	f
-all-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-all-p '-all?)$/;"	f
-all?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -all? (pred list)$/;"	f
-annotate	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -annotate (fn list)$/;"	f
-any	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-any '-some)$/;"	f
-any-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-any-p '-any?)$/;"	f
-any?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -any? (pred list)$/;"	f
-as->	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -as-> (value variable &rest forms)$/;"	f
-butlast	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -butlast (list)$/;"	f
-clone	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -clone (list)$/;"	f
-common-prefix	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -common-prefix (&rest lists)$/;"	f
-common-suffix	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -common-suffix (&rest lists)$/;"	f
-compare-fn	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defvar -compare-fn nil$/;"	f
-concat	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -concat (&rest lists)$/;"	f
-cons*	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -cons* (&rest args)$/;"	f
-cons-pair-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-cons-pair-p '-cons-pair?)$/;"	f
-cons-pair?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -cons-pair? (con)$/;"	f
-cons-to-list	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -cons-to-list (con)$/;"	f
-contains-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-contains-p '-contains?)$/;"	f
-contains?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -contains? (list element)$/;"	f
-copy	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-copy 'copy-sequence$/;"	f
-count	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -count (pred list)$/;"	f
-cycle	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -cycle (list)$/;"	f
-difference	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -difference (list list2)$/;"	f
-distinct	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -distinct (list)$/;"	f
-dotimes	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -dotimes (num fn)$/;"	f
-doto	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -doto (eval-initial-value &rest forms)$/;"	f
-drop	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-drop 'nthcdr$/;"	f
-drop-last	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -drop-last (n list)$/;"	f
-drop-while	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -drop-while (pred list)$/;"	f
-each	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -each (list fn)$/;"	f
-each-indexed	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -each-indexed (list fn)$/;"	f
-each-r	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -each-r (list fn)$/;"	f
-each-r-while	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -each-r-while (list pred fn)$/;"	f
-each-while	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -each-while (list pred fn)$/;"	f
-elem-index	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -elem-index (elem list)$/;"	f
-elem-indices	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -elem-indices (elem list)$/;"	f
-every-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-every-p '-all?)$/;"	f
-every?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-every? '-all?)$/;"	f
-fifth-item	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -fifth-item (list)$/;"	f
-filter	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -filter (pred list)$/;"	f
-find	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-find '-first)$/;"	f
-find-index	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -find-index (pred list)$/;"	f
-find-indices	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -find-indices (pred list)$/;"	f
-find-last-index	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -find-last-index (pred list)$/;"	f
-first	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -first (pred list)$/;"	f
-first-item	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-first-item 'car$/;"	f
-fix	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -fix (fn list)$/;"	f
-flatten	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -flatten (l)$/;"	f
-flatten-n	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -flatten-n (num list)$/;"	f
-fourth-item	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -fourth-item (list)$/;"	f
-grade-down	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -grade-down (comparator list)$/;"	f
-grade-up	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -grade-up (comparator list)$/;"	f
-group-by	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -group-by (fn list)$/;"	f
-if-let	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -if-let (var-val then &rest else)$/;"	f
-if-let*	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -if-let* (vars-vals then &rest else)$/;"	f
-inits	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -inits (list)$/;"	f
-insert-at	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -insert-at (n x list)$/;"	f
-interleave	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -interleave (&rest lists)$/;"	f
-interpose	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -interpose (sep list)$/;"	f
-intersection	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -intersection (list list2)$/;"	f
-is-infix-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-is-infix-p '-is-infix?)$/;"	f
-is-infix?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -is-infix? (infix list)$/;"	f
-is-prefix-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-is-prefix-p '-is-prefix?)$/;"	f
-is-prefix?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -is-prefix? (prefix list)$/;"	f
-is-suffix-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-is-suffix-p '-is-suffix?)$/;"	f
-is-suffix?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -is-suffix? (suffix list)$/;"	f
-iterate	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -iterate (fun init n)$/;"	f
-keep	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -keep (fn list)$/;"	f
-lambda	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -lambda (match-form &rest body)$/;"	f
-last	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -last (pred list)$/;"	f
-last-item	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -last-item (list)$/;"	f
-let	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -let (varlist &rest body)$/;"	f
-let*	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -let* (varlist &rest body)$/;"	f
-list	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -list (&rest args)$/;"	f
-map	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -map (fn list)$/;"	f
-map-first	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -map-first (pred rep list)$/;"	f
-map-indexed	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -map-indexed (fn list)$/;"	f
-map-last	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -map-last (pred rep list)$/;"	f
-map-when	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -map-when (pred rep list)$/;"	f
-mapcat	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -mapcat (fn list)$/;"	f
-max	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -max (list)$/;"	f
-max-by	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -max-by (comparator list)$/;"	f
-min	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -min (list)$/;"	f
-min-by	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -min-by (comparator list)$/;"	f
-non-nil	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -non-nil (list)$/;"	f
-none-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-none-p '-none?)$/;"	f
-none?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -none? (pred list)$/;"	f
-only-some-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-only-some-p '-only-some?)$/;"	f
-only-some?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -only-some? (pred list)$/;"	f
-pad	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -pad (fill-value &rest lists)$/;"	f
-partial	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -partial (fn &rest args)$/;"	f
-partition	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -partition (n list)$/;"	f
-partition-after-item	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -partition-after-item (item list)$/;"	f
-partition-after-pred	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -partition-after-pred (pred list)$/;"	f
-partition-all	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -partition-all (n list)$/;"	f
-partition-all-in-steps	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -partition-all-in-steps (n step list)$/;"	f
-partition-before-item	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -partition-before-item (item list)$/;"	f
-partition-before-pred	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -partition-before-pred (pred list)$/;"	f
-partition-by	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -partition-by (fn list)$/;"	f
-partition-by-header	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -partition-by-header (fn list)$/;"	f
-partition-in-steps	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -partition-in-steps (n step list)$/;"	f
-permutations	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -permutations (list)$/;"	f
-powerset	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -powerset (list)$/;"	f
-product	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -product (list)$/;"	f
-reduce	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -reduce (fn list)$/;"	f
-reduce-from	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -reduce-from (fn initial-value list)$/;"	f
-reduce-r	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -reduce-r (fn list)$/;"	f
-reduce-r-from	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -reduce-r-from (fn initial-value list)$/;"	f
-reductions	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -reductions (fn list)$/;"	f
-reductions-from	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -reductions-from (fn init list)$/;"	f
-reductions-r	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -reductions-r (fn list)$/;"	f
-reductions-r-from	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -reductions-r-from (fn init list)$/;"	f
-reject	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-reject '-remove)$/;"	f
-reject-first	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-reject-first '-remove-first)$/;"	f
-reject-last	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-reject-last '-remove-last)$/;"	f
-remove	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -remove (pred list)$/;"	f
-remove-at	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -remove-at (n list)$/;"	f
-remove-at-indices	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -remove-at-indices (indices list)$/;"	f
-remove-first	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -remove-first (pred list)$/;"	f
-remove-item	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -remove-item (item list)$/;"	f
-remove-last	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -remove-last (pred list)$/;"	f
-repeat	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -repeat (n x)$/;"	f
-replace	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -replace (old new list)$/;"	f
-replace-at	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -replace-at (n x list)$/;"	f
-replace-first	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -replace-first (old new list)$/;"	f
-replace-last	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -replace-last (old new list)$/;"	f
-replace-where	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-replace-where '-map-when)$/;"	f
-rotate	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -rotate (n list)$/;"	f
-running-product	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -running-product (list)$/;"	f
-running-sum	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -running-sum (list)$/;"	f
-same-items-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-same-items-p '-same-items?)$/;"	f
-same-items?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -same-items? (list list2)$/;"	f
-second-item	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-second-item 'cadr$/;"	f
-select	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-select '-filter)$/;"	f
-select-by-indices	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -select-by-indices (indices list)$/;"	f
-select-column	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -select-column (column table)$/;"	f
-select-columns	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -select-columns (columns table)$/;"	f
-separate	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -separate (pred list)$/;"	f
-setq	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -setq (&rest forms)$/;"	f
-slice	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -slice (list from &optional to step)$/;"	f
-snoc	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -snoc (list elem &rest elements)$/;"	f
-some	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -some (pred list)$/;"	f
-some-->	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -some--> (x &optional form &rest more)$/;"	f
-some->	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -some-> (x &optional form &rest more)$/;"	f
-some->>	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -some->> (x &optional form &rest more)$/;"	f
-some-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-some-p '-any?)$/;"	f
-some?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-some? '-any?)$/;"	f
-sort	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -sort (comparator list)$/;"	f
-splice	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -splice (pred fun list)$/;"	f
-splice-list	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -splice-list (pred new-list list)$/;"	f
-split-at	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -split-at (n list)$/;"	f
-split-on	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -split-on (item list)$/;"	f
-split-when	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -split-when (fn list)$/;"	f
-split-with	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -split-with (pred list)$/;"	f
-sum	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -sum (list)$/;"	f
-table	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -table (fn &rest lists)$/;"	f
-table-flat	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -table-flat (fn &rest lists)$/;"	f
-tails	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -tails (list)$/;"	f
-take	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -take (n list)$/;"	f
-take-last	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -take-last (n list)$/;"	f
-take-while	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -take-while (pred list)$/;"	f
-third-item	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-third-item 'caddr$/;"	f
-tree-map	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -tree-map (fn tree)$/;"	f
-tree-map-nodes	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -tree-map-nodes (pred fun tree)$/;"	f
-tree-mapreduce	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -tree-mapreduce (fn folder tree)$/;"	f
-tree-mapreduce-from	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -tree-mapreduce-from (fn folder init-value tree)$/;"	f
-tree-reduce	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -tree-reduce (fn tree)$/;"	f
-tree-reduce-from	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -tree-reduce-from (fn init-value tree)$/;"	f
-tree-seq	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -tree-seq (branch children tree)$/;"	f
-unfold	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -unfold (fun seed)$/;"	f
-union	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -union (list list2)$/;"	f
-uniq	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-uniq '-distinct)$/;"	f
-unzip	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -unzip (lists)$/;"	f
-update-at	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -update-at (n func list)$/;"	f
-value-to-list	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -value-to-list (val)$/;"	f
-when-let	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -when-let (var-val &rest body)$/;"	f
-when-let*	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defmacro -when-let* (vars-vals &rest body)$/;"	f
-zip	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -zip (&rest lists)$/;"	f
-zip-fill	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -zip-fill (fill-value &rest lists)$/;"	f
-zip-pair	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias '-zip-pair '-zip)$/;"	f
-zip-with	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun -zip-with (fn list1 list2)$/;"	f
DOC	.emacs.d/evil/Makefile	/^DOC = doc$/;"	m
ELCFILES	.emacs.d/evil/Makefile	/^ELCFILES = $(FILES:.el=.elc)$/;"	m
ELPAPKG	.emacs.d/evil/Makefile	/^ELPAPKG = evil-$(VERSION)$/;"	m
EMACS	.emacs.d/evil/Makefile	/^EMACS ?= emacs$/;"	m
FILES	.emacs.d/evil/Makefile	/^FILES = $(filter-out evil-test-helpers.el evil-tests.el evil-pkg.el,$(wildcard evil*.el))$/;"	m
Info-follow-nearest-node--magit-gitman	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun Info-follow-nearest-node--magit-gitman (fn &optional fork)$/;"	f
LIBS	.emacs.d/evil/Makefile	/^LIBS = -L lib$/;"	m
Man-notify-method	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar Man-notify-method)$/;"	f
PROFILER	.emacs.d/evil/Makefile	/^PROFILER =$/;"	m
SHELL	.emacs.d/evil/Makefile	/^SHELL = \/bin\/sh$/;"	m
TAG	.emacs.d/evil/Makefile	/^TAG =$/;"	m
VERSION	.emacs.d/evil/Makefile	/^VERSION := $(shell sed -ne '\/define-package\/,$$p' evil-pkg.el | sed -ne '\/^\\s*"[[:digit:]]\\+\\(\\.[[:digit:]]\\+\\)*"\\s*$$\/ s\/^.*"\\(.*\\)".*$$\/\\1\/p')$/;"	m
async	.emacs.d/elpa/async-20190503.656/async.el	/^(defgroup async nil$/;"	f
async--fold-left	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async--fold-left (fn forms bindings)$/;"	f
async--insert-sexp	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async--insert-sexp (sexp)$/;"	f
async--procvar	.emacs.d/elpa/async-20190503.656/async.el	/^(defvar async--procvar nil)$/;"	f
async--purecopy	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async--purecopy (object)$/;"	f
async--receive-sexp	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async--receive-sexp (&optional stream)$/;"	f
async--transmit-sexp	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async--transmit-sexp (process sexp)$/;"	f
async-batch-invoke	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async-batch-invoke ()$/;"	f
async-byte-compile-file	.emacs.d/elpa/async-20190503.656/async-bytecomp.el	/^(defun async-byte-compile-file (file)$/;"	f
async-byte-compile-log-file	.emacs.d/elpa/async-20190503.656/async-bytecomp.el	/^(defvar async-byte-compile-log-file$/;"	f
async-byte-recompile-directory	.emacs.d/elpa/async-20190503.656/async-bytecomp.el	/^(defun async-byte-recompile-directory (directory &optional quiet)$/;"	f
async-bytecomp--get-package-deps	.emacs.d/elpa/async-20190503.656/async-bytecomp.el	/^(defun async-bytecomp--get-package-deps (pkg &optional only)$/;"	f
async-bytecomp-allowed-packages	.emacs.d/elpa/async-20190503.656/async-bytecomp.el	/^(defcustom async-bytecomp-allowed-packages$/;"	f
async-bytecomp-get-allowed-pkgs	.emacs.d/elpa/async-20190503.656/async-bytecomp.el	/^(defun async-bytecomp-get-allowed-pkgs ()$/;"	f
async-bytecomp-package-mode	.emacs.d/elpa/async-20190503.656/async-autoloads.el	/^(defvar async-bytecomp-package-mode nil "\\$/;"	f
async-bytecomp-package-mode	.emacs.d/elpa/async-20190503.656/async-bytecomp.el	/^(define-minor-mode async-bytecomp-package-mode$/;"	f
async-callback	.emacs.d/elpa/async-20190503.656/async.el	/^(defvar async-callback nil)$/;"	f
async-callback-for-process	.emacs.d/elpa/async-20190503.656/async.el	/^(defvar async-callback-for-process nil)$/;"	f
async-callback-value	.emacs.d/elpa/async-20190503.656/async.el	/^(defvar async-callback-value nil)$/;"	f
async-callback-value-set	.emacs.d/elpa/async-20190503.656/async.el	/^(defvar async-callback-value-set nil)$/;"	f
async-current-process	.emacs.d/elpa/async-20190503.656/async.el	/^(defvar async-current-process nil)$/;"	f
async-debug	.emacs.d/elpa/async-20190503.656/async.el	/^(defvar async-debug nil)$/;"	f
async-get	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async-get (future)$/;"	f
async-handle-result	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async-handle-result (func result buf)$/;"	f
async-in-child-emacs	.emacs.d/elpa/async-20190503.656/async.el	/^(defvar async-in-child-emacs nil)$/;"	f
async-inject-environment	.emacs.d/elpa/async-20190503.656/async.el	/^(defalias 'async-inject-environment 'async-inject-variables)$/;"	f
async-inject-variables	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async-inject-variables$/;"	f
async-let	.emacs.d/elpa/async-20190503.656/async.el	/^(defmacro async-let (bindings &rest forms)$/;"	f
async-message-p	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async-message-p (value)$/;"	f
async-quiet-switch	.emacs.d/elpa/async-20190503.656/async.el	/^(defvar async-quiet-switch "-Q"$/;"	f
async-ready	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async-ready (future)$/;"	f
async-receive	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async-receive ()$/;"	f
async-sandbox	.emacs.d/elpa/async-20190503.656/async.el	/^(defmacro async-sandbox(func)$/;"	f
async-send	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async-send (&rest args)$/;"	f
async-send-over-pipe	.emacs.d/elpa/async-20190503.656/async.el	/^(defvar async-send-over-pipe t)$/;"	f
async-smtpmail-before-send-hook	.emacs.d/elpa/async-20190503.656/smtpmail-async.el	/^(defvar async-smtpmail-before-send-hook nil$/;"	f
async-smtpmail-send-it	.emacs.d/elpa/async-20190503.656/smtpmail-async.el	/^(defun async-smtpmail-send-it ()$/;"	f
async-start	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async-start (start-func &optional finish-func)$/;"	f
async-start-process	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async-start-process (name program finish-func &rest program-args)$/;"	f
async-variables-noprops-function	.emacs.d/elpa/async-20190503.656/async.el	/^(defcustom async-variables-noprops-function #'async--purecopy$/;"	f
async-wait	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async-wait (future)$/;"	f
async-when-done	.emacs.d/elpa/async-20190503.656/async.el	/^(defun async-when-done (proc &optional _change)$/;"	f
auto-revert-buffer-list-filter	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(defcustom auto-revert-buffer-list-filter nil$/;"	f
auto-revert-buffers--buffer-list-filter	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(defun auto-revert-buffers--buffer-list-filter ()$/;"	f
auto-revert-verbose	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defvar auto-revert-verbose)$/;"	f
bookmark-make-record-function	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar bookmark-make-record-function)$/;"	f
borg-user-emacs-directory	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defvar borg-user-emacs-directory)$/;"	f
bounds-of-evil-comment-at-point	.emacs.d/evil/evil-common.el	/^(defun bounds-of-evil-comment-at-point ()$/;"	f
bounds-of-evil-string-at-point	.emacs.d/evil/evil-common.el	/^(defun bounds-of-evil-string-at-point (&optional state)$/;"	f
buffer-undo-tree	.emacs.d/evil/lib/undo-tree.el	/^(defvar buffer-undo-tree nil$/;"	f
current-transient-command	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar current-transient-command nil$/;"	f
current-transient-prefix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar current-transient-prefix nil$/;"	f
current-transient-suffixes	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar current-transient-suffixes nil$/;"	f
dash	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defgroup dash ()$/;"	f
dash--enable-fontlock	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--enable-fontlock (symbol value)$/;"	f
dash--get-expand-function	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--get-expand-function (type)$/;"	f
dash--match	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match (match-form source)$/;"	f
dash--match-cons	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-cons (match-form source)$/;"	f
dash--match-cons-1	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-cons-1 (match-form source &optional props)$/;"	f
dash--match-cons-get-car	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-cons-get-car (skip-cdr source)$/;"	f
dash--match-cons-get-cdr	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-cons-get-cdr (skip-cdr source)$/;"	f
dash--match-cons-skip-cdr	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-cons-skip-cdr (skip-cdr source)$/;"	f
dash--match-ignore-place-p	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-ignore-place-p (symbol)$/;"	f
dash--match-kv	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-kv (match-form source)$/;"	f
dash--match-kv-1	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-kv-1 (match-form source type)$/;"	f
dash--match-kv-normalize-match-form	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-kv-normalize-match-form (pattern)$/;"	f
dash--match-make-source-symbol	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-make-source-symbol ()$/;"	f
dash--match-symbol	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-symbol (match-form source)$/;"	f
dash--match-vector	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-vector (match-form source)$/;"	f
dash--match-vector-1	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--match-vector-1 (match-form source)$/;"	f
dash--normalize-let-varlist	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--normalize-let-varlist (varlist)$/;"	f
dash--source-counter	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defvar dash--source-counter 0$/;"	f
dash--table-carry	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--table-carry (lists restore-lists &optional re)$/;"	f
dash--vector-tail	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash--vector-tail (seq start)$/;"	f
dash-enable-font-lock	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash-enable-font-lock ()$/;"	f
dash-enable-fontlock	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defcustom dash-enable-fontlock nil$/;"	f
dash-expand:&alist	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash-expand:&alist (key source)$/;"	f
dash-expand:&hash	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash-expand:&hash (key source)$/;"	f
dash-expand:&hash?	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash-expand:&hash? (key source)$/;"	f
dash-expand:&keys	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defalias 'dash-expand:&keys 'dash-expand:&plist)$/;"	f
dash-expand:&plist	.emacs.d/elpa/dash-20190424.1804/dash.el	/^(defun dash-expand:&plist (key source)$/;"	f
define-infix-argument	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defalias 'define-infix-argument 'define-infix-command$/;"	f
define-infix-command	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defmacro define-infix-command (name _arglist &rest args)$/;"	f
define-suffix-command	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defmacro define-suffix-command (name arglist &rest args)$/;"	f
define-transient-command	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defmacro define-transient-command (name arglist &rest args)$/;"	f
describe-char	.emacs.d/evil/evil-integration.el	/^(defadvice describe-char (around evil activate)$/;"	f
die	.emacs.d/evil/scripts/evil-release-stable	/^def die(msg = "Failed")$/;"	f
diff-default-read-only	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defvar diff-default-read-only)$/;"	f
dired-async	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defgroup dired-async nil$/;"	f
dired-async--modeline-mode	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(define-minor-mode dired-async--modeline-mode$/;"	f
dired-async--with-async-create-files	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defmacro dired-async--with-async-create-files (&rest body)$/;"	f
dired-async-after-file-create	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defun dired-async-after-file-create (total operation failures skipped)$/;"	f
dired-async-create-files	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defun dired-async-create-files (file-creator operation fn-list name-constructor$/;"	f
dired-async-do-copy	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defun dired-async-do-copy (&optional arg)$/;"	f
dired-async-do-hardlink	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defun dired-async-do-hardlink (&optional arg)$/;"	f
dired-async-do-rename	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defun dired-async-do-rename (&optional arg)$/;"	f
dired-async-do-symlink	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defun dired-async-do-symlink (&optional arg)$/;"	f
dired-async-env-variables-regexp	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defcustom dired-async-env-variables-regexp$/;"	f
dired-async-failures	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defface dired-async-failures$/;"	f
dired-async-kill-process	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defun dired-async-kill-process ()$/;"	f
dired-async-log-file	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defcustom dired-async-log-file "\/tmp\/dired-async.log"$/;"	f
dired-async-maybe-kill-ftp	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defun dired-async-maybe-kill-ftp ()$/;"	f
dired-async-message	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defface dired-async-message$/;"	f
dired-async-message-function	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defcustom dired-async-message-function 'dired-async-mode-line-message$/;"	f
dired-async-mode	.emacs.d/elpa/async-20190503.656/async-autoloads.el	/^(defvar dired-async-mode nil "\\$/;"	f
dired-async-mode	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(define-minor-mode dired-async-mode$/;"	f
dired-async-mode-lighter	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defcustom dired-async-mode-lighter '(:eval$/;"	f
dired-async-mode-line-message	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defun dired-async-mode-line-message (text face &rest args)$/;"	f
dired-async-mode-message	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defface dired-async-mode-message$/;"	f
dired-async-processes	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defun dired-async-processes ()$/;"	f
dired-async-wdired-do-renames	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defun dired-async-wdired-do-renames (old-fn &rest args)$/;"	f
dired-create-files	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defadvice dired-create-files (around dired-async)$/;"	f
disable-magit-save-buffers	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar disable-magit-save-buffers nil)$/;"	f
ert	.emacs.d/evil/lib/ert.el	/^(defalias 'ert 'ert-run-tests-interactively)$/;"	f
ert	.emacs.d/evil/lib/ert.el	/^(defgroup ert ()$/;"	f
ert--abbreviate-string	.emacs.d/evil/lib/ert.el	/^(defun ert--abbreviate-string (s len suffixp)$/;"	f
ert--activate-font-lock-keywords	.emacs.d/evil/lib/ert.el	/^(defun ert--activate-font-lock-keywords ()$/;"	f
ert--button-action-position	.emacs.d/evil/lib/ert.el	/^(defun ert--button-action-position ()$/;"	f
ert--cl-do-remf	.emacs.d/evil/lib/ert.el	/^(defun ert--cl-do-remf (plist tag)$/;"	f
ert--coerce-to-vector	.emacs.d/evil/lib/ert.el	/^(defun ert--coerce-to-vector (x)$/;"	f
ert--current-run-stats	.emacs.d/evil/lib/ert.el	/^(defvar ert--current-run-stats nil)$/;"	f
ert--ewoc-entry	.emacs.d/evil/lib/ert.el	/^(defstruct ert--ewoc-entry$/;"	f
ert--ewoc-position	.emacs.d/evil/lib/ert.el	/^(defun ert--ewoc-position (ewoc node)$/;"	f
ert--expand-should	.emacs.d/evil/lib/ert.el	/^(defun ert--expand-should (whole form inner-expander)$/;"	f
ert--expand-should-1	.emacs.d/evil/lib/ert.el	/^(defun ert--expand-should-1 (whole form inner-expander)$/;"	f
ert--explain-equal	.emacs.d/evil/lib/ert.el	/^(defun ert--explain-equal (a b)$/;"	f
ert--explain-equal-including-properties	.emacs.d/evil/lib/ert.el	/^(defun ert--explain-equal-including-properties (a b)$/;"	f
ert--explain-equal-rec	.emacs.d/evil/lib/ert.el	/^(defun ert--explain-equal-rec (a b)$/;"	f
ert--explain-format-atom	.emacs.d/evil/lib/ert.el	/^(defun ert--explain-format-atom (x)$/;"	f
ert--find-test-regexp	.emacs.d/evil/lib/ert.el	/^(defvar ert--find-test-regexp$/;"	f
ert--force-message-log-buffer-truncation	.emacs.d/evil/lib/ert.el	/^(defun ert--force-message-log-buffer-truncation ()$/;"	f
ert--format-time-iso8601	.emacs.d/evil/lib/ert.el	/^(defun ert--format-time-iso8601 (time)$/;"	f
ert--infos	.emacs.d/evil/lib/ert.el	/^(defvar ert--infos '()$/;"	f
ert--insert-human-readable-selector	.emacs.d/evil/lib/ert.el	/^(defun ert--insert-human-readable-selector (selector)$/;"	f
ert--insert-infos	.emacs.d/evil/lib/ert.el	/^(defun ert--insert-infos (result)$/;"	f
ert--intersection	.emacs.d/evil/lib/ert.el	/^(defun ert--intersection (a b)$/;"	f
ert--make-stats	.emacs.d/evil/lib/ert.el	/^(defun ert--make-stats (tests selector)$/;"	f
ert--make-xrefs-region	.emacs.d/evil/lib/ert.el	/^(defun ert--make-xrefs-region (begin end)$/;"	f
ert--mismatch	.emacs.d/evil/lib/ert.el	/^(defun ert--mismatch (a b)$/;"	f
ert--parse-keys-and-body	.emacs.d/evil/lib/ert.el	/^(defun ert--parse-keys-and-body (keys-and-body)$/;"	f
ert--plist-difference-explanation	.emacs.d/evil/lib/ert.el	/^(defun ert--plist-difference-explanation (a b)$/;"	f
ert--pp-with-indentation-and-newline	.emacs.d/evil/lib/ert.el	/^(defun ert--pp-with-indentation-and-newline (object)$/;"	f
ert--print-backtrace	.emacs.d/evil/lib/ert.el	/^(defun ert--print-backtrace (backtrace)$/;"	f
ert--print-test-for-ewoc	.emacs.d/evil/lib/ert.el	/^(defun ert--print-test-for-ewoc (entry)$/;"	f
ert--proper-list-p	.emacs.d/evil/lib/ert.el	/^(defun ert--proper-list-p (x)$/;"	f
ert--record-backtrace	.emacs.d/evil/lib/ert.el	/^(defun ert--record-backtrace ()$/;"	f
ert--remove*	.emacs.d/evil/lib/ert.el	/^(defun* ert--remove* (x list &key key test)$/;"	f
ert--remove-from-list	.emacs.d/evil/lib/ert.el	/^(defun* ert--remove-from-list (list-var element &key key test)$/;"	f
ert--remove-if-not	.emacs.d/evil/lib/ert.el	/^(defun ert--remove-if-not (ert-pred ert-list)$/;"	f
ert--remprop	.emacs.d/evil/lib/ert.el	/^(defun ert--remprop (sym tag)$/;"	f
ert--results-ewoc	.emacs.d/evil/lib/ert.el	/^(defvar ert--results-ewoc)$/;"	f
ert--results-expand-collapse-button	.emacs.d/evil/lib/ert.el	/^(define-button-type 'ert--results-expand-collapse-button$/;"	f
ert--results-expand-collapse-button-action	.emacs.d/evil/lib/ert.el	/^(defun ert--results-expand-collapse-button-action (button)$/;"	f
ert--results-font-lock-function	.emacs.d/evil/lib/ert.el	/^(defun ert--results-font-lock-function (enabledp)$/;"	f
ert--results-format-expected-unexpected	.emacs.d/evil/lib/ert.el	/^(defun ert--results-format-expected-unexpected (expected unexpected)$/;"	f
ert--results-listener	.emacs.d/evil/lib/ert.el	/^(defvar ert--results-listener)$/;"	f
ert--results-move	.emacs.d/evil/lib/ert.el	/^(defun ert--results-move (node ewoc-fn error-message)$/;"	f
ert--results-progress-bar-button	.emacs.d/evil/lib/ert.el	/^(define-button-type 'ert--results-progress-bar-button$/;"	f
ert--results-progress-bar-button-action	.emacs.d/evil/lib/ert.el	/^(defun ert--results-progress-bar-button-action (button)$/;"	f
ert--results-progress-bar-button-begin	.emacs.d/evil/lib/ert.el	/^(defvar ert--results-progress-bar-button-begin)$/;"	f
ert--results-progress-bar-string	.emacs.d/evil/lib/ert.el	/^(defvar ert--results-progress-bar-string)$/;"	f
ert--results-stats	.emacs.d/evil/lib/ert.el	/^(defvar ert--results-stats)$/;"	f
ert--results-test-at-point-allow-redefinition	.emacs.d/evil/lib/ert.el	/^(defun ert--results-test-at-point-allow-redefinition ()$/;"	f
ert--results-test-at-point-no-redefinition	.emacs.d/evil/lib/ert.el	/^(defun ert--results-test-at-point-no-redefinition ()$/;"	f
ert--results-test-node-at-point	.emacs.d/evil/lib/ert.el	/^(defun ert--results-test-node-at-point ()$/;"	f
ert--results-test-node-or-null-at-point	.emacs.d/evil/lib/ert.el	/^(defun ert--results-test-node-or-null-at-point ()$/;"	f
ert--results-update-after-test-redefinition	.emacs.d/evil/lib/ert.el	/^(defun ert--results-update-after-test-redefinition (pos new-test)$/;"	f
ert--results-update-ewoc-hf	.emacs.d/evil/lib/ert.el	/^(defun ert--results-update-ewoc-hf (ewoc stats)$/;"	f
ert--results-update-stats-display	.emacs.d/evil/lib/ert.el	/^(defun ert--results-update-stats-display (ewoc stats)$/;"	f
ert--results-update-stats-display-maybe	.emacs.d/evil/lib/ert.el	/^(defun ert--results-update-stats-display-maybe (ewoc stats)$/;"	f
ert--run-test-debugger	.emacs.d/evil/lib/ert.el	/^(defun ert--run-test-debugger (info debugger-args)$/;"	f
ert--run-test-internal	.emacs.d/evil/lib/ert.el	/^(defun ert--run-test-internal (ert-test-execution-info)$/;"	f
ert--running-tests	.emacs.d/evil/lib/ert.el	/^(defvar ert--running-tests nil$/;"	f
ert--selector-history	.emacs.d/evil/lib/ert.el	/^(defvar ert--selector-history nil$/;"	f
ert--set-difference	.emacs.d/evil/lib/ert.el	/^(defun ert--set-difference (a b)$/;"	f
ert--set-difference-eq	.emacs.d/evil/lib/ert.el	/^(defun ert--set-difference-eq (a b)$/;"	f
ert--setup-results-buffer	.emacs.d/evil/lib/ert.el	/^(defun ert--setup-results-buffer (stats listener buffer-name)$/;"	f
ert--should-error-handle-error	.emacs.d/evil/lib/ert.el	/^(defun ert--should-error-handle-error (form-description-fn$/;"	f
ert--should-execution-observer	.emacs.d/evil/lib/ert.el	/^(defvar ert--should-execution-observer nil)$/;"	f
ert--signal-should-execution	.emacs.d/evil/lib/ert.el	/^(defun ert--signal-should-execution (form-description)$/;"	f
ert--significant-plist-keys	.emacs.d/evil/lib/ert.el	/^(defun ert--significant-plist-keys (plist)$/;"	f
ert--special-operator-p	.emacs.d/evil/lib/ert.el	/^(defun ert--special-operator-p (thing)$/;"	f
ert--stats	.emacs.d/evil/lib/ert.el	/^(defstruct ert--stats$/;"	f
ert--stats-set-test-and-result	.emacs.d/evil/lib/ert.el	/^(defun ert--stats-set-test-and-result (stats pos test result)$/;"	f
ert--stats-test-key	.emacs.d/evil/lib/ert.el	/^(defun ert--stats-test-key (test)$/;"	f
ert--stats-test-pos	.emacs.d/evil/lib/ert.el	/^(defun ert--stats-test-pos (stats test)$/;"	f
ert--string-first-line	.emacs.d/evil/lib/ert.el	/^(defun ert--string-first-line (s)$/;"	f
ert--string-position	.emacs.d/evil/lib/ert.el	/^(defun ert--string-position (c s)$/;"	f
ert--subseq	.emacs.d/evil/lib/ert.el	/^(defun ert--subseq (seq start &optional end)$/;"	f
ert--test-execution-info	.emacs.d/evil/lib/ert.el	/^(defstruct ert--test-execution-info$/;"	f
ert--test-name-button	.emacs.d/evil/lib/ert.el	/^(define-button-type 'ert--test-name-button$/;"	f
ert--test-name-button-action	.emacs.d/evil/lib/ert.el	/^(defun ert--test-name-button-action (button)$/;"	f
ert--tests-running-mode-line-indicator	.emacs.d/evil/lib/ert.el	/^(defun ert--tests-running-mode-line-indicator ()$/;"	f
ert--union	.emacs.d/evil/lib/ert.el	/^(defun ert--union (a b)$/;"	f
ert--unload-function	.emacs.d/evil/lib/ert.el	/^(defun ert--unload-function ()$/;"	f
ert-batch-backtrace-right-margin	.emacs.d/evil/lib/ert.el	/^(defvar ert-batch-backtrace-right-margin 70$/;"	f
ert-char-for-test-result	.emacs.d/evil/lib/ert.el	/^(defun ert-char-for-test-result (result expectedp)$/;"	f
ert-debug-on-error	.emacs.d/evil/lib/ert.el	/^(defvar ert-debug-on-error nil$/;"	f
ert-deftest	.emacs.d/evil/lib/ert.el	/^(defmacro* ert-deftest (name () &body docstring-keys-and-body)$/;"	f
ert-delete-all-tests	.emacs.d/evil/lib/ert.el	/^(defun ert-delete-all-tests ()$/;"	f
ert-delete-test	.emacs.d/evil/lib/ert.el	/^(defun ert-delete-test (test-name)$/;"	f
ert-describe-test	.emacs.d/evil/lib/ert.el	/^(defun ert-describe-test (test-or-test-name)$/;"	f
ert-equal-including-properties	.emacs.d/evil/lib/ert.el	/^(defun ert-equal-including-properties (a b)$/;"	f
ert-face-for-stats	.emacs.d/evil/lib/ert.el	/^(defun ert-face-for-stats (stats)$/;"	f
ert-face-for-test-result	.emacs.d/evil/lib/ert.el	/^(defun ert-face-for-test-result (expectedp)$/;"	f
ert-fail	.emacs.d/evil/lib/ert.el	/^(defun ert-fail (data)$/;"	f
ert-find-test-other-window	.emacs.d/evil/lib/ert.el	/^(defun ert-find-test-other-window (test-name)$/;"	f
ert-get-test	.emacs.d/evil/lib/ert.el	/^(defun ert-get-test (symbol)$/;"	f
ert-info	.emacs.d/evil/lib/ert.el	/^(defmacro* ert-info ((message-form &key ((:prefix prefix-form) "Info: "))$/;"	f
ert-insert-test-name-button	.emacs.d/evil/lib/ert.el	/^(defun ert-insert-test-name-button (test-name)$/;"	f
ert-make-test-unbound	.emacs.d/evil/lib/ert.el	/^(defun ert-make-test-unbound (symbol)$/;"	f
ert-pass	.emacs.d/evil/lib/ert.el	/^(defun ert-pass ()$/;"	f
ert-read-test-name	.emacs.d/evil/lib/ert.el	/^(defun ert-read-test-name (prompt &optional default history$/;"	f
ert-read-test-name-at-point	.emacs.d/evil/lib/ert.el	/^(defun ert-read-test-name-at-point (prompt)$/;"	f
ert-results-describe-test-at-point	.emacs.d/evil/lib/ert.el	/^(defun ert-results-describe-test-at-point ()$/;"	f
ert-results-find-test-at-point-other-window	.emacs.d/evil/lib/ert.el	/^(defun ert-results-find-test-at-point-other-window ()$/;"	f
ert-results-jump-between-summary-and-result	.emacs.d/evil/lib/ert.el	/^(defun ert-results-jump-between-summary-and-result ()$/;"	f
ert-results-mode	.emacs.d/evil/lib/ert.el	/^(define-derived-mode ert-results-mode special-mode "ERT-Results"$/;"	f
ert-results-next-test	.emacs.d/evil/lib/ert.el	/^(defun ert-results-next-test ()$/;"	f
ert-results-pop-to-backtrace-for-test-at-point	.emacs.d/evil/lib/ert.el	/^(defun ert-results-pop-to-backtrace-for-test-at-point ()$/;"	f
ert-results-pop-to-messages-for-test-at-point	.emacs.d/evil/lib/ert.el	/^(defun ert-results-pop-to-messages-for-test-at-point ()$/;"	f
ert-results-pop-to-should-forms-for-test-at-point	.emacs.d/evil/lib/ert.el	/^(defun ert-results-pop-to-should-forms-for-test-at-point ()$/;"	f
ert-results-pop-to-timings	.emacs.d/evil/lib/ert.el	/^(defun ert-results-pop-to-timings ()$/;"	f
ert-results-previous-test	.emacs.d/evil/lib/ert.el	/^(defun ert-results-previous-test ()$/;"	f
ert-results-rerun-all-tests	.emacs.d/evil/lib/ert.el	/^(defun ert-results-rerun-all-tests ()$/;"	f
ert-results-rerun-test-at-point	.emacs.d/evil/lib/ert.el	/^(defun ert-results-rerun-test-at-point ()$/;"	f
ert-results-rerun-test-at-point-debugging-errors	.emacs.d/evil/lib/ert.el	/^(defun ert-results-rerun-test-at-point-debugging-errors ()$/;"	f
ert-results-toggle-printer-limits-for-test-at-point	.emacs.d/evil/lib/ert.el	/^(defun ert-results-toggle-printer-limits-for-test-at-point ()$/;"	f
ert-run-or-rerun-test	.emacs.d/evil/lib/ert.el	/^(defun ert-run-or-rerun-test (stats test listener)$/;"	f
ert-run-test	.emacs.d/evil/lib/ert.el	/^(defun ert-run-test (ert-test)$/;"	f
ert-run-tests	.emacs.d/evil/lib/ert.el	/^(defun ert-run-tests (selector listener)$/;"	f
ert-run-tests-batch	.emacs.d/evil/lib/ert.el	/^(defun ert-run-tests-batch (&optional selector)$/;"	f
ert-run-tests-batch-and-exit	.emacs.d/evil/lib/ert.el	/^(defun ert-run-tests-batch-and-exit (&optional selector)$/;"	f
ert-run-tests-interactively	.emacs.d/evil/lib/ert.el	/^(defun ert-run-tests-interactively (selector$/;"	f
ert-running-test	.emacs.d/evil/lib/ert.el	/^(defun ert-running-test ()$/;"	f
ert-select-tests	.emacs.d/evil/lib/ert.el	/^(defun ert-select-tests (selector universe)$/;"	f
ert-set-test	.emacs.d/evil/lib/ert.el	/^(defun ert-set-test (symbol definition)$/;"	f
ert-simple-view-mode	.emacs.d/evil/lib/ert.el	/^(define-derived-mode ert-simple-view-mode special-mode "ERT-View"$/;"	f
ert-stats-completed	.emacs.d/evil/lib/ert.el	/^(defun ert-stats-completed (stats)$/;"	f
ert-stats-completed-expected	.emacs.d/evil/lib/ert.el	/^(defun ert-stats-completed-expected (stats)$/;"	f
ert-stats-completed-unexpected	.emacs.d/evil/lib/ert.el	/^(defun ert-stats-completed-unexpected (stats)$/;"	f
ert-stats-total	.emacs.d/evil/lib/ert.el	/^(defun ert-stats-total (stats)$/;"	f
ert-string-for-test-result	.emacs.d/evil/lib/ert.el	/^(defun ert-string-for-test-result (result expectedp)$/;"	f
ert-test	.emacs.d/evil/lib/ert.el	/^(defstruct ert-test$/;"	f
ert-test-at-point	.emacs.d/evil/lib/ert.el	/^(defun ert-test-at-point ()$/;"	f
ert-test-boundp	.emacs.d/evil/lib/ert.el	/^(defun ert-test-boundp (symbol)$/;"	f
ert-test-result	.emacs.d/evil/lib/ert.el	/^(defstruct ert-test-result$/;"	f
ert-test-result-expected	.emacs.d/evil/lib/ert.el	/^(defface ert-test-result-expected '((((class color) (background light))$/;"	f
ert-test-result-expected-p	.emacs.d/evil/lib/ert.el	/^(defun ert-test-result-expected-p (test result)$/;"	f
ert-test-result-type-p	.emacs.d/evil/lib/ert.el	/^(defun ert-test-result-type-p (result result-type)$/;"	f
ert-test-result-unexpected	.emacs.d/evil/lib/ert.el	/^(defface ert-test-result-unexpected '((((class color) (background light))$/;"	f
ert-test-run-redisplay-interval-secs	.emacs.d/evil/lib/ert.el	/^(defvar ert-test-run-redisplay-interval-secs .1$/;"	f
ert-unload-hook	.emacs.d/evil/lib/ert.el	/^(defvar ert-unload-hook '())$/;"	f
eshell-preoutput-filter-functions	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar eshell-preoutput-filter-functions)$/;"	f
evil	.emacs.d/evil/evil-vars.el	/^(defgroup evil nil$/;"	f
evil--ex-remove-echo-overlay	.emacs.d/evil/evil-ex.el	/^(defun evil--ex-remove-echo-overlay ()$/;"	f
evil--flyspell-overlay-after	.emacs.d/evil/evil-commands.el	/^(defun evil--flyspell-overlay-after (pos limit forwardp)$/;"	f
evil--flyspell-overlay-at	.emacs.d/evil/evil-commands.el	/^(defun evil--flyspell-overlay-at (pos forwardp)$/;"	f
evil--flyspell-overlays-in-p	.emacs.d/evil/evil-commands.el	/^(defun evil--flyspell-overlays-in-p (beg end)$/;"	f
evil--get-block-range	.emacs.d/evil/evil-common.el	/^(defun evil--get-block-range (op cl selection-type)$/;"	f
evil--jump-backward	.emacs.d/evil/evil-jumps.el	/^(defun evil--jump-backward (count)$/;"	f
evil--jump-forward	.emacs.d/evil/evil-jumps.el	/^(defun evil--jump-forward (count)$/;"	f
evil--jump-hook	.emacs.d/evil/evil-jumps.el	/^(defun evil--jump-hook (&optional command)$/;"	f
evil--jumps-buffer-targets	.emacs.d/evil/evil-jumps.el	/^(defvar evil--jumps-buffer-targets "\\\\*\\\\(new\\\\|scratch\\\\)\\\\*"$/;"	f
evil--jumps-get-current	.emacs.d/evil/evil-jumps.el	/^(defun evil--jumps-get-current (&optional window)$/;"	f
evil--jumps-get-jumps	.emacs.d/evil/evil-jumps.el	/^(defun evil--jumps-get-jumps (struct)$/;"	f
evil--jumps-get-window-jump-list	.emacs.d/evil/evil-jumps.el	/^(defun evil--jumps-get-window-jump-list ()$/;"	f
evil--jumps-jump	.emacs.d/evil/evil-jumps.el	/^(defun evil--jumps-jump (idx shift)$/;"	f
evil--jumps-jumping	.emacs.d/evil/evil-jumps.el	/^(defvar evil--jumps-jumping nil)$/;"	f
evil--jumps-message	.emacs.d/evil/evil-jumps.el	/^(defmacro evil--jumps-message (format &rest args)$/;"	f
evil--jumps-push	.emacs.d/evil/evil-jumps.el	/^(defun evil--jumps-push ()$/;"	f
evil--jumps-savehist-load	.emacs.d/evil/evil-jumps.el	/^(defun evil--jumps-savehist-load ()$/;"	f
evil--jumps-savehist-sync	.emacs.d/evil/evil-jumps.el	/^(defun evil--jumps-savehist-sync ()$/;"	f
evil--jumps-window-configuration-hook	.emacs.d/evil/evil-jumps.el	/^(defun evil--jumps-window-configuration-hook (&rest args)$/;"	f
evil--jumps-window-jumps	.emacs.d/evil/evil-jumps.el	/^(defvar evil--jumps-window-jumps (make-hash-table)$/;"	f
evil--mode-p	.emacs.d/evil/evil-commands.el	/^(defun evil--mode-p (modes)$/;"	f
evil--next-flyspell-error	.emacs.d/evil/evil-commands.el	/^(defun evil--next-flyspell-error (forwardp)$/;"	f
evil--self-insert-string	.emacs.d/evil/evil-commands.el	/^(defun evil--self-insert-string (string)$/;"	f
evil--show-jumps-select-action	.emacs.d/evil/evil-jumps.el	/^(defun evil--show-jumps-select-action (jump)$/;"	f
evil--show-marks-select-action	.emacs.d/evil/evil-commands.el	/^(defun evil--show-marks-select-action (entry)$/;"	f
evil-ace-jump-active	.emacs.d/evil/evil-integration.el	/^(defvar evil-ace-jump-active nil)$/;"	f
evil-ace-jump-exit-recursive-edit	.emacs.d/evil/evil-integration.el	/^(defun evil-ace-jump-exit-recursive-edit ()$/;"	f
evil-activate-input-method	.emacs.d/evil/evil-core.el	/^(defun evil-activate-input-method ()$/;"	f
evil-active-region	.emacs.d/evil/evil-common.el	/^(defun evil-active-region (&optional arg)$/;"	f
evil-add-command-properties	.emacs.d/evil/evil-common.el	/^(defun evil-add-command-properties (command &rest properties)$/;"	f
evil-add-hjkl-bindings	.emacs.d/evil/evil-core.el	/^(defmacro evil-add-hjkl-bindings (keymap &optional state &rest bindings)$/;"	f
evil-add-to-alist	.emacs.d/evil/evil-common.el	/^(defun evil-add-to-alist (list-var key val &rest elements)$/;"	f
evil-adjust-cursor	.emacs.d/evil/evil-common.el	/^(defun evil-adjust-cursor (&optional force)$/;"	f
evil-after-load-hook	.emacs.d/evil/evil-vars.el	/^(defvar evil-after-load-hook nil$/;"	f
evil-alternate-buffer	.emacs.d/evil/evil-commands.el	/^(defun evil-alternate-buffer (&optional window)$/;"	f
evil-append	.emacs.d/evil/evil-commands.el	/^(defun evil-append (count &optional vcount skip-empty-lines)$/;"	f
evil-append-line	.emacs.d/evil/evil-commands.el	/^(defun evil-append-line (count &optional vcount)$/;"	f
evil-apply-on-block	.emacs.d/evil/evil-common.el	/^(defun evil-apply-on-block (func beg end pass-columns &rest args)$/;"	f
evil-apply-on-rectangle	.emacs.d/evil/evil-common.el	/^(defun evil-apply-on-rectangle (function start end &rest args)$/;"	f
evil-auto-balance-windows	.emacs.d/evil/evil-vars.el	/^(defcustom evil-auto-balance-windows t$/;"	f
evil-auto-indent	.emacs.d/evil/evil-vars.el	/^(defcustom evil-auto-indent t$/;"	f
evil-auxiliary-keymap-p	.emacs.d/evil/evil-core.el	/^(defun evil-auxiliary-keymap-p (map)$/;"	f
evil-backspace-join-lines	.emacs.d/evil/evil-vars.el	/^(defcustom evil-backspace-join-lines t$/;"	f
evil-backward-beginning	.emacs.d/evil/evil-common.el	/^(defun evil-backward-beginning (thing &optional count)$/;"	f
evil-backward-end	.emacs.d/evil/evil-common.el	/^(defun evil-backward-end (thing &optional count)$/;"	f
evil-bigword	.emacs.d/evil/evil-vars.el	/^(defcustom evil-bigword "^ \\t\\r\\n"$/;"	f
evil-bounds-of-not-thing-at-point	.emacs.d/evil/evil-common.el	/^(defun evil-bounds-of-not-thing-at-point (thing &optional which)$/;"	f
evil-buffer-regexps	.emacs.d/evil/evil-vars.el	/^(defcustom evil-buffer-regexps$/;"	f
evil-called-interactively-p	.emacs.d/evil/evil-common.el	/^(defmacro evil-called-interactively-p ()$/;"	f
evil-change-commands	.emacs.d/evil/evil-vars.el	/^(defvar evil-change-commands '(evil-change)$/;"	f
evil-change-state	.emacs.d/evil/evil-core.el	/^(defun evil-change-state (state &optional message)$/;"	f
evil-cjk	.emacs.d/evil/evil-vars.el	/^(defgroup evil-cjk nil$/;"	f
evil-cjk-emacs-word-boundary	.emacs.d/evil/evil-vars.el	/^(defcustom evil-cjk-emacs-word-boundary nil$/;"	f
evil-cjk-word-combining-categories	.emacs.d/evil/evil-vars.el	/^(defcustom evil-cjk-word-combining-categories$/;"	f
evil-cjk-word-separating-categories	.emacs.d/evil/evil-vars.el	/^(defcustom evil-cjk-word-separating-categories$/;"	f
evil-clean-isearch-overlays	.emacs.d/evil/evil-search.el	/^(defun evil-clean-isearch-overlays ()$/;"	f
evil-cleanup-insert-state	.emacs.d/evil/evil-states.el	/^(defun evil-cleanup-insert-state ()$/;"	f
evil-clear-command-keys	.emacs.d/evil/evil-repeat.el	/^(defun evil-clear-command-keys ()$/;"	f
evil-column	.emacs.d/evil/evil-common.el	/^(defun evil-column (&optional pos)$/;"	f
evil-command-properties	.emacs.d/evil/evil-vars.el	/^(defvar evil-command-properties nil$/;"	f
evil-command-window	.emacs.d/evil/evil-command-window.el	/^(defun evil-command-window (hist cmd-key execute-fn)$/;"	f
evil-command-window-current-buffer	.emacs.d/evil/evil-vars.el	/^(defvar evil-command-window-current-buffer nil$/;"	f
evil-command-window-draw-prefix	.emacs.d/evil/evil-command-window.el	/^(defun evil-command-window-draw-prefix (&rest ignored)$/;"	f
evil-command-window-ex	.emacs.d/evil/evil-command-window.el	/^(defun evil-command-window-ex (&optional current-command)$/;"	f
evil-command-window-ex-execute	.emacs.d/evil/evil-command-window.el	/^(defun evil-command-window-ex-execute (result)$/;"	f
evil-command-window-execute	.emacs.d/evil/evil-command-window.el	/^(defun evil-command-window-execute ()$/;"	f
evil-command-window-height	.emacs.d/evil/evil-vars.el	/^(defcustom evil-command-window-height 8$/;"	f
evil-command-window-insert-commands	.emacs.d/evil/evil-command-window.el	/^(defun evil-command-window-insert-commands (hist)$/;"	f
evil-command-window-mode	.emacs.d/evil/evil-command-window.el	/^(define-derived-mode evil-command-window-mode fundamental-mode "Evil-cmd"$/;"	f
evil-command-window-search-backward	.emacs.d/evil/evil-command-window.el	/^(defun evil-command-window-search-backward ()$/;"	f
evil-command-window-search-execute	.emacs.d/evil/evil-command-window.el	/^(defun evil-command-window-search-execute (result forward)$/;"	f
evil-command-window-search-forward	.emacs.d/evil/evil-command-window.el	/^(defun evil-command-window-search-forward ()$/;"	f
evil-compile-replacement	.emacs.d/evil/evil-common.el	/^(defun evil-compile-replacement (to)$/;"	f
evil-compile-subreplacement	.emacs.d/evil/evil-common.el	/^(defun evil-compile-subreplacement (to &optional start)$/;"	f
evil-complete-all-buffers	.emacs.d/evil/evil-vars.el	/^(defcustom evil-complete-all-buffers t$/;"	f
evil-complete-next-func	.emacs.d/evil/evil-vars.el	/^(defcustom evil-complete-next-func$/;"	f
evil-complete-next-line-func	.emacs.d/evil/evil-vars.el	/^(defcustom evil-complete-next-line-func$/;"	f
evil-complete-next-minibuffer-func	.emacs.d/evil/evil-vars.el	/^(defcustom evil-complete-next-minibuffer-func 'minibuffer-complete$/;"	f
evil-complete-previous-func	.emacs.d/evil/evil-vars.el	/^(defcustom evil-complete-previous-func$/;"	f
evil-complete-previous-line-func	.emacs.d/evil/evil-vars.el	/^(defcustom evil-complete-previous-line-func$/;"	f
evil-complete-previous-minibuffer-func	.emacs.d/evil/evil-vars.el	/^(defcustom evil-complete-previous-minibuffer-func 'minibuffer-complete$/;"	f
evil-completion-table-concat	.emacs.d/evil/evil-ex.el	/^(defun evil-completion-table-concat (table1 table2 string pred flag)$/;"	f
evil-concat-alists	.emacs.d/evil/evil-common.el	/^(defun evil-concat-alists (&rest sequences)$/;"	f
evil-concat-charsets	.emacs.d/evil/evil-common.el	/^(defun evil-concat-charsets (&rest sets)$/;"	f
evil-concat-keymap-alists	.emacs.d/evil/evil-common.el	/^(defun evil-concat-keymap-alists (&rest sequences)$/;"	f
evil-concat-lists	.emacs.d/evil/evil-common.el	/^(defun evil-concat-lists (&rest sequences)$/;"	f
evil-concat-plists	.emacs.d/evil/evil-common.el	/^(defun evil-concat-plists (&rest sequences)$/;"	f
evil-concat-ranges	.emacs.d/evil/evil-common.el	/^(defun evil-concat-ranges (ranges)$/;"	f
evil-concatenate-interactive-forms	.emacs.d/evil/evil-common.el	/^(defun evil-concatenate-interactive-forms (&rest forms)$/;"	f
evil-contract	.emacs.d/evil/evil-common.el	/^(defun evil-contract (beg end type &rest properties)$/;"	f
evil-contract-range	.emacs.d/evil/evil-common.el	/^(defun evil-contract-range (range &optional copy)$/;"	f
evil-copy-chars-from-line	.emacs.d/evil/evil-commands.el	/^(defun evil-copy-chars-from-line (n num &optional col)$/;"	f
evil-copy-from-above	.emacs.d/evil/evil-commands.el	/^(defun evil-copy-from-above (arg)$/;"	f
evil-copy-from-below	.emacs.d/evil/evil-commands.el	/^(defun evil-copy-from-below (arg)$/;"	f
evil-copy-range	.emacs.d/evil/evil-common.el	/^(defun evil-copy-range (range)$/;"	f
evil-count-lines	.emacs.d/evil/evil-common.el	/^(defun evil-count-lines (beg end)$/;"	f
evil-cross-lines	.emacs.d/evil/evil-vars.el	/^(defcustom evil-cross-lines nil$/;"	f
evil-custom-initialize-pending-reset	.emacs.d/evil/evil-vars.el	/^(defun evil-custom-initialize-pending-reset (var value)$/;"	f
evil-deactivate-input-method	.emacs.d/evil/evil-core.el	/^(defun evil-deactivate-input-method ()$/;"	f
evil-declare-abort-repeat	.emacs.d/evil/evil-common.el	/^(defun evil-declare-abort-repeat (command)$/;"	f
evil-declare-change-repeat	.emacs.d/evil/evil-common.el	/^(defun evil-declare-change-repeat (command)$/;"	f
evil-declare-ignore-repeat	.emacs.d/evil/evil-common.el	/^(defun evil-declare-ignore-repeat (command)$/;"	f
evil-declare-insert-at-point-repeat	.emacs.d/evil/evil-common.el	/^(defun evil-declare-insert-at-point-repeat (command)$/;"	f
evil-declare-key	.emacs.d/evil/evil-core.el	/^(defalias 'evil-declare-key 'evil-define-key)$/;"	f
evil-declare-motion	.emacs.d/evil/evil-common.el	/^(defun evil-declare-motion (command)$/;"	f
evil-declare-not-repeat	.emacs.d/evil/evil-common.el	/^(defun evil-declare-not-repeat (command)$/;"	f
evil-declare-repeat	.emacs.d/evil/evil-common.el	/^(defun evil-declare-repeat (command)$/;"	f
evil-default-cursor	.emacs.d/evil/evil-vars.el	/^(defcustom evil-default-cursor t$/;"	f
evil-default-state	.emacs.d/evil/evil-vars.el	/^(defcustom evil-default-state 'normal$/;"	f
evil-define-avy-motion	.emacs.d/evil/evil-integration.el	/^(defmacro evil-define-avy-motion (command type)$/;"	f
evil-define-command	.emacs.d/evil/evil-common.el	/^(defmacro evil-define-command (command &rest body)$/;"	f
evil-define-interactive-code	.emacs.d/evil/evil-macros.el	/^(defmacro evil-define-interactive-code (code &rest body)$/;"	f
evil-define-key	.emacs.d/evil/evil-core.el	/^(defmacro evil-define-key (state keymap key def &rest bindings)$/;"	f
evil-define-key*	.emacs.d/evil/evil-core.el	/^(defun evil-define-key* (state keymap key def &rest bindings)$/;"	f
evil-define-keymap	.emacs.d/evil/evil-core.el	/^(defmacro evil-define-keymap (keymap doc &rest body)$/;"	f
evil-define-local-var	.emacs.d/evil/evil-vars.el	/^(defmacro evil-define-local-var (symbol &optional initvalue docstring)$/;"	f
evil-define-minor-mode-key	.emacs.d/evil/evil-core.el	/^(defun evil-define-minor-mode-key (state mode key def &rest bindings)$/;"	f
evil-define-motion	.emacs.d/evil/evil-macros.el	/^(defmacro evil-define-motion (motion args &rest body)$/;"	f
evil-define-operator	.emacs.d/evil/evil-macros.el	/^(defmacro evil-define-operator (operator args &rest body)$/;"	f
evil-define-state	.emacs.d/evil/evil-core.el	/^(defmacro evil-define-state (state doc &rest body)$/;"	f
evil-define-text-object	.emacs.d/evil/evil-macros.el	/^(defmacro evil-define-text-object (object args &rest body)$/;"	f
evil-define-type	.emacs.d/evil/evil-macros.el	/^(defmacro evil-define-type (type doc &rest body)$/;"	f
evil-define-visual-selection	.emacs.d/evil/evil-states.el	/^(defmacro evil-define-visual-selection (selection doc &rest body)$/;"	f
evil-deinit-esc	.emacs.d/evil/evil-core.el	/^(defun evil-deinit-esc (frame)$/;"	f
evil-delay	.emacs.d/evil/evil-common.el	/^(defun evil-delay (condition form hook &optional append local name)$/;"	f
evil-delete-yanked-rectangle	.emacs.d/evil/evil-common.el	/^(defun evil-delete-yanked-rectangle (nrows ncols)$/;"	f
evil-delimited-arguments	.emacs.d/evil/evil-common.el	/^(defun evil-delimited-arguments (string &optional num)$/;"	f
evil-describe	.emacs.d/evil/evil-common.el	/^(defun evil-describe (beg end type &rest properties)$/;"	f
evil-describe-range	.emacs.d/evil/evil-common.el	/^(defun evil-describe-range (range)$/;"	f
evil-digraph	.emacs.d/evil/evil-digraphs.el	/^(defun evil-digraph (digraph)$/;"	f
evil-digraphs	.emacs.d/evil/evil-digraphs.el	/^(defgroup evil-digraphs nil$/;"	f
evil-digraphs-table	.emacs.d/evil/evil-digraphs.el	/^(defconst evil-digraphs-table$/;"	f
evil-digraphs-table-user	.emacs.d/evil/evil-digraphs.el	/^(defcustom evil-digraphs-table-user nil$/;"	f
evil-disable-insert-state-bindings	.emacs.d/evil/evil-vars.el	/^(defcustom evil-disable-insert-state-bindings nil$/;"	f
evil-disabled-buffer-p	.emacs.d/evil/evil-core.el	/^(defun evil-disabled-buffer-p (&optional buffer)$/;"	f
evil-display-shell-error-in-message	.emacs.d/evil/evil-vars.el	/^(defcustom evil-display-shell-error-in-message nil$/;"	f
evil-downcase-first	.emacs.d/evil/evil-common.el	/^(defun evil-downcase-first (str)$/;"	f
evil-echo	.emacs.d/evil/evil-common.el	/^(defun evil-echo (string &rest args)$/;"	f
evil-echo-area-restore	.emacs.d/evil/evil-common.el	/^(defun evil-echo-area-restore ()$/;"	f
evil-echo-area-save	.emacs.d/evil/evil-common.el	/^(defun evil-echo-area-save ()$/;"	f
evil-echo-state	.emacs.d/evil/evil-vars.el	/^(defcustom evil-echo-state t$/;"	f
evil-emacs-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-emacs-state-map$/;"	f
evil-emacs-state-modes	.emacs.d/evil/evil-vars.el	/^(defcustom evil-emacs-state-modes$/;"	f
evil-enclose-ace-jump-for-motion	.emacs.d/evil/evil-integration.el	/^(defmacro evil-enclose-ace-jump-for-motion (&rest body)$/;"	f
evil-enclose-avy-for-motion	.emacs.d/evil/evil-integration.el	/^(defmacro evil-enclose-avy-for-motion (&rest body)$/;"	f
evil-end-undo-step	.emacs.d/evil/evil-common.el	/^(defun evil-end-undo-step (&optional continue)$/;"	f
evil-eobp	.emacs.d/evil/evil-macros.el	/^(defun evil-eobp (&optional pos)$/;"	f
evil-esc	.emacs.d/evil/evil-core.el	/^(defun evil-esc (map)$/;"	f
evil-esc-delay	.emacs.d/evil/evil-vars.el	/^(defcustom evil-esc-delay 0.01$/;"	f
evil-esc-map	.emacs.d/evil/evil-vars.el	/^(defvar evil-esc-map nil$/;"	f
evil-esc-mode	.emacs.d/evil/evil-core.el	/^(defun evil-esc-mode (&optional arg)$/;"	f
evil-esc-mode	.emacs.d/evil/evil-vars.el	/^(defvar evil-esc-mode nil$/;"	f
evil-ex-abort	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-abort ()$/;"	f
evil-ex-argument	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-argument nil$/;"	f
evil-ex-argument-completion-at-point	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-argument-completion-at-point ()$/;"	f
evil-ex-argument-handler	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-argument-handler nil$/;"	f
evil-ex-argument-handler-completer	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-argument-handler-completer (arg-handler)$/;"	f
evil-ex-argument-handler-runner	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-argument-handler-runner (arg-handler)$/;"	f
evil-ex-argument-types	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-argument-types nil$/;"	f
evil-ex-bang	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-bang nil$/;"	f
evil-ex-binding	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-binding (command &optional noerror)$/;"	f
evil-ex-call-command	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-call-command (range command argument)$/;"	f
evil-ex-char-marker-range	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-char-marker-range (beg end)$/;"	f
evil-ex-cmd	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-cmd nil$/;"	f
evil-ex-command	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-command nil$/;"	f
evil-ex-command-collection	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-command-collection (cmd predicate flag)$/;"	f
evil-ex-command-completion-at-point	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-command-completion-at-point ()$/;"	f
evil-ex-command-force-p	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-command-force-p (command)$/;"	f
evil-ex-commands	.emacs.d/evil/evil-vars.el	/^(defface evil-ex-commands '(( nil$/;"	f
evil-ex-commands	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-commands nil$/;"	f
evil-ex-complete-emacs-commands	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-complete-emacs-commands 'in-turn$/;"	f
evil-ex-completed-binding	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-completed-binding (command &optional noerror)$/;"	f
evil-ex-completion	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-completion ()$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-a" 'evil-ex-completion)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-b" 'move-beginning-of-line)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-c" 'abort-recursive-edit)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-d" 'evil-ex-completion)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-g" 'abort-recursive-edit)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-k" 'evil-insert-digraph)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-l" 'evil-ex-completion)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-n" #'next-complete-history-element)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-p" #'previous-complete-history-element)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-r" 'evil-paste-from-register)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-u" 'evil-delete-whole-line)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-v" #'quoted-insert)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\C-w" 'backward-kill-word)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\d" #'evil-ex-delete-backward-char)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map "\\t" #'evil-ex-completion)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map (kbd "RET") 'exit-minibuffer)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map [S-left] 'backward-word)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map [S-right] 'forward-word)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map [down] 'next-complete-history-element)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map [escape] 'abort-recursive-edit)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map [next] 'next-history-element)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map [prior] 'previous-history-element)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map [remap completion-at-point] #'evil-ex-completion)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map [return] 'exit-minibuffer)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map [tab] #'evil-ex-completion)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-completion-map [up] 'previous-complete-history-element)$/;"	f
evil-ex-completion-map	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-completion-map (make-sparse-keymap)$/;"	f
evil-ex-completion-table	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-completion-table ()$/;"	f
evil-ex-current-buffer	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-current-buffer nil$/;"	f
evil-ex-current-line	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-current-line ()$/;"	f
evil-ex-define-argument-type	.emacs.d/evil/evil-ex.el	/^(defmacro evil-ex-define-argument-type (arg-type doc &rest body)$/;"	f
evil-ex-define-cmd	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-define-cmd (cmd function)$/;"	f
evil-ex-delete-backward-char	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-delete-backward-char ()$/;"	f
evil-ex-delete-hl	.emacs.d/evil/evil-search.el	/^(defun evil-ex-delete-hl (name)$/;"	f
evil-ex-delete-or-yank	.emacs.d/evil/evil-commands.el	/^(defun evil-ex-delete-or-yank (should-delete beg end type register count yank-handler)$/;"	f
evil-ex-echo	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-echo (string &rest args)$/;"	f
evil-ex-echo-overlay	.emacs.d/evil/evil-ex.el	/^(defvar evil-ex-echo-overlay nil$/;"	f
evil-ex-execute	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-execute (result)$/;"	f
evil-ex-expression	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-expression nil$/;"	f
evil-ex-file-arg	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-file-arg ()$/;"	f
evil-ex-file-or-shell-command-completion-at-point	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-file-or-shell-command-completion-at-point ()$/;"	f
evil-ex-find-next	.emacs.d/evil/evil-search.el	/^(defun evil-ex-find-next (&optional pattern direction nowrap)$/;"	f
evil-ex-first-line	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-first-line ()$/;"	f
evil-ex-full-range	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-full-range ()$/;"	f
evil-ex-get-optional-register-and-count	.emacs.d/evil/evil-types.el	/^(defun evil-ex-get-optional-register-and-count (string)$/;"	f
evil-ex-get-substitute-info	.emacs.d/evil/evil-search.el	/^(defun evil-ex-get-substitute-info (string &optional implicit-r)$/;"	f
evil-ex-grammar	.emacs.d/evil/evil-ex.el	/^(defconst evil-ex-grammar$/;"	f
evil-ex-history	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-history nil$/;"	f
evil-ex-hl-active-p	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-active-p (name)$/;"	f
evil-ex-hl-change	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-change (name pattern)$/;"	f
evil-ex-hl-do-update-highlight	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-do-update-highlight (&optional buffer)$/;"	f
evil-ex-hl-face	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-face (hl)$/;"	f
evil-ex-hl-get-max	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-get-max (name)$/;"	f
evil-ex-hl-idle-update	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-idle-update ()$/;"	f
evil-ex-hl-match-hook	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-match-hook (hl)$/;"	f
evil-ex-hl-max	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-max (hl)$/;"	f
evil-ex-hl-min	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-min (hl)$/;"	f
evil-ex-hl-name	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-name (hl)$/;"	f
evil-ex-hl-overlays	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-overlays (hl)$/;"	f
evil-ex-hl-pattern	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-pattern (hl)$/;"	f
evil-ex-hl-set-max	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-set-max (hl max)$/;"	f
evil-ex-hl-set-min	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-set-min (hl min)$/;"	f
evil-ex-hl-set-overlays	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-set-overlays (hl overlays)$/;"	f
evil-ex-hl-set-pattern	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-set-pattern (hl pattern)$/;"	f
evil-ex-hl-set-region	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-set-region (name beg end &optional type)$/;"	f
evil-ex-hl-update-delay	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-hl-update-delay 0.02$/;"	f
evil-ex-hl-update-highlights	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-update-highlights ()$/;"	f
evil-ex-hl-update-highlights-resize	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-update-highlights-resize (frame)$/;"	f
evil-ex-hl-update-highlights-scroll	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-update-highlights-scroll (win beg)$/;"	f
evil-ex-hl-update-hook	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-update-hook (hl)$/;"	f
evil-ex-hl-window	.emacs.d/evil/evil-search.el	/^(defun evil-ex-hl-window (hl)$/;"	f
evil-ex-info	.emacs.d/evil/evil-vars.el	/^(defface evil-ex-info '(( ((supports :slant))$/;"	f
evil-ex-init-shell-argument-completion	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-init-shell-argument-completion (flag &optional arg)$/;"	f
evil-ex-initial-input	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-initial-input nil$/;"	f
evil-ex-interactive-search-highlight	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-interactive-search-highlight 'all-windows$/;"	f
evil-ex-last-line	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-last-line ()$/;"	f
evil-ex-last-was-search	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-last-was-search nil$/;"	f
evil-ex-lazy-highlight	.emacs.d/evil/evil-vars.el	/^(defface evil-ex-lazy-highlight '((t :inherit lazy-highlight))$/;"	f
evil-ex-line	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-line (base &optional offset)$/;"	f
evil-ex-make-argument-handler	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-make-argument-handler (runner completer)$/;"	f
evil-ex-make-hl	.emacs.d/evil/evil-search.el	/^(defun evil-ex-make-hl (name &rest args)$/;"	f
evil-ex-make-pattern	.emacs.d/evil/evil-search.el	/^(defun evil-ex-make-pattern (regexp case whole-line)$/;"	f
evil-ex-make-search-pattern	.emacs.d/evil/evil-search.el	/^(defun evil-ex-make-search-pattern (regexp)$/;"	f
evil-ex-make-substitute-pattern	.emacs.d/evil/evil-search.el	/^(defun evil-ex-make-substitute-pattern (regexp flags)$/;"	f
evil-ex-map	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-map (make-sparse-keymap)$/;"	f
evil-ex-marker	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-marker (marker)$/;"	f
evil-ex-nohighlight	.emacs.d/evil/evil-search.el	/^(defun evil-ex-nohighlight ()$/;"	f
evil-ex-p	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-p ()$/;"	f
evil-ex-parse	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-parse (string &optional syntax start)$/;"	f
evil-ex-parse-command	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-parse-command (string)$/;"	f
evil-ex-parse-global	.emacs.d/evil/evil-search.el	/^(defun evil-ex-parse-global (string)$/;"	f
evil-ex-pattern-ignore-case	.emacs.d/evil/evil-search.el	/^(defun evil-ex-pattern-ignore-case (pattern)$/;"	f
evil-ex-pattern-regex	.emacs.d/evil/evil-search.el	/^(defun evil-ex-pattern-regex (pattern)$/;"	f
evil-ex-pattern-update-ex-info	.emacs.d/evil/evil-search.el	/^(defun evil-ex-pattern-update-ex-info (hl result)$/;"	f
evil-ex-pattern-update-replacement	.emacs.d/evil/evil-search.el	/^(defun evil-ex-pattern-update-replacement (hl overlay)$/;"	f
evil-ex-pattern-whole-line	.emacs.d/evil/evil-search.el	/^(defun evil-ex-pattern-whole-line (pattern)$/;"	f
evil-ex-point	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-point nil$/;"	f
evil-ex-prev-search	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-prev-search ()$/;"	f
evil-ex-previous-command	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-previous-command nil$/;"	f
evil-ex-range	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-range (beg-line &optional end-line)$/;"	f
evil-ex-range	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-range nil$/;"	f
evil-ex-re-bwd	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-re-bwd (pattern)$/;"	f
evil-ex-re-fwd	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-re-fwd (pattern)$/;"	f
evil-ex-regex-case	.emacs.d/evil/evil-search.el	/^(defun evil-ex-regex-case (re default-case)$/;"	f
evil-ex-regex-without-case	.emacs.d/evil/evil-search.el	/^(defun evil-ex-regex-without-case (re)$/;"	f
evil-ex-remove-default	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-remove-default ()$/;"	f
evil-ex-repeat	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-repeat (count)$/;"	f
evil-ex-replace-special-filenames	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-replace-special-filenames (file-name)$/;"	f
evil-ex-search	.emacs.d/evil/evil-search.el	/^(defun evil-ex-search (&optional count)$/;"	f
evil-ex-search	.emacs.d/evil/evil-vars.el	/^(defface evil-ex-search '((t :inherit isearch))$/;"	f
evil-ex-search-abort	.emacs.d/evil/evil-search.el	/^(defun evil-ex-search-abort ()$/;"	f
evil-ex-search-activate-highlight	.emacs.d/evil/evil-search.el	/^(defun evil-ex-search-activate-highlight (pattern)$/;"	f
evil-ex-search-case	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-search-case 'smart$/;"	f
evil-ex-search-count	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-search-count nil$/;"	f
evil-ex-search-direction	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-search-direction nil$/;"	f
evil-ex-search-exit	.emacs.d/evil/evil-search.el	/^(defun evil-ex-search-exit ()$/;"	f
evil-ex-search-find-next-pattern	.emacs.d/evil/evil-search.el	/^(defun evil-ex-search-find-next-pattern (pattern &optional direction)$/;"	f
evil-ex-search-full-pattern	.emacs.d/evil/evil-search.el	/^(defun evil-ex-search-full-pattern (pattern-string count direction)$/;"	f
evil-ex-search-goto-offset	.emacs.d/evil/evil-search.el	/^(defun evil-ex-search-goto-offset (offset)$/;"	f
evil-ex-search-highlight-all	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-search-highlight-all t$/;"	f
evil-ex-search-history	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-search-history nil$/;"	f
evil-ex-search-interactive	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-search-interactive t$/;"	f
evil-ex-search-keymap	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-search-keymap "\\C-n" 'next-history-element)$/;"	f
evil-ex-search-keymap	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-search-keymap "\\C-p" 'previous-history-element)$/;"	f
evil-ex-search-keymap	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-search-keymap "\\C-r" 'evil-paste-from-register)$/;"	f
evil-ex-search-keymap	.emacs.d/evil/evil-maps.el	/^(define-key evil-ex-search-keymap "\\d" #'evil-ex-delete-backward-char)$/;"	f
evil-ex-search-keymap	.emacs.d/evil/evil-vars.el	/^(define-key evil-ex-search-keymap [escape] 'abort-recursive-edit)$/;"	f
evil-ex-search-keymap	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-search-keymap (make-sparse-keymap)$/;"	f
evil-ex-search-match-beg	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-search-match-beg nil$/;"	f
evil-ex-search-match-end	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-search-match-end nil$/;"	f
evil-ex-search-offset	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-search-offset nil$/;"	f
evil-ex-search-overlay	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-search-overlay nil$/;"	f
evil-ex-search-pattern	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-search-pattern nil$/;"	f
evil-ex-search-persistent-highlight	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-search-persistent-highlight t$/;"	f
evil-ex-search-setup	.emacs.d/evil/evil-search.el	/^(defun evil-ex-search-setup ()$/;"	f
evil-ex-search-start-point	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-search-start-point nil$/;"	f
evil-ex-search-start-session	.emacs.d/evil/evil-search.el	/^(defun evil-ex-search-start-session ()$/;"	f
evil-ex-search-stop-session	.emacs.d/evil/evil-search.el	/^(defun evil-ex-search-stop-session ()$/;"	f
evil-ex-search-update	.emacs.d/evil/evil-search.el	/^(defun evil-ex-search-update (pattern offset beg end message)$/;"	f
evil-ex-search-update-pattern	.emacs.d/evil/evil-search.el	/^(defun evil-ex-search-update-pattern (beg end range)$/;"	f
evil-ex-search-vim-style-regexp	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-search-vim-style-regexp nil$/;"	f
evil-ex-setup	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-setup ()$/;"	f
evil-ex-setup-and-update	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-setup-and-update ()$/;"	f
evil-ex-shell-argument-initialized	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-shell-argument-initialized nil$/;"	f
evil-ex-signed-number	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-signed-number (sign &optional number)$/;"	f
evil-ex-sort-completions	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-sort-completions (completions)$/;"	f
evil-ex-split-search-pattern	.emacs.d/evil/evil-search.el	/^(defun evil-ex-split-search-pattern (pattern direction)$/;"	f
evil-ex-start-search	.emacs.d/evil/evil-search.el	/^(defun evil-ex-start-search (direction count)$/;"	f
evil-ex-start-word-search	.emacs.d/evil/evil-search.el	/^(defun evil-ex-start-word-search (unbounded direction count &optional symbol)$/;"	f
evil-ex-substitute-case	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-substitute-case nil$/;"	f
evil-ex-substitute-current-replacement	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-substitute-current-replacement nil$/;"	f
evil-ex-substitute-flags	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-substitute-flags nil$/;"	f
evil-ex-substitute-global	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-substitute-global nil$/;"	f
evil-ex-substitute-highlight-all	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-substitute-highlight-all t$/;"	f
evil-ex-substitute-interactive-replace	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-substitute-interactive-replace t$/;"	f
evil-ex-substitute-matches	.emacs.d/evil/evil-vars.el	/^(defface evil-ex-substitute-matches '((t :inherit lazy-highlight))$/;"	f
evil-ex-substitute-pattern	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-substitute-pattern nil$/;"	f
evil-ex-substitute-replacement	.emacs.d/evil/evil-vars.el	/^(defface evil-ex-substitute-replacement '((((supports :underline))$/;"	f
evil-ex-substitute-replacement	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-substitute-replacement nil$/;"	f
evil-ex-syntactic-context	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-syntactic-context (&optional pos)$/;"	f
evil-ex-teardown	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-teardown ()$/;"	f
evil-ex-tree	.emacs.d/evil/evil-vars.el	/^(defvar evil-ex-tree nil$/;"	f
evil-ex-update	.emacs.d/evil/evil-ex.el	/^(defun evil-ex-update (&optional beg end len string)$/;"	f
evil-ex-visual-char-range	.emacs.d/evil/evil-vars.el	/^(defcustom evil-ex-visual-char-range nil$/;"	f
evil-exchange-point-and-mark	.emacs.d/evil/evil-common.el	/^(defun evil-exchange-point-and-mark ()$/;"	f
evil-execute-change	.emacs.d/evil/evil-repeat.el	/^(defun evil-execute-change (changes rel-point)$/;"	f
evil-execute-in-emacs-state-buffer	.emacs.d/evil/evil-vars.el	/^(defvar evil-execute-in-emacs-state-buffer nil$/;"	f
evil-execute-in-normal-state	.emacs.d/evil/evil-commands.el	/^(defun evil-execute-in-normal-state ()$/;"	f
evil-execute-repeat-info	.emacs.d/evil/evil-repeat.el	/^(defun evil-execute-repeat-info (repeat-info)$/;"	f
evil-execute-repeat-info-with-count	.emacs.d/evil/evil-repeat.el	/^(defun evil-execute-repeat-info-with-count (count repeat-info)$/;"	f
evil-exit-visual-and-repeat	.emacs.d/evil/evil-commands.el	/^(defun evil-exit-visual-and-repeat (event)$/;"	f
evil-expand	.emacs.d/evil/evil-common.el	/^(defun evil-expand (beg end type &rest properties)$/;"	f
evil-expand-range	.emacs.d/evil/evil-common.el	/^(defun evil-expand-range (range &optional copy)$/;"	f
evil-extract-append	.emacs.d/evil/evil-common.el	/^(defun evil-extract-append (file-or-append)$/;"	f
evil-extract-count	.emacs.d/evil/evil-common.el	/^(defun evil-extract-count (keys)$/;"	f
evil-filter-list	.emacs.d/evil/evil-common.el	/^(defun evil-filter-list (predicate list &optional pointer)$/;"	f
evil-find-symbol	.emacs.d/evil/evil-search.el	/^(defun evil-find-symbol (forward)$/;"	f
evil-find-thing	.emacs.d/evil/evil-search.el	/^(defun evil-find-thing (forward thing)$/;"	f
evil-find-word	.emacs.d/evil/evil-search.el	/^(defun evil-find-word (forward)$/;"	f
evil-flash-delay	.emacs.d/evil/evil-vars.el	/^(defcustom evil-flash-delay 2$/;"	f
evil-flash-hook	.emacs.d/evil/evil-search.el	/^(defun evil-flash-hook (&optional force)$/;"	f
evil-flash-search-pattern	.emacs.d/evil/evil-search.el	/^(defun evil-flash-search-pattern (string &optional all)$/;"	f
evil-flash-timer	.emacs.d/evil/evil-vars.el	/^(defvar evil-flash-timer nil$/;"	f
evil-flatten-syntax-tree	.emacs.d/evil/evil-ex.el	/^(defun evil-flatten-syntax-tree (tree)$/;"	f
evil-fold-action	.emacs.d/evil/evil-commands.el	/^(defun evil-fold-action (list action)$/;"	f
evil-fold-level	.emacs.d/evil/evil-vars.el	/^(defcustom evil-fold-level 0$/;"	f
evil-fold-list	.emacs.d/evil/evil-vars.el	/^(defvar evil-fold-list$/;"	f
evil-force-cursor	.emacs.d/evil/evil-vars.el	/^(defvar evil-force-cursor nil$/;"	f
evil-forward-beginning	.emacs.d/evil/evil-common.el	/^(defun evil-forward-beginning (thing &optional count)$/;"	f
evil-forward-chars	.emacs.d/evil/evil-common.el	/^(defun evil-forward-chars (chars &optional count)$/;"	f
evil-forward-end	.emacs.d/evil/evil-common.el	/^(defun evil-forward-end (thing &optional count)$/;"	f
evil-forward-nearest	.emacs.d/evil/evil-common.el	/^(defun evil-forward-nearest (count &rest forwards)$/;"	f
evil-forward-not-thing	.emacs.d/evil/evil-common.el	/^(defun evil-forward-not-thing (thing &optional count)$/;"	f
evil-forward-quote	.emacs.d/evil/evil-common.el	/^(defun evil-forward-quote (quote &optional count)$/;"	f
evil-forward-quote-char	.emacs.d/evil/evil-common.el	/^(defvar evil-forward-quote-char ?\\"$/;"	f
evil-forward-syntax	.emacs.d/evil/evil-common.el	/^(defun evil-forward-syntax (syntax &optional count)$/;"	f
evil-forward-word	.emacs.d/evil/evil-common.el	/^(defun evil-forward-word (&optional count)$/;"	f
evil-generate-mode-line-tag	.emacs.d/evil/evil-core.el	/^(defun evil-generate-mode-line-tag (&optional state)$/;"	f
evil-get-auxiliary-keymap	.emacs.d/evil/evil-core.el	/^(defun evil-get-auxiliary-keymap (map state &optional create ignore-parent)$/;"	f
evil-get-buffer-tree	.emacs.d/evil/evil-commands.el	/^(defun evil-get-buffer-tree (wintree)$/;"	f
evil-get-command-properties	.emacs.d/evil/evil-common.el	/^(defun evil-get-command-properties (command)$/;"	f
evil-get-command-property	.emacs.d/evil/evil-common.el	/^(defun evil-get-command-property (command property &optional default)$/;"	f
evil-get-magic	.emacs.d/evil/evil-common.el	/^(defun evil-get-magic (magic)$/;"	f
evil-get-marker	.emacs.d/evil/evil-common.el	/^(defun evil-get-marker (char &optional raw)$/;"	f
evil-get-minor-mode-keymap	.emacs.d/evil/evil-core.el	/^(defun evil-get-minor-mode-keymap (state mode)$/;"	f
evil-get-property	.emacs.d/evil/evil-common.el	/^(defun evil-get-property (alist key &optional prop)$/;"	f
evil-get-register	.emacs.d/evil/evil-common.el	/^(defun evil-get-register (register &optional noerror)$/;"	f
evil-get-selection	.emacs.d/evil/evil-common.el	/^(defalias 'evil-get-selection$/;"	f
evil-global-keymaps-alist	.emacs.d/evil/evil-vars.el	/^(defvar evil-global-keymaps-alist nil$/;"	f
evil-global-marker-p	.emacs.d/evil/evil-common.el	/^(defun evil-global-marker-p (char)$/;"	f
evil-global-set-key	.emacs.d/evil/evil-core.el	/^(defun evil-global-set-key (state key def)$/;"	f
evil-goto-max	.emacs.d/evil/evil-common.el	/^(defun evil-goto-max (&rest positions)$/;"	f
evil-goto-min	.emacs.d/evil/evil-common.el	/^(defun evil-goto-min (&rest positions)$/;"	f
evil-half-cursor	.emacs.d/evil/evil-states.el	/^(defun evil-half-cursor ()$/;"	f
evil-has-command-properties-p	.emacs.d/evil/evil-common.el	/^(defun evil-has-command-properties-p (command)$/;"	f
evil-has-command-property-p	.emacs.d/evil/evil-common.el	/^(defun evil-has-command-property-p (command property)$/;"	f
evil-highlight-closing-paren-at-point-states	.emacs.d/evil/evil-vars.el	/^(defcustom evil-highlight-closing-paren-at-point-states$/;"	f
evil-in-comment-p	.emacs.d/evil/evil-common.el	/^(defun evil-in-comment-p (&optional pos)$/;"	f
evil-in-single-undo	.emacs.d/evil/evil-vars.el	/^(defvar evil-in-single-undo nil$/;"	f
evil-indent-convert-tabs	.emacs.d/evil/evil-vars.el	/^(defcustom evil-indent-convert-tabs t$/;"	f
evil-inhibit-esc	.emacs.d/evil/evil-vars.el	/^(defvar evil-inhibit-esc nil$/;"	f
evil-inhibit-operator	.emacs.d/evil/evil-vars.el	/^(defvar evil-inhibit-operator nil$/;"	f
evil-inhibit-operator-value	.emacs.d/evil/evil-vars.el	/^(defvar evil-inhibit-operator-value nil$/;"	f
evil-init-esc	.emacs.d/evil/evil-core.el	/^(defun evil-init-esc (frame)$/;"	f
evil-initial-state	.emacs.d/evil/evil-core.el	/^(defun evil-initial-state (mode &optional default follow-parent checked-modes)$/;"	f
evil-initial-state-for-buffer	.emacs.d/evil/evil-core.el	/^(defun evil-initial-state-for-buffer (&optional buffer default)$/;"	f
evil-initial-state-for-buffer-name	.emacs.d/evil/evil-core.el	/^(defun evil-initial-state-for-buffer-name (&optional name default)$/;"	f
evil-initialize	.emacs.d/evil/evil-core.el	/^(defun evil-initialize ()$/;"	f
evil-initialize-local-keymaps	.emacs.d/evil/evil-core.el	/^(defun evil-initialize-local-keymaps ()$/;"	f
evil-initialize-state	.emacs.d/evil/evil-core.el	/^(defun evil-initialize-state (&optional state buffer)$/;"	f
evil-initializing-p	.emacs.d/evil/evil-core.el	/^(defun evil-initializing-p (&optional buffer)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "'" 'evil-inner-single-quote)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "(" 'evil-inner-paren)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map ")" 'evil-inner-paren)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "<" 'evil-inner-angle)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map ">" 'evil-inner-angle)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "B" 'evil-inner-curly)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "W" 'evil-inner-WORD)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "[" 'evil-inner-bracket)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "\\"" 'evil-inner-double-quote)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "]" 'evil-inner-bracket)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "`" 'evil-inner-back-quote)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "b" 'evil-inner-paren)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "o" 'evil-inner-symbol)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "p" 'evil-inner-paragraph)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "s" 'evil-inner-sentence)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "t" 'evil-inner-tag)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "w" 'evil-inner-word)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "{" 'evil-inner-curly)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-inner-text-objects-map "}" 'evil-inner-curly)$/;"	f
evil-inner-text-objects-map	.emacs.d/evil/evil-vars.el	/^(defvar evil-inner-text-objects-map (make-sparse-keymap)$/;"	f
evil-insert	.emacs.d/evil/evil-commands.el	/^(defun evil-insert (count &optional vcount skip-empty-lines)$/;"	f
evil-insert-line	.emacs.d/evil/evil-commands.el	/^(defun evil-insert-line (count &optional vcount)$/;"	f
evil-insert-newline-above	.emacs.d/evil/evil-common.el	/^(defun evil-insert-newline-above ()$/;"	f
evil-insert-newline-below	.emacs.d/evil/evil-common.el	/^(defun evil-insert-newline-below ()$/;"	f
evil-insert-repeat-hook	.emacs.d/evil/evil-states.el	/^(defun evil-insert-repeat-hook ()$/;"	f
evil-insert-resume	.emacs.d/evil/evil-commands.el	/^(defun evil-insert-resume (count)$/;"	f
evil-insert-skip-empty-lines	.emacs.d/evil/evil-vars.el	/^(defvar evil-insert-skip-empty-lines nil$/;"	f
evil-insert-state-bindings	.emacs.d/evil/evil-maps.el	/^(defvar evil-insert-state-bindings$/;"	f
evil-insert-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-insert-state-map [delete] 'delete-char)$/;"	f
evil-insert-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-insert-state-map [escape] 'evil-normal-state)$/;"	f
evil-insert-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-insert-state-map$/;"	f
evil-insert-state-modes	.emacs.d/evil/evil-vars.el	/^(defcustom evil-insert-state-modes$/;"	f
evil-interactive-alist	.emacs.d/evil/evil-vars.el	/^(defvar evil-interactive-alist nil$/;"	f
evil-interactive-form	.emacs.d/evil/evil-common.el	/^(defun evil-interactive-form (&rest args)$/;"	f
evil-interactive-string	.emacs.d/evil/evil-common.el	/^(defun evil-interactive-string (string)$/;"	f
evil-intercept-esc	.emacs.d/evil/evil-vars.el	/^(defcustom evil-intercept-esc 'always$/;"	f
evil-intercept-keymap-p	.emacs.d/evil/evil-core.el	/^(defun evil-intercept-keymap-p (map &optional state)$/;"	f
evil-intercept-keymap-state	.emacs.d/evil/evil-core.el	/^(defun evil-intercept-keymap-state (map)$/;"	f
evil-intercept-maps	.emacs.d/evil/evil-vars.el	/^(defcustom evil-intercept-maps$/;"	f
evil-isearch-function	.emacs.d/evil/evil-search.el	/^(defun evil-isearch-function ()$/;"	f
evil-jumps	.emacs.d/evil/evil-jumps.el	/^(defgroup evil-jumps nil$/;"	f
evil-jumps-cross-buffers	.emacs.d/evil/evil-jumps.el	/^(defcustom evil-jumps-cross-buffers t$/;"	f
evil-jumps-history	.emacs.d/evil/evil-jumps.el	/^(defvar evil-jumps-history nil$/;"	f
evil-jumps-ignored-file-patterns	.emacs.d/evil/evil-jumps.el	/^(defcustom evil-jumps-ignored-file-patterns '("COMMIT_EDITMSG$" "TAGS$")$/;"	f
evil-jumps-max-length	.emacs.d/evil/evil-jumps.el	/^(defcustom evil-jumps-max-length 100$/;"	f
evil-jumps-post-jump-hook	.emacs.d/evil/evil-jumps.el	/^(defcustom evil-jumps-post-jump-hook nil$/;"	f
evil-jumps-pre-jump-hook	.emacs.d/evil/evil-jumps.el	/^(defcustom evil-jumps-pre-jump-hook nil$/;"	f
evil-justify-lines	.emacs.d/evil/evil-common.el	/^(defun evil-justify-lines (beg end justify position)$/;"	f
evil-kbd-macro-suppress-motion-error	.emacs.d/evil/evil-common.el	/^(defsubst evil-kbd-macro-suppress-motion-error ()$/;"	f
evil-kbd-macro-suppress-motion-error	.emacs.d/evil/evil-vars.el	/^(defcustom evil-kbd-macro-suppress-motion-error nil$/;"	f
evil-keymap-for-mode	.emacs.d/evil/evil-core.el	/^(defun evil-keymap-for-mode (mode &optional variable)$/;"	f
evil-keypress-parser	.emacs.d/evil/evil-common.el	/^(defun evil-keypress-parser (&optional input)$/;"	f
evil-kill-on-visual-paste	.emacs.d/evil/evil-vars.el	/^(defcustom evil-kill-on-visual-paste t$/;"	f
evil-last-find	.emacs.d/evil/evil-vars.el	/^(defvar evil-last-find nil$/;"	f
evil-last-insertion	.emacs.d/evil/evil-vars.el	/^(defvar evil-last-insertion nil$/;"	f
evil-last-paste	.emacs.d/evil/evil-vars.el	/^(defvar evil-last-paste nil$/;"	f
evil-last-register	.emacs.d/evil/evil-vars.el	/^(defvar evil-last-register nil$/;"	f
evil-last-repeat	.emacs.d/evil/evil-vars.el	/^(defvar evil-last-repeat nil$/;"	f
evil-last-small-deletion	.emacs.d/evil/evil-vars.el	/^(defvar evil-last-small-deletion nil$/;"	f
evil-line-move	.emacs.d/evil/evil-common.el	/^(defun evil-line-move (count &optional noerror)$/;"	f
evil-line-position	.emacs.d/evil/evil-common.el	/^(defun evil-line-position (line &optional column)$/;"	f
evil-list-view-goto-entry	.emacs.d/evil/evil-common.el	/^(defun evil-list-view-goto-entry ()$/;"	f
evil-list-view-mode	.emacs.d/evil/evil-common.el	/^(define-derived-mode evil-list-view-mode tabulated-list-mode$/;"	f
evil-list-view-mode-map	.emacs.d/evil/evil-common.el	/^(define-key evil-list-view-mode-map (kbd "q") #'kill-this-buffer)$/;"	f
evil-list-view-mode-map	.emacs.d/evil/evil-common.el	/^(define-key evil-list-view-mode-map [follow-link] nil) ;; allows mouse-1 to be activated$/;"	f
evil-list-view-mode-map	.emacs.d/evil/evil-common.el	/^(define-key evil-list-view-mode-map [mouse-1] #'evil-list-view-goto-entry)$/;"	f
evil-list-view-mode-map	.emacs.d/evil/evil-common.el	/^(define-key evil-list-view-mode-map [return] #'evil-list-view-goto-entry)$/;"	f
evil-list-view-select-action	.emacs.d/evil/evil-common.el	/^(defvar-local evil-list-view-select-action nil)$/;"	f
evil-local-keymaps-alist	.emacs.d/evil/evil-vars.el	/^(defvar evil-local-keymaps-alist nil$/;"	f
evil-local-mode	.emacs.d/evil/evil-core.el	/^(define-minor-mode evil-local-mode$/;"	f
evil-local-set-key	.emacs.d/evil/evil-core.el	/^(defun evil-local-set-key (state key def)$/;"	f
evil-looking-at-end-comment	.emacs.d/evil/evil-common.el	/^(defun evil-looking-at-end-comment (&optional move)$/;"	f
evil-looking-at-start-comment	.emacs.d/evil/evil-common.el	/^(defun evil-looking-at-start-comment (&optional move)$/;"	f
evil-lookup-func	.emacs.d/evil/evil-vars.el	/^(defcustom evil-lookup-func #'woman$/;"	f
evil-lookup-key	.emacs.d/evil/evil-common.el	/^(defun evil-lookup-key (map key)$/;"	f
evil-loop	.emacs.d/evil/evil-common.el	/^(defmacro evil-loop (spec &rest body)$/;"	f
evil-macro-buffer	.emacs.d/evil/evil-commands.el	/^(defvar evil-macro-buffer nil$/;"	f
evil-magic	.emacs.d/evil/evil-vars.el	/^(defcustom evil-magic t$/;"	f
evil-make-intercept-map	.emacs.d/evil/evil-core.el	/^(defun evil-make-intercept-map (keymap &optional state aux)$/;"	f
evil-make-overriding-map	.emacs.d/evil/evil-core.el	/^(defun evil-make-overriding-map (keymap &optional state copy)$/;"	f
evil-match-interactive-code	.emacs.d/evil/evil-common.el	/^(defun evil-match-interactive-code (interactive &optional pos)$/;"	f
evil-match-substitute-replacement	.emacs.d/evil/evil-common.el	/^(defun evil-match-substitute-replacement (replacement &optional fixedcase string)$/;"	f
evil-maybe-remove-spaces	.emacs.d/evil/evil-states.el	/^(defun evil-maybe-remove-spaces (&optional do-remove)$/;"	f
evil-maybe-remove-spaces	.emacs.d/evil/evil-vars.el	/^(defvar evil-maybe-remove-spaces nil$/;"	f
evil-member-if	.emacs.d/evil/evil-common.el	/^(defun evil-member-if (predicate list &optional pointer)$/;"	f
evil-member-recursive-if	.emacs.d/evil/evil-common.el	/^(defun evil-member-recursive-if (predicate tree)$/;"	f
evil-minor-mode-keymap-p	.emacs.d/evil/evil-core.el	/^(defun evil-minor-mode-keymap-p (map)$/;"	f
evil-minor-mode-keymaps-alist	.emacs.d/evil/evil-vars.el	/^(defvar evil-minor-mode-keymaps-alist nil$/;"	f
evil-mode	.emacs.d/evil/evil-core.el	/^(defadvice evil-mode (after start-evil activate)$/;"	f
evil-mode	.emacs.d/evil/evil-core.el	/^(define-globalized-minor-mode evil-mode$/;"	f
evil-mode-buffers	.emacs.d/evil/evil-core.el	/^(defvar evil-mode-buffers)$/;"	f
evil-mode-for-keymap	.emacs.d/evil/evil-core.el	/^(defun evil-mode-for-keymap (keymap &optional default)$/;"	f
evil-mode-line-format	.emacs.d/evil/evil-vars.el	/^(defcustom evil-mode-line-format 'before$/;"	f
evil-motion-loop	.emacs.d/evil/evil-common.el	/^(defmacro evil-motion-loop (spec &rest body)$/;"	f
evil-motion-range	.emacs.d/evil/evil-macros.el	/^(defun evil-motion-range (motion &optional count type)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-integration.el	/^(define-key evil-motion-state-map [remap ace-jump-char-mode] #'evil-ace-jump-char-mode)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-integration.el	/^(define-key evil-motion-state-map [remap ace-jump-line-mode] #'evil-ace-jump-line-mode)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-integration.el	/^(define-key evil-motion-state-map [remap ace-jump-word-mode] #'evil-ace-jump-word-mode)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map " " 'evil-forward-char)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "!" 'evil-shell-command)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "#" 'evil-search-word-backward)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "$" 'evil-end-of-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "%" 'evil-jump-item)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "'" 'evil-goto-mark-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "(" 'evil-backward-sentence-begin)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map ")" 'evil-forward-sentence-begin)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "*" 'evil-search-word-forward)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "+" 'evil-next-line-first-non-blank)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "," 'evil-repeat-find-char-reverse)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "-" 'evil-previous-line-first-non-blank)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "1" 'digit-argument)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "2" 'digit-argument)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "3" 'digit-argument)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "4" 'digit-argument)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "5" 'digit-argument)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "6" 'digit-argument)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "7" 'digit-argument)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "8" 'digit-argument)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "9" 'digit-argument)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map ":" 'evil-ex)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map ";" 'evil-repeat-find-char)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "?" 'evil-search-backward)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "B" 'evil-backward-WORD-begin)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "E" 'evil-forward-WORD-end)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "F" 'evil-find-char-backward)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "G" 'evil-goto-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "H" 'evil-window-top)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "K" 'evil-lookup)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "L" 'evil-window-bottom)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "M" 'evil-window-middle)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "N" 'evil-search-previous)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "T" 'evil-find-char-to-backward)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "V" 'evil-visual-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "W" 'evil-forward-WORD-begin)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "Y" 'evil-yank-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "[(" 'evil-previous-open-paren)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "[[" 'evil-backward-section-begin)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "[]" 'evil-backward-section-end)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "[s" 'evil-prev-flyspell-error)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "[{" 'evil-previous-open-brace)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "\/" 'evil-search-forward)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "\\C-]" 'evil-jump-to-tag)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "\\C-v" 'evil-visual-block)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "\\C-w" 'evil-window-map)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "\\\\" 'evil-execute-in-emacs-state)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "])" 'evil-next-close-paren)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "][" 'evil-forward-section-end)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "]]" 'evil-forward-section-begin)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "]s" 'evil-next-flyspell-error)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "]}" 'evil-next-close-brace)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "^" 'evil-first-non-blank)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "_" 'evil-next-line-1-first-non-blank)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "`" 'evil-goto-mark)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "b" 'evil-backward-word-begin)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "e" 'evil-forward-word-end)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "f" 'evil-find-char)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "g#" 'evil-search-unbounded-word-backward)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "g$" 'evil-end-of-visual-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "g*" 'evil-search-unbounded-word-forward)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "g0" 'evil-beginning-of-visual-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "gE" 'evil-backward-WORD-end)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "gN" 'evil-previous-match)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "g\\C-]" 'evil-jump-to-tag)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "g^" 'evil-first-non-blank-of-visual-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "g_" 'evil-last-non-blank)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "gd" 'evil-goto-definition)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "ge" 'evil-backward-word-end)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "gg" 'evil-goto-first-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "gj" 'evil-next-visual-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "gk" 'evil-previous-visual-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "gm" 'evil-middle-of-visual-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "gn" 'evil-next-match)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "gv" 'evil-visual-restore)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "h" 'evil-backward-char)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "j" 'evil-next-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "k" 'evil-previous-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "l" 'evil-forward-char)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "n" 'evil-search-next)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "t" 'evil-find-char-to)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "v" 'evil-visual-char)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "w" 'evil-forward-word-begin)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "y" 'evil-yank)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "z+" 'evil-scroll-bottom-line-to-top)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "z-" "zb^")$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "z." "zz^")$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "zH" 'evil-scroll-left)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "zL" 'evil-scroll-right)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "z^" 'evil-scroll-top-line-to-bottom)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "zb" 'evil-scroll-line-to-bottom)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "zh" 'evil-scroll-column-left)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "zl" 'evil-scroll-column-right)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "zt" 'evil-scroll-line-to-top)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "zz" 'evil-scroll-line-to-center)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "{" 'evil-backward-paragraph)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "|" 'evil-goto-column)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map "}" 'evil-forward-paragraph)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map (kbd "C-6") 'evil-switch-to-windows-last-buffer)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map (kbd "C-^") 'evil-buffer)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map (kbd "C-b") 'evil-scroll-page-up)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map (kbd "C-e") 'evil-scroll-line-down)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map (kbd "C-f") 'evil-scroll-page-down)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map (kbd "C-o") 'evil-jump-backward)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map (kbd "C-y") 'evil-scroll-line-up)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map (kbd "RET") 'evil-ret)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map (kbd "z RET") (vconcat "z" [return]))$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map (vconcat "z" [return]) "zt^")$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map [?z left] "zh")$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map [?z right] "zl")$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map [down-mouse-1] 'evil-mouse-drag-region)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map [down] 'evil-next-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map [left] 'evil-backward-char)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map [right] 'evil-forward-char)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map [up] 'evil-previous-line)$/;"	f
evil-motion-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-motion-state-map$/;"	f
evil-motion-state-modes	.emacs.d/evil/evil-vars.el	/^(defcustom evil-motion-state-modes$/;"	f
evil-motions	.emacs.d/evil/evil-vars.el	/^(defcustom evil-motions$/;"	f
evil-mouse--drag-set-mark-and-point	.emacs.d/evil/evil-commands.el	/^(defun evil-mouse--drag-set-mark-and-point (start click click-count)$/;"	f
evil-mouse--remap-link-click-p	.emacs.d/evil/evil-commands.el	/^(defun evil-mouse--remap-link-click-p (start-event end-event)$/;"	f
evil-mouse-drag-region	.emacs.d/evil/evil-commands.el	/^(defun evil-mouse-drag-region (start-event)$/;"	f
evil-mouse-drag-track	.emacs.d/evil/evil-commands.el	/^(defun evil-mouse-drag-track (start-event &optional$/;"	f
evil-mouse-events-p	.emacs.d/evil/evil-common.el	/^(defun evil-mouse-events-p (keys)$/;"	f
evil-mouse-start-end	.emacs.d/evil/evil-commands.el	/^(defun evil-mouse-start-end (start end mode)$/;"	f
evil-mouse-word	.emacs.d/evil/evil-vars.el	/^(defcustom evil-mouse-word 'evil-word$/;"	f
evil-move-beginning	.emacs.d/evil/evil-macros.el	/^(defun evil-move-beginning (count forward &optional backward)$/;"	f
evil-move-beginning-of-line	.emacs.d/evil/evil-common.el	/^(defun evil-move-beginning-of-line (&optional arg)$/;"	f
evil-move-beyond-eol	.emacs.d/evil/evil-vars.el	/^(defcustom evil-move-beyond-eol nil$/;"	f
evil-move-cursor-back	.emacs.d/evil/evil-common.el	/^(defun evil-move-cursor-back (&optional force)$/;"	f
evil-move-cursor-back	.emacs.d/evil/evil-vars.el	/^(defcustom evil-move-cursor-back t$/;"	f
evil-move-end	.emacs.d/evil/evil-macros.el	/^(defun evil-move-end (count forward &optional backward inclusive)$/;"	f
evil-move-end-of-line	.emacs.d/evil/evil-common.el	/^(defun evil-move-end-of-line (&optional arg)$/;"	f
evil-move-mark	.emacs.d/evil/evil-common.el	/^(defun evil-move-mark (pos)$/;"	f
evil-move-to-column	.emacs.d/evil/evil-common.el	/^(defun evil-move-to-column (column &optional dir force)$/;"	f
evil-narrow	.emacs.d/evil/evil-common.el	/^(defun evil-narrow (beg end)$/;"	f
evil-narrow-to-field	.emacs.d/evil/evil-common.el	/^(defmacro evil-narrow-to-field (&rest body)$/;"	f
evil-narrow-to-line	.emacs.d/evil/evil-macros.el	/^(defmacro evil-narrow-to-line (&rest body)$/;"	f
evil-normal-post-command	.emacs.d/evil/evil-states.el	/^(defun evil-normal-post-command (&optional command)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "&" 'evil-ex-repeat-substitute)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "." 'evil-repeat)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "<" 'evil-shift-left)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "=" 'evil-indent)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map ">" 'evil-shift-right)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "@" 'evil-execute-macro)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "A" 'evil-append-line)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "C" 'evil-change-line)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "D" 'evil-delete-line)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "I" 'evil-insert-line)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "J" 'evil-join)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "O" 'evil-open-above)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "P" 'evil-paste-before)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "R" 'evil-replace-state)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "S" 'evil-change-whole-line)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "X" 'evil-delete-backward-char)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "Y" 'evil-yank-line)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "ZQ" 'evil-quit)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "ZZ" 'evil-save-modified-and-close)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "\\"" 'evil-use-register)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "\\C-n" 'evil-paste-pop-next)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "\\C-p" 'evil-paste-pop)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "\\C-r" 'redo)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "\\C-t" 'pop-tag-mark)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "a" 'evil-append)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "c" 'evil-change)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "d" 'evil-delete)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "g&" 'evil-ex-repeat-global-substitute)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "g," 'goto-last-change-reverse)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "g8" 'what-cursor-position)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "g;" 'goto-last-change)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "g?" 'evil-rot13)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "gF" 'evil-find-file-at-point-with-line)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "gJ" 'evil-join-whitespace)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "gU" 'evil-upcase)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "ga" 'what-cursor-position)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "gf" 'find-file-at-point)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "gi" 'evil-insert-resume)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "gq" 'evil-fill-and-move)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "gu" 'evil-downcase)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "gw" 'evil-fill)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "gx" 'browse-url-at-point)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "g~" 'evil-invert-case)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "i" 'evil-insert)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "m" 'evil-set-marker)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "o" 'evil-open-below)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "p" 'evil-paste-after)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "q" 'evil-record-macro)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "r" 'evil-replace)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "s" 'evil-substitute)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "u" 'undo)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "x" 'evil-delete-char)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "y" 'evil-yank)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "z=" 'ispell-word)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "zO" 'evil-open-fold-rec)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "za" 'evil-toggle-fold)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "zc" 'evil-close-fold)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "zm" 'evil-close-folds)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "zo" 'evil-open-fold)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "zr" 'evil-open-folds)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map "~" 'evil-invert-char)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map (kbd "<insert>") 'evil-insert)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map (kbd "<insertchar>") 'evil-insert)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map (kbd "C-.") 'evil-repeat-pop)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map (kbd "DEL") 'evil-backward-char)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map (kbd "M-.") 'evil-repeat-pop-next)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map [deletechar] 'evil-delete-char)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map [escape] 'evil-force-normal-state)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map [mouse-2] 'mouse-yank-primary)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map [remap cua-paste-pop] 'evil-paste-pop)$/;"	f
evil-normal-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-normal-state-map [remap yank-pop] 'evil-paste-pop)$/;"	f
evil-normalize	.emacs.d/evil/evil-common.el	/^(defun evil-normalize (beg end type &rest properties)$/;"	f
evil-normalize-keymaps	.emacs.d/evil/evil-core.el	/^(defun evil-normalize-keymaps (&optional state)$/;"	f
evil-normalize-position	.emacs.d/evil/evil-common.el	/^(defun evil-normalize-position (pos)$/;"	f
evil-normalize-range	.emacs.d/evil/evil-common.el	/^(defun evil-normalize-range (range &optional copy)$/;"	f
evil-normalize-repeat-info	.emacs.d/evil/evil-repeat.el	/^(defun evil-normalize-repeat-info (repeat-info)$/;"	f
evil-num-visible-lines	.emacs.d/evil/evil-common.el	/^(defun evil-num-visible-lines ()$/;"	f
evil-open-above	.emacs.d/evil/evil-commands.el	/^(defun evil-open-above (count)$/;"	f
evil-open-below	.emacs.d/evil/evil-commands.el	/^(defun evil-open-below (count)$/;"	f
evil-operator-range	.emacs.d/evil/evil-macros.el	/^(defun evil-operator-range (&optional return-type)$/;"	f
evil-operator-range-beginning	.emacs.d/evil/evil-vars.el	/^(defvar evil-operator-range-beginning nil$/;"	f
evil-operator-range-end	.emacs.d/evil/evil-vars.el	/^(defvar evil-operator-range-end nil$/;"	f
evil-operator-range-motion	.emacs.d/evil/evil-vars.el	/^(defvar evil-operator-range-motion nil$/;"	f
evil-operator-range-type	.emacs.d/evil/evil-vars.el	/^(defvar evil-operator-range-type nil$/;"	f
evil-operator-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-operator-state-map "a" evil-outer-text-objects-map)$/;"	f
evil-operator-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-operator-state-map "i" evil-inner-text-objects-map)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "'" 'evil-a-single-quote)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "(" 'evil-a-paren)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map ")" 'evil-a-paren)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "<" 'evil-an-angle)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map ">" 'evil-an-angle)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "B" 'evil-a-curly)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "W" 'evil-a-WORD)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "[" 'evil-a-bracket)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "\\"" 'evil-a-double-quote)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "]" 'evil-a-bracket)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "`" 'evil-a-back-quote)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "b" 'evil-a-paren)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "o" 'evil-a-symbol)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "p" 'evil-a-paragraph)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "s" 'evil-a-sentence)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "t" 'evil-a-tag)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "w" 'evil-a-word)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "{" 'evil-a-curly)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-outer-text-objects-map "}" 'evil-a-curly)$/;"	f
evil-outer-text-objects-map	.emacs.d/evil/evil-vars.el	/^(defvar evil-outer-text-objects-map (make-sparse-keymap)$/;"	f
evil-overriding-keymap-p	.emacs.d/evil/evil-core.el	/^(defun evil-overriding-keymap-p (map &optional state)$/;"	f
evil-overriding-keymap-state	.emacs.d/evil/evil-core.el	/^(defun evil-overriding-keymap-state (map)$/;"	f
evil-overriding-maps	.emacs.d/evil/evil-vars.el	/^(defcustom evil-overriding-maps$/;"	f
evil-parser	.emacs.d/evil/evil-ex.el	/^(defun evil-parser (string symbol grammar &optional greedy syntax)$/;"	f
evil-paste-count	.emacs.d/evil/evil-vars.el	/^(defvar evil-paste-count nil$/;"	f
evil-paste-from-register	.emacs.d/evil/evil-commands.el	/^(defun evil-paste-from-register (register)$/;"	f
evil-paste-last-insertion	.emacs.d/evil/evil-commands.el	/^(defun evil-paste-last-insertion ()$/;"	f
evil-paste-pop	.emacs.d/evil/evil-common.el	/^(defun evil-paste-pop (count)$/;"	f
evil-paste-pop-next	.emacs.d/evil/evil-common.el	/^(defun evil-paste-pop-next (count)$/;"	f
evil-pending-custom-initialize	.emacs.d/evil/evil-vars.el	/^(defvar evil-pending-custom-initialize nil$/;"	f
evil-pending-intercept-maps	.emacs.d/evil/evil-vars.el	/^(defvar evil-pending-intercept-maps nil$/;"	f
evil-pending-overriding-maps	.emacs.d/evil/evil-vars.el	/^(defvar evil-pending-overriding-maps nil$/;"	f
evil-plist-delete	.emacs.d/evil/evil-common.el	/^(defun evil-plist-delete (prop plist)$/;"	f
evil-previous-shell-command	.emacs.d/evil/evil-vars.el	/^(defvar evil-previous-shell-command nil$/;"	f
evil-push-search-history	.emacs.d/evil/evil-search.el	/^(defun evil-push-search-history (string forward)$/;"	f
evil-put-command-property	.emacs.d/evil/evil-common.el	/^(defalias 'evil-put-command-property 'evil-set-command-property)$/;"	f
evil-put-property	.emacs.d/evil/evil-common.el	/^(defun evil-put-property (alist-var key prop val &rest properties)$/;"	f
evil-range	.emacs.d/evil/evil-common.el	/^(defun evil-range (beg end &optional type &rest properties)$/;"	f
evil-range-beginning	.emacs.d/evil/evil-common.el	/^(defun evil-range-beginning (range)$/;"	f
evil-range-end	.emacs.d/evil/evil-common.el	/^(defun evil-range-end (range)$/;"	f
evil-range-p	.emacs.d/evil/evil-common.el	/^(defun evil-range-p (object)$/;"	f
evil-range-properties	.emacs.d/evil/evil-common.el	/^(defun evil-range-properties (range)$/;"	f
evil-range-union	.emacs.d/evil/evil-common.el	/^(defun evil-range-union (range1 range2 &optional type)$/;"	f
evil-read-digraph-char	.emacs.d/evil/evil-common.el	/^(defun evil-read-digraph-char (&optional hide-chars)$/;"	f
evil-read-key	.emacs.d/evil/evil-common.el	/^(defun evil-read-key (&optional prompt)$/;"	f
evil-read-key-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-read-key-map "\\r" "\\n")$/;"	f
evil-read-key-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-read-key-map (kbd "C-]") #'keyboard-quit)$/;"	f
evil-read-key-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-read-key-map (kbd "C-g") #'keyboard-quit)$/;"	f
evil-read-key-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-read-key-map (kbd "C-k") #'evil-read-digraph-char)$/;"	f
evil-read-key-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-read-key-map (kbd "C-q") #'evil-read-quoted-char)$/;"	f
evil-read-key-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-read-key-map (kbd "C-v") #'evil-read-quoted-char)$/;"	f
evil-read-key-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-read-key-map (kbd "ESC") #'keyboard-quit)$/;"	f
evil-read-key-map	.emacs.d/evil/evil-vars.el	/^(defvar evil-read-key-map (make-sparse-keymap)$/;"	f
evil-read-motion	.emacs.d/evil/evil-common.el	/^(defun evil-read-motion (&optional motion count type modifier)$/;"	f
evil-read-quoted-char	.emacs.d/evil/evil-common.el	/^(defun evil-read-quoted-char ()$/;"	f
evil-recording-current-command	.emacs.d/evil/evil-vars.el	/^(defvar evil-recording-current-command nil$/;"	f
evil-recording-repeat	.emacs.d/evil/evil-vars.el	/^(defvar evil-recording-repeat nil$/;"	f
evil-redirect-digit-argument	.emacs.d/evil/evil-common.el	/^(defmacro evil-redirect-digit-argument (map keys target)$/;"	f
evil-refresh-cursor	.emacs.d/evil/evil-common.el	/^(defun evil-refresh-cursor (&optional state buffer)$/;"	f
evil-refresh-mode-line	.emacs.d/evil/evil-core.el	/^(defun evil-refresh-mode-line (&optional state)$/;"	f
evil-refresh-undo-step	.emacs.d/evil/evil-common.el	/^(defun evil-refresh-undo-step ()$/;"	f
evil-regexp-magic	.emacs.d/evil/evil-common.el	/^(defconst evil-regexp-magic "[][(){}<>_dDsSxXoOaAlLuUwWyY.*+?=^$`|nrtb]")$/;"	f
evil-regexp-search	.emacs.d/evil/evil-vars.el	/^(defcustom evil-regexp-search t$/;"	f
evil-register-list	.emacs.d/evil/evil-common.el	/^(defun evil-register-list ()$/;"	f
evil-remove-command-properties	.emacs.d/evil/evil-common.el	/^(defun evil-remove-command-properties (command &rest properties)$/;"	f
evil-remove-yank-excluded-properties	.emacs.d/evil/evil-common.el	/^(defun evil-remove-yank-excluded-properties (text)$/;"	f
evil-repeat-abort	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-abort ()$/;"	f
evil-repeat-buffer	.emacs.d/evil/evil-vars.el	/^(defvar evil-repeat-buffer nil$/;"	f
evil-repeat-change-hook	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-change-hook (beg end length)$/;"	f
evil-repeat-changes	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-changes (flag)$/;"	f
evil-repeat-changes	.emacs.d/evil/evil-vars.el	/^(defvar evil-repeat-changes nil$/;"	f
evil-repeat-count	.emacs.d/evil/evil-vars.el	/^(defvar evil-repeat-count nil$/;"	f
evil-repeat-different-buffer-p	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-different-buffer-p (&optional strict)$/;"	f
evil-repeat-ex-search	.emacs.d/evil/evil-commands.el	/^(defun evil-repeat-ex-search (flag)$/;"	f
evil-repeat-find-to-skip-next	.emacs.d/evil/evil-vars.el	/^(defcustom evil-repeat-find-to-skip-next t$/;"	f
evil-repeat-finish-record-changes	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-finish-record-changes ()$/;"	f
evil-repeat-force-abort-p	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-force-abort-p (repeat-type)$/;"	f
evil-repeat-info	.emacs.d/evil/evil-vars.el	/^(defvar evil-repeat-info nil$/;"	f
evil-repeat-insert-at-point	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-insert-at-point (flag)$/;"	f
evil-repeat-insert-at-point-hook	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-insert-at-point-hook (beg end length)$/;"	f
evil-repeat-keys	.emacs.d/evil/evil-vars.el	/^(defvar evil-repeat-keys nil$/;"	f
evil-repeat-keystrokes	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-keystrokes (flag)$/;"	f
evil-repeat-motion	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-motion (flag)$/;"	f
evil-repeat-move-cursor	.emacs.d/evil/evil-vars.el	/^(defcustom evil-repeat-move-cursor t$/;"	f
evil-repeat-pos	.emacs.d/evil/evil-vars.el	/^(defvar evil-repeat-pos nil$/;"	f
evil-repeat-post-hook	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-post-hook ()$/;"	f
evil-repeat-pre-hook	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-pre-hook ()$/;"	f
evil-repeat-record	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-record (info)$/;"	f
evil-repeat-record-buffer	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-record-buffer ()$/;"	f
evil-repeat-record-change	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-record-change (relpos ins ndel)$/;"	f
evil-repeat-record-position	.emacs.d/evil/evil-repeat.el	/^(defsubst evil-repeat-record-position (&optional pos)$/;"	f
evil-repeat-recording-p	.emacs.d/evil/evil-repeat.el	/^(defsubst evil-repeat-recording-p ()$/;"	f
evil-repeat-reset	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-reset (flag)$/;"	f
evil-repeat-ring	.emacs.d/evil/evil-vars.el	/^(defvar evil-repeat-ring (make-ring 10)$/;"	f
evil-repeat-search	.emacs.d/evil/evil-commands.el	/^(defun evil-repeat-search (flag)$/;"	f
evil-repeat-start	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-start ()$/;"	f
evil-repeat-start-hook	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-start-hook ()$/;"	f
evil-repeat-start-record-changes	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-start-record-changes ()$/;"	f
evil-repeat-stop	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-stop ()$/;"	f
evil-repeat-type	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-type (command &optional default)$/;"	f
evil-repeat-types	.emacs.d/evil/evil-vars.el	/^(defvar evil-repeat-types$/;"	f
evil-repeat-visual-block	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-visual-block (nfwdlines nfwdchars)$/;"	f
evil-repeat-visual-char	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-visual-char (nfwdlines nfwdchars)$/;"	f
evil-repeat-visual-line	.emacs.d/evil/evil-repeat.el	/^(defun evil-repeat-visual-line (nfwdlines)$/;"	f
evil-replace-backspace	.emacs.d/evil/evil-states.el	/^(defun evil-replace-backspace ()$/;"	f
evil-replace-match	.emacs.d/evil/evil-common.el	/^(defun evil-replace-match (replacement &optional fixedcase string)$/;"	f
evil-replace-pre-command	.emacs.d/evil/evil-states.el	/^(defun evil-replace-pre-command ()$/;"	f
evil-replace-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-replace-state-map (kbd "DEL") 'evil-replace-backspace)$/;"	f
evil-replace-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-replace-state-map [escape] 'evil-normal-state)$/;"	f
evil-replacement-magic	.emacs.d/evil/evil-common.el	/^(defconst evil-replacement-magic "[eElLuU0-9&#,rnbt=]"$/;"	f
evil-resize-window	.emacs.d/evil/evil-commands.el	/^(defun evil-resize-window (new-size &optional horizontal)$/;"	f
evil-respect-visual-line-mode	.emacs.d/evil/evil-vars.el	/^(defcustom evil-respect-visual-line-mode nil$/;"	f
evil-restore-mark	.emacs.d/evil/evil-common.el	/^(defun evil-restore-mark ()$/;"	f
evil-restore-transient-mark-mode	.emacs.d/evil/evil-common.el	/^(defun evil-restore-transient-mark-mode ()$/;"	f
evil-restore-window-tree	.emacs.d/evil/evil-commands.el	/^(defun evil-restore-window-tree (win tree)$/;"	f
evil-restriction-stack	.emacs.d/evil/evil-vars.el	/^(defvar evil-restriction-stack nil$/;"	f
evil-ret-gen	.emacs.d/evil/evil-commands.el	/^(defun evil-ret-gen (count indent?)$/;"	f
evil-revert-reveal	.emacs.d/evil/evil-commands.el	/^(defun evil-revert-reveal (open-spots)$/;"	f
evil-run-pending-custom-initialize	.emacs.d/evil/evil-vars.el	/^(defun evil-run-pending-custom-initialize ()$/;"	f
evil-save-column	.emacs.d/evil/evil-common.el	/^(defmacro evil-save-column (&rest body)$/;"	f
evil-save-cursor	.emacs.d/evil/evil-common.el	/^(defmacro evil-save-cursor (&rest body)$/;"	f
evil-save-echo-area	.emacs.d/evil/evil-common.el	/^(defmacro evil-save-echo-area (&rest body)$/;"	f
evil-save-goal-column	.emacs.d/evil/evil-common.el	/^(defmacro evil-save-goal-column (&rest body)$/;"	f
evil-save-mark	.emacs.d/evil/evil-common.el	/^(defun evil-save-mark ()$/;"	f
evil-save-repeat-info	.emacs.d/evil/evil-repeat.el	/^(defmacro evil-save-repeat-info (&rest body)$/;"	f
evil-save-state	.emacs.d/evil/evil-core.el	/^(defmacro evil-save-state (&rest body)$/;"	f
evil-save-transient-mark-mode	.emacs.d/evil/evil-common.el	/^(defun evil-save-transient-mark-mode ()$/;"	f
evil-search	.emacs.d/evil/evil-search.el	/^(defun evil-search (string forward &optional regexp-p start)$/;"	f
evil-search-backward-history	.emacs.d/evil/evil-vars.el	/^(defvar evil-search-backward-history nil$/;"	f
evil-search-forward-history	.emacs.d/evil/evil-vars.el	/^(defvar evil-search-forward-history nil$/;"	f
evil-search-function	.emacs.d/evil/evil-search.el	/^(defun evil-search-function (&optional forward regexp-p wrap)$/;"	f
evil-search-incrementally	.emacs.d/evil/evil-search.el	/^(defun evil-search-incrementally (forward regexp-p)$/;"	f
evil-search-message	.emacs.d/evil/evil-search.el	/^(defun evil-search-message (string forward)$/;"	f
evil-search-module	.emacs.d/evil/evil-command-window.el	/^(defvar evil-search-module)$/;"	f
evil-search-module	.emacs.d/evil/evil-search.el	/^(defcustom evil-search-module 'isearch$/;"	f
evil-search-prompt	.emacs.d/evil/evil-search.el	/^(defun evil-search-prompt (forward)$/;"	f
evil-search-prompt	.emacs.d/evil/evil-vars.el	/^(defvar evil-search-prompt nil$/;"	f
evil-search-word	.emacs.d/evil/evil-search.el	/^(defun evil-search-word (forward unbounded symbol)$/;"	f
evil-search-wrap	.emacs.d/evil/evil-vars.el	/^(defcustom evil-search-wrap t$/;"	f
evil-select-an-object	.emacs.d/evil/evil-common.el	/^(defun evil-select-an-object (thing beg end type count &optional line)$/;"	f
evil-select-block	.emacs.d/evil/evil-common.el	/^(defun evil-select-block (thing beg end type count$/;"	f
evil-select-inner-object	.emacs.d/evil/evil-common.el	/^(defun evil-select-inner-object (thing beg end type &optional count line)$/;"	f
evil-select-paren	.emacs.d/evil/evil-common.el	/^(defun evil-select-paren (open close beg end type count &optional inclusive)$/;"	f
evil-select-quote	.emacs.d/evil/evil-common.el	/^(defun evil-select-quote (quote beg end type count &optional inclusive)$/;"	f
evil-select-quote-thing	.emacs.d/evil/evil-common.el	/^(defun evil-select-quote-thing (thing beg end type count &optional inclusive)$/;"	f
evil-select-search-module	.emacs.d/evil/evil-search.el	/^(defun evil-select-search-module (option module)$/;"	f
evil-select-xml-tag	.emacs.d/evil/evil-common.el	/^(defun evil-select-xml-tag (beg end type &optional count inclusive)$/;"	f
evil-set-auxiliary-keymap	.emacs.d/evil/evil-core.el	/^(defun evil-set-auxiliary-keymap (map state &optional aux)$/;"	f
evil-set-command-properties	.emacs.d/evil/evil-common.el	/^(defun evil-set-command-properties (command &rest properties)$/;"	f
evil-set-command-property	.emacs.d/evil/evil-common.el	/^(defun evil-set-command-property (command property value)$/;"	f
evil-set-cursor	.emacs.d/evil/evil-common.el	/^(defun evil-set-cursor (specs)$/;"	f
evil-set-cursor-color	.emacs.d/evil/evil-common.el	/^(defun evil-set-cursor-color (color)$/;"	f
evil-set-custom-motions	.emacs.d/evil/evil-vars.el	/^(defun evil-set-custom-motions (var values)$/;"	f
evil-set-custom-state-maps	.emacs.d/evil/evil-vars.el	/^(defun evil-set-custom-state-maps (var pending-var key make newlist)$/;"	f
evil-set-initial-state	.emacs.d/evil/evil-core.el	/^(defun evil-set-initial-state (mode state)$/;"	f
evil-set-jump	.emacs.d/evil/evil-jumps.el	/^(defun evil-set-jump (&optional pos)$/;"	f
evil-set-keymap-prompt	.emacs.d/evil/evil-common.el	/^(defun evil-set-keymap-prompt (map prompt)$/;"	f
evil-set-marker	.emacs.d/evil/evil-common.el	/^(defun evil-set-marker (char &optional pos advance)$/;"	f
evil-set-range	.emacs.d/evil/evil-common.el	/^(defun evil-set-range (range &optional beg end type &rest properties)$/;"	f
evil-set-range-beginning	.emacs.d/evil/evil-common.el	/^(defun evil-set-range-beginning (range beg &optional copy)$/;"	f
evil-set-range-end	.emacs.d/evil/evil-common.el	/^(defun evil-set-range-end (range end &optional copy)$/;"	f
evil-set-range-properties	.emacs.d/evil/evil-common.el	/^(defun evil-set-range-properties (range properties &optional copy)$/;"	f
evil-set-range-type	.emacs.d/evil/evil-common.el	/^(defun evil-set-range-type (range type &optional copy)$/;"	f
evil-set-register	.emacs.d/evil/evil-common.el	/^(defun evil-set-register (register text)$/;"	f
evil-set-selection	.emacs.d/evil/evil-common.el	/^(defalias 'evil-set-selection$/;"	f
evil-set-toggle-key	.emacs.d/evil/evil-vars.el	/^(defun evil-set-toggle-key (key)$/;"	f
evil-set-type	.emacs.d/evil/evil-common.el	/^(defun evil-set-type (object type)$/;"	f
evil-set-visual-newline-commands	.emacs.d/evil/evil-vars.el	/^(defun evil-set-visual-newline-commands (var value)$/;"	f
evil-shift-round	.emacs.d/evil/evil-vars.el	/^(defcustom evil-shift-round t$/;"	f
evil-shift-width	.emacs.d/evil/evil-vars.el	/^(defcustom evil-shift-width 4$/;"	f
evil-show-paren-range	.emacs.d/evil/evil-vars.el	/^(defcustom evil-show-paren-range 0$/;"	f
evil-signal-at-bob	.emacs.d/evil/evil-common.el	/^(defun evil-signal-at-bob ()$/;"	f
evil-signal-at-bob-or-eob	.emacs.d/evil/evil-common.el	/^(defun evil-signal-at-bob-or-eob (&optional count)$/;"	f
evil-signal-at-eob	.emacs.d/evil/evil-common.el	/^(defun evil-signal-at-eob ()$/;"	f
evil-signal-without-movement	.emacs.d/evil/evil-common.el	/^(defmacro evil-signal-without-movement (&rest body)$/;"	f
evil-sort	.emacs.d/evil/evil-common.el	/^(defmacro evil-sort (min max &rest vars)$/;"	f
evil-split-window-below	.emacs.d/evil/evil-vars.el	/^(defcustom evil-split-window-below nil$/;"	f
evil-start-track-last-insertion	.emacs.d/evil/evil-common.el	/^(defun evil-start-track-last-insertion ()$/;"	f
evil-start-undo-step	.emacs.d/evil/evil-common.el	/^(defun evil-start-undo-step (&optional continue)$/;"	f
evil-state-auxiliary-keymaps	.emacs.d/evil/evil-core.el	/^(defun evil-state-auxiliary-keymaps (state)$/;"	f
evil-state-intercept-keymaps	.emacs.d/evil/evil-core.el	/^(defun evil-state-intercept-keymaps (&optional state)$/;"	f
evil-state-keymaps	.emacs.d/evil/evil-core.el	/^(defun evil-state-keymaps (state &rest excluded)$/;"	f
evil-state-minor-mode-keymaps	.emacs.d/evil/evil-core.el	/^(defun evil-state-minor-mode-keymaps (state)$/;"	f
evil-state-overriding-keymaps	.emacs.d/evil/evil-core.el	/^(defun evil-state-overriding-keymaps (&optional state)$/;"	f
evil-state-p	.emacs.d/evil/evil-core.el	/^(defun evil-state-p (sym)$/;"	f
evil-state-properties	.emacs.d/evil/evil-vars.el	/^(defvar evil-state-properties nil$/;"	f
evil-state-property	.emacs.d/evil/evil-common.el	/^(defun evil-state-property (state prop &optional value)$/;"	f
evil-stop-execute-in-emacs-state	.emacs.d/evil/evil-commands.el	/^(defun evil-stop-execute-in-emacs-state ()$/;"	f
evil-stop-track-last-insertion	.emacs.d/evil/evil-common.el	/^(defun evil-stop-track-last-insertion ()$/;"	f
evil-subrange-p	.emacs.d/evil/evil-common.el	/^(defun evil-subrange-p (range1 range2)$/;"	f
evil-suppress-map	.emacs.d/evil/evil-vars.el	/^(defconst evil-suppress-map (make-keymap)$/;"	f
evil-swap	.emacs.d/evil/evil-common.el	/^(defmacro evil-swap (this that &rest vars)$/;"	f
evil-swap-out-markers	.emacs.d/evil/evil-common.el	/^(defun evil-swap-out-markers ()$/;"	f
evil-symbol-word-search	.emacs.d/evil/evil-vars.el	/^(defcustom evil-symbol-word-search nil$/;"	f
evil-temporary-undo	.emacs.d/evil/evil-vars.el	/^(defvar evil-temporary-undo nil$/;"	f
evil-test-buffer	.emacs.d/evil/evil-test-helpers.el	/^(defmacro evil-test-buffer (&rest body)$/;"	f
evil-test-buffer-from-string	.emacs.d/evil/evil-test-helpers.el	/^(defun evil-test-buffer-from-string (string &optional$/;"	f
evil-test-buffer-string	.emacs.d/evil/evil-test-helpers.el	/^(defun evil-test-buffer-string (string &optional$/;"	f
evil-test-change-state	.emacs.d/evil/evil-tests.el	/^(defun evil-test-change-state (state)$/;"	f
evil-test-file-contents	.emacs.d/evil/evil-test-helpers.el	/^(defun evil-test-file-contents (name contents)$/;"	f
evil-test-local-mode-disabled	.emacs.d/evil/evil-tests.el	/^(defun evil-test-local-mode-disabled ()$/;"	f
evil-test-local-mode-enabled	.emacs.d/evil/evil-tests.el	/^(defun evil-test-local-mode-enabled ()$/;"	f
evil-test-marker-buffer-from-string	.emacs.d/evil/evil-test-helpers.el	/^(defun evil-test-marker-buffer-from-string (string &optional$/;"	f
evil-test-no-states	.emacs.d/evil/evil-tests.el	/^(defun evil-test-no-states ()$/;"	f
evil-test-overlay	.emacs.d/evil/evil-test-helpers.el	/^(defmacro evil-test-overlay (overlay string &optional end-string$/;"	f
evil-test-point	.emacs.d/evil/evil-test-helpers.el	/^(defvar evil-test-point nil$/;"	f
evil-test-region	.emacs.d/evil/evil-test-helpers.el	/^(defmacro evil-test-region (string &optional end-string$/;"	f
evil-test-repeat-info	.emacs.d/evil/evil-tests.el	/^(defun evil-test-repeat-info (keys &optional recorded)$/;"	f
evil-test-selection	.emacs.d/evil/evil-test-helpers.el	/^(defmacro evil-test-selection (string &optional end-string$/;"	f
evil-test-state-keymaps	.emacs.d/evil/evil-tests.el	/^(defun evil-test-state-keymaps (state)$/;"	f
evil-test-suppress-keymap	.emacs.d/evil/evil-tests.el	/^(defun evil-test-suppress-keymap (state)$/;"	f
evil-test-text	.emacs.d/evil/evil-test-helpers.el	/^(defun evil-test-text (before after &optional before-predicate after-predicate)$/;"	f
evil-test-visual-end	.emacs.d/evil/evil-test-helpers.el	/^(defvar evil-test-visual-end nil$/;"	f
evil-test-visual-select	.emacs.d/evil/evil-tests.el	/^(defun evil-test-visual-select (selection &optional mark point)$/;"	f
evil-test-visual-start	.emacs.d/evil/evil-test-helpers.el	/^(defvar evil-test-visual-start nil$/;"	f
evil-tests-initialize	.emacs.d/evil/evil-tests.el	/^(defun evil-tests-initialize (&optional tests profiler interactive)$/;"	f
evil-tests-profiler	.emacs.d/evil/evil-tests.el	/^(defun evil-tests-profiler (&optional force)$/;"	f
evil-tests-profiler	.emacs.d/evil/evil-tests.el	/^(defvar evil-tests-profiler nil$/;"	f
evil-tests-run	.emacs.d/evil/evil-tests.el	/^(defun evil-tests-run (&optional tests interactive)$/;"	f
evil-tests-run	.emacs.d/evil/evil-tests.el	/^(defvar evil-tests-run nil$/;"	f
evil-text-object-change-visual-type	.emacs.d/evil/evil-vars.el	/^(defcustom evil-text-object-change-visual-type t$/;"	f
evil-text-object-make-linewise	.emacs.d/evil/evil-macros.el	/^(defun evil-text-object-make-linewise (range)$/;"	f
evil-this-command-keys	.emacs.d/evil/evil-repeat.el	/^(defun evil-this-command-keys (&optional post-cmd)$/;"	f
evil-this-macro	.emacs.d/evil/evil-vars.el	/^(defvar evil-this-macro nil$/;"	f
evil-toggle-key	.emacs.d/evil/evil-vars.el	/^(defcustom evil-toggle-key "C-z"$/;"	f
evil-track-eol	.emacs.d/evil/evil-vars.el	/^(defcustom evil-track-eol t$/;"	f
evil-track-last-insertion	.emacs.d/evil/evil-common.el	/^(defun evil-track-last-insertion (beg end len)$/;"	f
evil-transform	.emacs.d/evil/evil-common.el	/^(defun evil-transform (transform beg end type &rest properties)$/;"	f
evil-transform-magic	.emacs.d/evil/evil-common.el	/^(defun evil-transform-magic (str magic quote transform &optional start)$/;"	f
evil-transform-range	.emacs.d/evil/evil-common.el	/^(defun evil-transform-range (transform range &optional copy)$/;"	f
evil-transform-regexp	.emacs.d/evil/evil-common.el	/^(defun evil-transform-regexp (regexp replacements-alist)$/;"	f
evil-transform-vim-style-regexp	.emacs.d/evil/evil-common.el	/^(defun evil-transform-vim-style-regexp (regexp)$/;"	f
evil-transient-mark	.emacs.d/evil/evil-common.el	/^(defun evil-transient-mark (&optional arg)$/;"	f
evil-transient-vals	.emacs.d/evil/evil-vars.el	/^(defvar evil-transient-vals nil$/;"	f
evil-transient-vars	.emacs.d/evil/evil-vars.el	/^(defvar evil-transient-vars '(cua-mode transient-mark-mode select-active-regions)$/;"	f
evil-type	.emacs.d/evil/evil-common.el	/^(defun evil-type (object &optional default)$/;"	f
evil-type-p	.emacs.d/evil/evil-common.el	/^(defun evil-type-p (sym)$/;"	f
evil-type-properties	.emacs.d/evil/evil-vars.el	/^(defvar evil-type-properties nil$/;"	f
evil-type-property	.emacs.d/evil/evil-common.el	/^(defun evil-type-property (type prop)$/;"	f
evil-undo-pop	.emacs.d/evil/evil-common.el	/^(defun evil-undo-pop ()$/;"	f
evil-up-block	.emacs.d/evil/evil-common.el	/^(defun evil-up-block (beg end &optional count)$/;"	f
evil-up-paren	.emacs.d/evil/evil-common.el	/^(defun evil-up-paren (open close &optional count)$/;"	f
evil-up-xml-tag	.emacs.d/evil/evil-common.el	/^(defun evil-up-xml-tag (&optional count)$/;"	f
evil-upcase-first	.emacs.d/evil/evil-common.el	/^(defun evil-upcase-first (str)$/;"	f
evil-update-insert-state-bindings	.emacs.d/evil/evil-maps.el	/^(defun evil-update-insert-state-bindings (&optional _option-name remove force)$/;"	f
evil-update-pending-maps	.emacs.d/evil/evil-vars.el	/^(defun evil-update-pending-maps (&optional file)$/;"	f
evil-vector-to-string	.emacs.d/evil/evil-common.el	/^(defun evil-vector-to-string (vector)$/;"	f
evil-version	.emacs.d/evil/evil-vars.el	/^(defconst evil-version$/;"	f
evil-version	.emacs.d/evil/evil-vars.el	/^(defun evil-version ()$/;"	f
evil-vim-regexp-replacements	.emacs.d/evil/evil-common.el	/^(defconst evil-vim-regexp-replacements$/;"	f
evil-visual-activate-hook	.emacs.d/evil/evil-states.el	/^(defun evil-visual-activate-hook (&optional command)$/;"	f
evil-visual-alist	.emacs.d/evil/evil-states.el	/^(defun evil-visual-alist ()$/;"	f
evil-visual-alist	.emacs.d/evil/evil-vars.el	/^(defvar evil-visual-alist nil$/;"	f
evil-visual-block-corner	.emacs.d/evil/evil-states.el	/^(defun evil-visual-block-corner (&optional corner point mark)$/;"	f
evil-visual-contract-region	.emacs.d/evil/evil-states.el	/^(defun evil-visual-contract-region ()$/;"	f
evil-visual-deactivate-hook	.emacs.d/evil/evil-states.el	/^(defun evil-visual-deactivate-hook (&optional command)$/;"	f
evil-visual-direction	.emacs.d/evil/evil-states.el	/^(defun evil-visual-direction ()$/;"	f
evil-visual-expand-region	.emacs.d/evil/evil-states.el	/^(defun evil-visual-expand-region (&optional exclude-newline)$/;"	f
evil-visual-goto-end	.emacs.d/evil/evil-states.el	/^(defun evil-visual-goto-end ()$/;"	f
evil-visual-highlight	.emacs.d/evil/evil-states.el	/^(defun evil-visual-highlight (&optional arg)$/;"	f
evil-visual-highlight-block	.emacs.d/evil/evil-states.el	/^(defun evil-visual-highlight-block (beg end &optional overlays)$/;"	f
evil-visual-make-region	.emacs.d/evil/evil-states.el	/^(defun evil-visual-make-region (mark point &optional type message)$/;"	f
evil-visual-make-selection	.emacs.d/evil/evil-states.el	/^(defun evil-visual-make-selection (mark point &optional type message)$/;"	f
evil-visual-message	.emacs.d/evil/evil-states.el	/^(defun evil-visual-message (&optional selection)$/;"	f
evil-visual-newline-commands	.emacs.d/evil/evil-vars.el	/^(defcustom evil-visual-newline-commands$/;"	f
evil-visual-post-command	.emacs.d/evil/evil-states.el	/^(defun evil-visual-post-command (&optional command)$/;"	f
evil-visual-pre-command	.emacs.d/evil/evil-states.el	/^(defun evil-visual-pre-command (&optional command)$/;"	f
evil-visual-range	.emacs.d/evil/evil-states.el	/^(defun evil-visual-range ()$/;"	f
evil-visual-refresh	.emacs.d/evil/evil-states.el	/^(defun evil-visual-refresh (&optional mark point type &rest properties)$/;"	f
evil-visual-select	.emacs.d/evil/evil-states.el	/^(defun evil-visual-select (beg end &optional type dir message)$/;"	f
evil-visual-selection-for-type	.emacs.d/evil/evil-states.el	/^(defun evil-visual-selection-for-type (type)$/;"	f
evil-visual-selection-function	.emacs.d/evil/evil-states.el	/^(defun evil-visual-selection-function (selection)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map "A" 'evil-append)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map "I" 'evil-insert)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map "O" 'evil-visual-exchange-corners)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map "R" 'evil-change)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map "U" 'evil-upcase)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map "a" evil-outer-text-objects-map)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map "i" evil-inner-text-objects-map)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map "o" 'exchange-point-and-mark)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map "u" 'evil-downcase)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map "z=" 'ispell-word)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map (kbd "<insert>") 'undefined)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map (kbd "<insertchar>") 'undefined)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map [escape] 'evil-exit-visual-state)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map [mouse-2] 'evil-exit-visual-and-repeat)$/;"	f
evil-visual-state-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-visual-state-map [remap evil-repeat] 'undefined)$/;"	f
evil-visual-type	.emacs.d/evil/evil-states.el	/^(defun evil-visual-type (&optional selection)$/;"	f
evil-visual-update-x-selection	.emacs.d/evil/evil-states.el	/^(defun evil-visual-update-x-selection (&optional buffer)$/;"	f
evil-visual-x-select-timeout	.emacs.d/evil/evil-vars.el	/^(defvar evil-visual-x-select-timeout 0.1$/;"	f
evil-vsplit-window-right	.emacs.d/evil/evil-vars.el	/^(defcustom evil-vsplit-window-right nil$/;"	f
evil-want-C-d-scroll	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-C-d-scroll t$/;"	f
evil-want-C-i-jump	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-C-i-jump t$/;"	f
evil-want-C-u-scroll	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-C-u-scroll nil$/;"	f
evil-want-C-w-delete	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-C-w-delete t$/;"	f
evil-want-C-w-in-emacs-state	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-C-w-in-emacs-state nil$/;"	f
evil-want-Y-yank-to-eol	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-Y-yank-to-eol nil$/;"	f
evil-want-abbrev-expand-on-insert-exit	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-abbrev-expand-on-insert-exit t$/;"	f
evil-want-change-word-to-end	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-change-word-to-end t$/;"	f
evil-want-fine-undo	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-fine-undo nil$/;"	f
evil-want-integration	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-integration t$/;"	f
evil-want-keybinding	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-keybinding t$/;"	f
evil-want-minibuffer	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-minibuffer nil$/;"	f
evil-want-visual-char-semi-exclusive	.emacs.d/evil/evil-vars.el	/^(defcustom evil-want-visual-char-semi-exclusive nil$/;"	f
evil-was-yanked-without-register	.emacs.d/evil/evil-vars.el	/^(defvar evil-was-yanked-without-register t$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "+" 'evil-window-increase-height)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "-" 'evil-window-decrease-height)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "<" 'evil-window-decrease-width)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "=" 'balance-windows)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map ">" 'evil-window-increase-width)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "H" 'evil-window-move-far-left)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "J" 'evil-window-move-very-bottom)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "K" 'evil-window-move-very-top)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "L" 'evil-window-move-far-right)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "R" 'evil-window-rotate-upwards)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "S" 'evil-window-split)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "W" 'evil-window-prev)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "\\C-_" 'evil-window-set-height)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "\\C-b" 'evil-window-bottom-right)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "\\C-c" 'evil-window-delete)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "\\C-f" 'ffap-other-window)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "\\C-n" 'evil-window-new)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "\\C-o" 'delete-other-windows)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "\\C-p" 'evil-window-mru)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "\\C-r" 'evil-window-rotate-downwards)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "\\C-s" 'evil-window-split)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "\\C-t" 'evil-window-top-left)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "\\C-v" 'evil-window-vsplit)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "\\C-w" 'evil-window-next)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "_" 'evil-window-set-height)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "b" 'evil-window-bottom-right)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "c" 'evil-window-delete)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "h" 'evil-window-left)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "j" 'evil-window-down)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "k" 'evil-window-up)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "l" 'evil-window-right)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "n" 'evil-window-new)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "o" 'delete-other-windows)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "p" 'evil-window-mru)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "q" 'evil-quit)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "r" 'evil-window-rotate-downwards)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "s" 'evil-window-split)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "t" 'evil-window-top-left)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "v" 'evil-window-vsplit)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "w" 'evil-window-next)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map "|" 'evil-window-set-width)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map (kbd "C-S-W") 'evil-window-prev)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map (kbd "C-S-h") 'evil-window-move-far-left)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map (kbd "C-S-j") 'evil-window-move-very-bottom)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map (kbd "C-S-k") 'evil-window-move-very-top)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map (kbd "C-S-l") 'evil-window-move-far-right)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map (kbd "C-S-r") 'evil-window-rotate-upwards)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-key evil-window-map (kbd "C-S-s") 'evil-window-split)$/;"	f
evil-window-map	.emacs.d/evil/evil-maps.el	/^(define-prefix-command 'evil-window-map)$/;"	f
evil-window-map	.emacs.d/evil/evil-vars.el	/^(defvar evil-window-map (make-sparse-keymap)$/;"	f
evil-with-active-region	.emacs.d/evil/evil-common.el	/^(defmacro evil-with-active-region (beg end &rest body)$/;"	f
evil-with-both-search-modules	.emacs.d/evil/evil-tests.el	/^(defmacro evil-with-both-search-modules (&rest body)$/;"	f
evil-with-hproject-point-on-window	.emacs.d/evil/evil-common.el	/^(defmacro evil-with-hproject-point-on-window (&rest body)$/;"	f
evil-with-restriction	.emacs.d/evil/evil-common.el	/^(defmacro evil-with-restriction (beg end &rest body)$/;"	f
evil-with-single-undo	.emacs.d/evil/evil-common.el	/^(defmacro evil-with-single-undo (&rest body)$/;"	f
evil-with-state	.emacs.d/evil/evil-core.el	/^(defmacro evil-with-state (state &rest body)$/;"	f
evil-with-temp-file	.emacs.d/evil/evil-test-helpers.el	/^(defmacro evil-with-temp-file (file-var content &rest body)$/;"	f
evil-with-transient-mark-mode	.emacs.d/evil/evil-common.el	/^(defmacro evil-with-transient-mark-mode (&rest body)$/;"	f
evil-with-undo	.emacs.d/evil/evil-common.el	/^(defmacro evil-with-undo (&rest body)$/;"	f
evil-with-view-list	.emacs.d/evil/evil-common.el	/^(defmacro evil-with-view-list (&rest properties)$/;"	f
evil-without-display	.emacs.d/evil/evil-common.el	/^(defmacro evil-without-display (&rest body)$/;"	f
evil-without-input-method-hooks	.emacs.d/evil/evil-core.el	/^(defmacro evil-without-input-method-hooks (&rest body)$/;"	f
evil-without-repeat	.emacs.d/evil/evil-repeat.el	/^(defmacro evil-without-repeat (&rest body)$/;"	f
evil-without-restriction	.emacs.d/evil/evil-common.el	/^(defmacro evil-without-restriction (&rest body)$/;"	f
evil-write-echo-area	.emacs.d/evil/evil-vars.el	/^(defvar evil-write-echo-area nil$/;"	f
evil-yank-block-handler	.emacs.d/evil/evil-common.el	/^(defun evil-yank-block-handler (lines)$/;"	f
evil-yank-characters	.emacs.d/evil/evil-common.el	/^(defun evil-yank-characters (beg end &optional register yank-handler)$/;"	f
evil-yank-handler	.emacs.d/evil/evil-common.el	/^(defun evil-yank-handler (&optional motion)$/;"	f
evil-yank-line-handler	.emacs.d/evil/evil-common.el	/^(defun evil-yank-line-handler (text)$/;"	f
evil-yank-lines	.emacs.d/evil/evil-common.el	/^(defun evil-yank-lines (beg end &optional register yank-handler)$/;"	f
evil-yank-rectangle	.emacs.d/evil/evil-common.el	/^(defun evil-yank-rectangle (beg end &optional register yank-handler)$/;"	f
flyspell-generic-check-word-predicate	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defvar flyspell-generic-check-word-predicate)$/;"	f
font-lock-beg	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defvar font-lock-beg)$/;"	f
font-lock-end	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defvar font-lock-end)$/;"	f
forward-evil-WORD	.emacs.d/evil/evil-common.el	/^(defun forward-evil-WORD (&optional count)$/;"	f
forward-evil-defun	.emacs.d/evil/evil-common.el	/^(defun forward-evil-defun (&optional count)$/;"	f
forward-evil-empty-line	.emacs.d/evil/evil-common.el	/^(defun forward-evil-empty-line (&optional count)$/;"	f
forward-evil-paragraph	.emacs.d/evil/evil-common.el	/^(defun forward-evil-paragraph (&optional count)$/;"	f
forward-evil-quote	.emacs.d/evil/evil-common.el	/^(defun forward-evil-quote (&optional count)$/;"	f
forward-evil-quote-simple	.emacs.d/evil/evil-common.el	/^(defun forward-evil-quote-simple (&optional count)$/;"	f
forward-evil-sentence	.emacs.d/evil/evil-common.el	/^(defun forward-evil-sentence (&optional count)$/;"	f
forward-evil-space	.emacs.d/evil/evil-common.el	/^(defun forward-evil-space (&optional count)$/;"	f
forward-evil-symbol	.emacs.d/evil/evil-common.el	/^(defun forward-evil-symbol (&optional count)$/;"	f
forward-evil-word	.emacs.d/evil/evil-common.el	/^(defun forward-evil-word (&optional count)$/;"	f
git-commit	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defgroup git-commit nil$/;"	f
git-commit--branch-name-regexp	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defvar-local git-commit--branch-name-regexp nil)$/;"	f
git-commit-ack	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-ack (name mail)$/;"	f
git-commit-buffer-message	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-buffer-message ()$/;"	f
git-commit-cancel-message	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-cancel-message ()$/;"	f
git-commit-cc	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-cc (name mail)$/;"	f
git-commit-check-style-conventions	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-check-style-conventions (force)$/;"	f
git-commit-comment-action	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defface git-commit-comment-action$/;"	f
git-commit-comment-branch	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(define-obsolete-face-alias 'git-commit-comment-branch$/;"	f
git-commit-comment-branch-local	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defface git-commit-comment-branch-local$/;"	f
git-commit-comment-branch-remote	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defface git-commit-comment-branch-remote$/;"	f
git-commit-comment-detached	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defface git-commit-comment-detached$/;"	f
git-commit-comment-file	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defface git-commit-comment-file$/;"	f
git-commit-comment-heading	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defface git-commit-comment-heading$/;"	f
git-commit-comment-headings	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defconst git-commit-comment-headings$/;"	f
git-commit-elisp-text-mode	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(define-derived-mode git-commit-elisp-text-mode text-mode "ElText"$/;"	f
git-commit-elisp-text-mode-keywords	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defvar git-commit-elisp-text-mode-keywords$/;"	f
git-commit-extend-region-summary-line	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-extend-region-summary-line ()$/;"	f
git-commit-faces	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defgroup git-commit-faces nil$/;"	f
git-commit-file-not-found	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-file-not-found ()$/;"	f
git-commit-filename-regexp	.emacs.d/elpa/git-commit-20190625.323/git-commit-autoloads.el	/^(defconst git-commit-filename-regexp "\/\\\\(\\\\(\\\\(COMMIT\\\\|NOTES\\\\|PULLREQ\\\\|MERGEREQ\\\\|TAG\\\\)_EDIT\\\\|MERGE_\\\\|\\\\)MSG\\\\|\\\\(BRANCH\\\\|EDIT\\\\)_DESCRIPTION\\\\)\\\\'")$/;"	f
git-commit-filename-regexp	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defconst git-commit-filename-regexp "\/\\\\(\\$/;"	f
git-commit-fill-column	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defcustom git-commit-fill-column nil$/;"	f
git-commit-finish-query-functions	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defcustom git-commit-finish-query-functions$/;"	f
git-commit-finish-query-functions	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-finish-query-functions (force)$/;"	f
git-commit-flyspell-verify	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-flyspell-verify ()$/;"	f
git-commit-font-lock-keywords	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defvar git-commit-font-lock-keywords git-commit-font-lock-keywords-2$/;"	f
git-commit-font-lock-keywords-1	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defconst git-commit-font-lock-keywords-1$/;"	f
git-commit-font-lock-keywords-2	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defconst git-commit-font-lock-keywords-2$/;"	f
git-commit-font-lock-keywords-3	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defconst git-commit-font-lock-keywords-3$/;"	f
git-commit-insert-header	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-insert-header (header name email)$/;"	f
git-commit-keyword	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defface git-commit-keyword$/;"	f
git-commit-known-pseudo-header	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defface git-commit-known-pseudo-header$/;"	f
git-commit-known-pseudo-headers	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defcustom git-commit-known-pseudo-headers$/;"	f
git-commit-major-mode	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defcustom git-commit-major-mode 'text-mode$/;"	f
git-commit-mode	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(define-minor-mode git-commit-mode$/;"	f
git-commit-mode	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defvar git-commit-mode)$/;"	f
git-commit-mode	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar git-commit-mode)$/;"	f
git-commit-mode-map	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defvar git-commit-mode-map$/;"	f
git-commit-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-key git-commit-mode-map$/;"	f
git-commit-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(define-key git-commit-mode-map$/;"	f
git-commit-modified	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-modified (name mail)$/;"	f
git-commit-need-summary-line	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defvar-local git-commit-need-summary-line t$/;"	f
git-commit-next-message	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-next-message (arg)$/;"	f
git-commit-nonempty-second-line	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defface git-commit-nonempty-second-line$/;"	f
git-commit-note	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(define-obsolete-face-alias 'git-commit-note$/;"	f
git-commit-overlong-summary	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defface git-commit-overlong-summary$/;"	f
git-commit-post-finish-hook	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defcustom git-commit-post-finish-hook nil$/;"	f
git-commit-prev-message	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-prev-message (arg)$/;"	f
git-commit-propertize-diff	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-propertize-diff ()$/;"	f
git-commit-pseudo-header	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defface git-commit-pseudo-header$/;"	f
git-commit-read-ident	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-read-ident ()$/;"	f
git-commit-reported	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-reported (name mail)$/;"	f
git-commit-review	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-review (name mail)$/;"	f
git-commit-run-post-finish-hook	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-run-post-finish-hook (previous)$/;"	f
git-commit-save-message	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-save-message ()$/;"	f
git-commit-self-ident	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-self-ident ()$/;"	f
git-commit-setup	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-setup ()$/;"	f
git-commit-setup-changelog-support	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-setup-changelog-support ()$/;"	f
git-commit-setup-check-buffer	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-setup-check-buffer ()$/;"	f
git-commit-setup-font-lock	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-setup-font-lock ()$/;"	f
git-commit-setup-font-lock-in-buffer	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-setup-font-lock-in-buffer ()$/;"	f
git-commit-setup-hook	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defcustom git-commit-setup-hook$/;"	f
git-commit-signoff	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-signoff (name mail)$/;"	f
git-commit-style-convention-checks	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defcustom git-commit-style-convention-checks '(non-empty-second-line)$/;"	f
git-commit-suggested	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-suggested (name mail)$/;"	f
git-commit-summary	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defface git-commit-summary$/;"	f
git-commit-summary-max-length	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defcustom git-commit-summary-max-length 68$/;"	f
git-commit-summary-regexp	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-summary-regexp ()$/;"	f
git-commit-test	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-test (name mail)$/;"	f
git-commit-turn-on-auto-fill	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-turn-on-auto-fill ()$/;"	f
git-commit-turn-on-flyspell	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(defun git-commit-turn-on-flyspell ()$/;"	f
git-rebase	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defgroup git-rebase nil$/;"	f
git-rebase--show-commit	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase--show-commit (&optional scroll)$/;"	f
git-rebase-action	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defclass git-rebase-action ()$/;"	f
git-rebase-auto-advance	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defcustom git-rebase-auto-advance t$/;"	f
git-rebase-autostash-apply	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-autostash-apply ()$/;"	f
git-rebase-autostash-save	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-autostash-save ()$/;"	f
git-rebase-backward-line	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-backward-line (&optional n)$/;"	f
git-rebase-break	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-break (&optional arg)$/;"	f
git-rebase-buffer-labels	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-buffer-labels ()$/;"	f
git-rebase-cancel-confirm	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-cancel-confirm (force)$/;"	f
git-rebase-command-descriptions	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defvar git-rebase-command-descriptions$/;"	f
git-rebase-comment-hash	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defface git-rebase-comment-hash$/;"	f
git-rebase-comment-heading	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defface git-rebase-comment-heading$/;"	f
git-rebase-comment-re	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defvar-local git-rebase-comment-re nil)$/;"	f
git-rebase-confirm-cancel	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defcustom git-rebase-confirm-cancel t$/;"	f
git-rebase-current-line	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-current-line ()$/;"	f
git-rebase-description	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defface git-rebase-description nil$/;"	f
git-rebase-edit	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-edit ()$/;"	f
git-rebase-exec	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-exec (arg)$/;"	f
git-rebase-faces	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defgroup git-rebase-faces nil$/;"	f
git-rebase-filename-regexp	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defconst git-rebase-filename-regexp "\/git-rebase-todo\\\\'")$/;"	f
git-rebase-filename-regexp	.emacs.d/elpa/magit-20190709.1612/magit-autoloads.el	/^(defconst git-rebase-filename-regexp "\/git-rebase-todo\\\\'")$/;"	f
git-rebase-fixup	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-fixup ()$/;"	f
git-rebase-hash	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defface git-rebase-hash '((t (:inherit magit-hash)))$/;"	f
git-rebase-highlight-region	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-highlight-region (start end window rol)$/;"	f
git-rebase-insert	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-insert (rev)$/;"	f
git-rebase-kill-line	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-kill-line ()$/;"	f
git-rebase-killed-action	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defface git-rebase-killed-action$/;"	f
git-rebase-label	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defface git-rebase-label '((t (:inherit magit-refname)))$/;"	f
git-rebase-label	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-label (arg)$/;"	f
git-rebase-line-p	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-line-p (&optional pos)$/;"	f
git-rebase-line-regexps	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defvar git-rebase-line-regexps$/;"	f
git-rebase-match-comment-line	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-match-comment-line (limit)$/;"	f
git-rebase-merge	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-merge (arg)$/;"	f
git-rebase-merge-toggle-editmsg	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-merge-toggle-editmsg ()$/;"	f
git-rebase-mode	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(define-derived-mode git-rebase-mode special-mode "Git Rebase"$/;"	f
git-rebase-mode-disable-before-save-hook	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-mode-disable-before-save-hook ()$/;"	f
git-rebase-mode-font-lock-keywords	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-mode-font-lock-keywords ()$/;"	f
git-rebase-mode-map	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defvar git-rebase-mode-map$/;"	f
git-rebase-mode-show-keybindings	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-mode-show-keybindings ()$/;"	f
git-rebase-move-line-down	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-move-line-down (n)$/;"	f
git-rebase-move-line-up	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-move-line-up (n)$/;"	f
git-rebase-noop	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-noop (&optional arg)$/;"	f
git-rebase-pick	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-pick ()$/;"	f
git-rebase-region-bounds	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-region-bounds ()$/;"	f
git-rebase-reset	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-reset (arg)$/;"	f
git-rebase-reword	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-reword ()$/;"	f
git-rebase-set-action	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-set-action (action)$/;"	f
git-rebase-set-bare-action	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-set-bare-action (action arg)$/;"	f
git-rebase-set-noncommit-action	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-set-noncommit-action (action value-fn arg)$/;"	f
git-rebase-short-options	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defvar git-rebase-short-options$/;"	f
git-rebase-show-commit	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-show-commit ()$/;"	f
git-rebase-show-instructions	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defcustom git-rebase-show-instructions t$/;"	f
git-rebase-show-or-scroll-down	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-show-or-scroll-down ()$/;"	f
git-rebase-show-or-scroll-up	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-show-or-scroll-up ()$/;"	f
git-rebase-squash	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-squash ()$/;"	f
git-rebase-undo	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-undo (&optional arg)$/;"	f
git-rebase-unhighlight-region	.emacs.d/elpa/magit-20190709.1612/git-rebase.el	/^(defun git-rebase-unhighlight-region (rol)$/;"	f
glc-adjust-list	.emacs.d/evil/lib/goto-chg.el	/^(defun glc-adjust-list (r)$/;"	f
glc-adjust-pos	.emacs.d/evil/lib/goto-chg.el	/^(defun glc-adjust-pos (pos e)$/;"	f
glc-adjust-pos2	.emacs.d/evil/lib/goto-chg.el	/^(defun glc-adjust-pos2 (pos p1 p2 adj)$/;"	f
glc-center-ellipsis	.emacs.d/evil/lib/goto-chg.el	/^(defun glc-center-ellipsis (str maxlen &optional ellipsis)$/;"	f
glc-current-span	.emacs.d/evil/lib/goto-chg.el	/^(defvar glc-current-span 8 "Internal for goto-last-change.\\nA copy of glc-default-span or the ARG passed to goto-last-change.")$/;"	f
glc-default-span	.emacs.d/evil/lib/goto-chg.el	/^(defvar glc-default-span 8 "*goto-last-change don't visit the same point twice. glc-default-span tells how far around a visited point not to visit again.")$/;"	f
glc-get-descript	.emacs.d/evil/lib/goto-chg.el	/^(defun glc-get-descript (e &optional n)$/;"	f
glc-get-pos	.emacs.d/evil/lib/goto-chg.el	/^(defun glc-get-pos (e)$/;"	f
glc-is-filetime	.emacs.d/evil/lib/goto-chg.el	/^(defun glc-is-filetime (e)$/;"	f
glc-is-positionable	.emacs.d/evil/lib/goto-chg.el	/^(defun glc-is-positionable (e)$/;"	f
glc-probe-depth	.emacs.d/evil/lib/goto-chg.el	/^(defvar glc-probe-depth 0 "Internal for goto-last-change.\\nIt is non-zero between successive goto-last-change.")$/;"	f
global-git-commit-mode	.emacs.d/elpa/git-commit-20190625.323/git-commit-autoloads.el	/^(defvar global-git-commit-mode t "\\$/;"	f
global-git-commit-mode	.emacs.d/elpa/git-commit-20190625.323/git-commit.el	/^(define-minor-mode global-git-commit-mode$/;"	f
global-magit-file-mode	.emacs.d/elpa/magit-20190709.1612/magit-autoloads.el	/^(defvar global-magit-file-mode t "\\$/;"	f
global-magit-file-mode	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(define-globalized-minor-mode global-magit-file-mode$/;"	f
global-undo-tree-mode	.emacs.d/evil/lib/undo-tree.el	/^(define-globalized-minor-mode global-undo-tree-mode$/;"	f
goto-last-change	.emacs.d/evil/lib/goto-chg.el	/^(defun goto-last-change (arg)$/;"	f
goto-last-change-reverse	.emacs.d/evil/lib/goto-chg.el	/^(defun goto-last-change-reverse (arg)$/;"	f
gravatar-size	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defvar gravatar-size)$/;"	f
helm--turn-on-linum-relative	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defun helm--turn-on-linum-relative ()$/;"	f
helm-alive-p	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defvar helm-alive-p)$/;"	f
helm-buffer	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defvar helm-buffer)$/;"	f
helm-candidate-separator	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defvar helm-candidate-separator)$/;"	f
helm-completion-in-region-default-sort-fn	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defvar helm-completion-in-region-default-sort-fn)$/;"	f
helm-linum-relative-mode	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(define-minor-mode helm-linum-relative-mode$/;"	f
ido-enter-magit-status	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun ido-enter-magit-status ()$/;"	f
ido-exit	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defvar ido-exit)$/;"	f
ido-fallback	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defvar ido-fallback)$/;"	f
inhibit-magit-refresh	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar inhibit-magit-refresh nil)$/;"	f
isearch-delete-char	.emacs.d/evil/evil-search.el	/^(defadvice isearch-delete-char (around evil activate)$/;"	f
isearch-lazy-highlight-search	.emacs.d/evil/evil-search.el	/^(defadvice isearch-lazy-highlight-search (around evil activate)$/;"	f
isearch-message-prefix	.emacs.d/evil/evil-search.el	/^(defadvice isearch-message-prefix (around evil activate)$/;"	f
ivy-sort-functions-alist	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defvar ivy-sort-functions-alist)$/;"	f
keyboard-quit	.emacs.d/evil/evil-integration.el	/^(defadvice keyboard-quit (before evil activate)$/;"	f
linum-relative	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defgroup linum-relative nil$/;"	f
linum-relative	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defun linum-relative (line-number)$/;"	f
linum-relative-backend	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defcustom linum-relative-backend 'linum-mode$/;"	f
linum-relative-current-face	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defface linum-relative-current-face$/;"	f
linum-relative-current-symbol	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defcustom linum-relative-current-symbol "0"$/;"	f
linum-relative-for-helm	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defun linum-relative-for-helm ()$/;"	f
linum-relative-format	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defcustom linum-relative-format "%3s"$/;"	f
linum-relative-global-mode	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative-autoloads.el	/^(defvar linum-relative-global-mode nil "\\$/;"	f
linum-relative-global-mode	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(define-global-minor-mode linum-relative-global-mode$/;"	f
linum-relative-in-helm-p	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defun linum-relative-in-helm-p ()$/;"	f
linum-relative-last-pos	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defvar linum-relative-last-pos 0$/;"	f
linum-relative-lighter	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defcustom linum-relative-lighter " LR"$/;"	f
linum-relative-mode	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(define-minor-mode linum-relative-mode$/;"	f
linum-relative-off	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defun linum-relative-off ()$/;"	f
linum-relative-on	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defun linum-relative-on ()$/;"	f
linum-relative-plusp-offset	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defcustom linum-relative-plusp-offset 0$/;"	f
linum-relative-toggle	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defun linum-relative-toggle ()$/;"	f
linum-relative-user-format	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defvar linum-relative-user-format linum-format$/;"	f
linum-relative-user-type	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defvar linum-relative-user-type (bound-and-true-p display-line-numbers-type)$/;"	f
linum-relative-with-helm-buffer	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defmacro linum-relative-with-helm-buffer (&rest body)$/;"	f
linum-update	.emacs.d/elpa/linum-relative-20180124.1047/linum-relative.el	/^(defadvice linum-update (before relative-linum-update activate)$/;"	f
magit	.emacs.d/elpa/magit-20190709.1612/magit-core.el	/^(defgroup magit nil$/;"	f
magit	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defalias 'magit 'magit-status$/;"	f
magit--age	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defun magit--age (date &optional abbreviate)$/;"	f
magit--age-spec	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defvar magit--age-spec$/;"	f
magit--age-spec	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defvar magit--age-spec)$/;"	f
magit--assert-default-directory	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit--assert-default-directory (&optional noerror)$/;"	f
magit--branch-spinoff	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit--branch-spinoff (branch from checkout)$/;"	f
magit--buffer-string	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit--buffer-string (&optional min max trim)$/;"	f
magit--cherry-move	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit--cherry-move (commits src dst args$/;"	f
magit--cherry-move-read-args	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit--cherry-move-read-args (verb away fn)$/;"	f
magit--cherry-pick	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit--cherry-pick (commits args &optional revert)$/;"	f
magit--cherry-spinoff-read-args	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit--cherry-spinoff-read-args (verb)$/;"	f
magit--completion-table	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit--completion-table (collection)$/;"	f
magit--confirm-actions	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defconst magit--confirm-actions$/;"	f
magit--current-section-hook	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar magit--current-section-hook nil$/;"	f
magit--default-directory	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit--default-directory nil$/;"	f
magit--default-starting-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit--default-starting-point ()$/;"	f
magit--display-buffer-fullcolumn	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit--display-buffer-fullcolumn (buffer alist)$/;"	f
magit--display-buffer-fullframe	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit--display-buffer-fullframe (buffer alist)$/;"	f
magit--display-buffer-topleft	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit--display-buffer-topleft (buffer alist)$/;"	f
magit--ellipses-sections	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar-local magit--ellipses-sections nil)$/;"	f
magit--format-spec	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit--format-spec (format specification)$/;"	f
magit--git-branch:upstream	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defclass magit--git-branch:upstream (magit--git-variable)$/;"	f
magit--git-submodule-suffix	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defclass magit--git-submodule-suffix (transient-suffix)$/;"	f
magit--git-variable	.emacs.d/elpa/magit-20190709.1612/magit-transient.el	/^(defclass magit--git-variable (transient-variable)$/;"	f
magit--git-variable:choices	.emacs.d/elpa/magit-20190709.1612/magit-transient.el	/^(defclass magit--git-variable:choices (magit--git-variable)$/;"	f
magit--git-variable:urls	.emacs.d/elpa/magit-20190709.1612/magit-transient.el	/^(defclass magit--git-variable:urls (magit--git-variable)$/;"	f
magit--gitignore	.emacs.d/elpa/magit-20190709.1612/magit-gitignore.el	/^(defun magit--gitignore (rule file)$/;"	f
magit--handle-bookmark	.emacs.d/elpa/magit-20190709.1612/magit-bookmark.el	/^(defun magit--handle-bookmark (bookmark)$/;"	f
magit--insert-diff	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit--insert-diff (&rest args)$/;"	f
magit--insert-modules	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit--insert-modules (&optional _section)$/;"	f
magit--insert-modules-logs	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit--insert-modules-logs (heading type range)$/;"	f
magit--insert-modules-overview	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit--insert-modules-overview (&optional _section)$/;"	f
magit--insert-related-refs	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit--insert-related-refs (rev arg title remote)$/;"	f
magit--libgit-available-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit--libgit-available-p ()$/;"	f
magit--libgit-available-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit--libgit-available-p eieio-unbound$/;"	f
magit--list-releases	.emacs.d/elpa/magit-20190709.1612/magit-tag.el	/^(defun magit--list-releases ()$/;"	f
magit--locate-error-message	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit--locate-error-message ()$/;"	f
magit--log-action	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit--log-action (summary line list)$/;"	f
magit--magit-popup-warning	.emacs.d/elpa/magit-20190709.1612/magit-obsolete.el	/^(defun magit--magit-popup-warning ()$/;"	f
magit--make-bookmark	.emacs.d/elpa/magit-20190709.1612/magit-bookmark.el	/^(defun magit--make-bookmark ()$/;"	f
magit--merge-absorb	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit--merge-absorb (branch args)$/;"	f
magit--merge-absorb-1	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit--merge-absorb-1 (branch args)$/;"	f
magit--merge-range	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit--merge-range (&optional head)$/;"	f
magit--minimal-emacs	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defconst magit--minimal-emacs "25.1")$/;"	f
magit--minimal-git	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defconst magit--minimal-git "2.2.0")$/;"	f
magit--no-confirm-alist	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defvar magit--no-confirm-alist$/;"	f
magit--not-inside-repository-error	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit--not-inside-repository-error ()$/;"	f
magit--painted-branch-at-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit--painted-branch-at-point (&optional type)$/;"	f
magit--process-coding-system	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit--process-coding-system ()$/;"	f
magit--push-remote-variable	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defun magit--push-remote-variable (&optional branch short)$/;"	f
magit--read-branch-scope	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit--read-branch-scope (&optional obj)$/;"	f
magit--read-remote-scope	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defun magit--read-remote-scope (&optional obj)$/;"	f
magit--rebase-public-edit-confirmed	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defvar magit--rebase-public-edit-confirmed nil)$/;"	f
magit--rebase-published-symbol	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defvar magit--rebase-published-symbol nil)$/;"	f
magit--rebase-resume-command	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit--rebase-resume-command ()$/;"	f
magit--record-separated-gitdir	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit--record-separated-gitdir ()$/;"	f
magit--refresh-cache	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit--refresh-cache nil)$/;"	f
magit--refspec-re	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defconst magit--refspec-re "\\\\`\\\\(\\\\+\\\\)?\\\\([^:]+\\\\):\\\\(.*\\\\)\\\\'")$/;"	f
magit--remotes-using-recent-git	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defvar magit--remotes-using-recent-git nil)$/;"	f
magit--rename-reflog-file	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit--rename-reflog-file (old new)$/;"	f
magit--reshelve-history	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defvar magit--reshelve-history nil)$/;"	f
magit--safe-default-directory	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit--safe-default-directory (&optional file)$/;"	f
magit--section-type-alist	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar magit--section-type-alist$/;"	f
magit--select-push-remote	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defun magit--select-push-remote (prompt-suffix)$/;"	f
magit--separated-gitdirs	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit--separated-gitdirs nil)$/;"	f
magit--shell-command	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defun magit--shell-command (command &optional directory)$/;"	f
magit--tramp-asserts	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit--tramp-asserts (directory)$/;"	f
magit--turn-on-shift-select-mode-p	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit--turn-on-shift-select-mode-p ()$/;"	f
magit--unnamed-upstream-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit--unnamed-upstream-p (remote merge)$/;"	f
magit--update-blob-buffer	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit--update-blob-buffer nil)$/;"	f
magit--update-revision-buffer	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit--update-revision-buffer nil)$/;"	f
magit--valid-upstream-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit--valid-upstream-p (remote merge)$/;"	f
magit--wip-index-ref	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit--wip-index-ref (&optional ref)$/;"	f
magit--wip-ref	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit--wip-ref (namespace &optional ref)$/;"	f
magit--wip-wtree-ref	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit--wip-wtree-ref (&optional ref)$/;"	f
magit--with-refresh-cache	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defmacro magit--with-refresh-cache (key &rest body)$/;"	f
magit--with-safe-default-directory	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defmacro magit--with-safe-default-directory (file &rest body)$/;"	f
magit--with-temp-position	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defmacro magit--with-temp-position (buf pos &rest body)$/;"	f
magit-abbrev-arg	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-abbrev-arg (&optional arg)$/;"	f
magit-abbrev-length	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-abbrev-length ()$/;"	f
magit-abort-dwim	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-abort-dwim ()$/;"	f
magit-add-change-log-entry	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-add-change-log-entry (&optional whoami file-name other-window)$/;"	f
magit-add-change-log-entry-other-window	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-add-change-log-entry-other-window (&optional whoami file-name)$/;"	f
magit-add-section-hook	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-add-section-hook (hook function &optional at append local)$/;"	f
magit-after-save-refresh-buffers	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-after-save-refresh-buffers ()$/;"	f
magit-after-save-refresh-buffers	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar magit-after-save-refresh-buffers nil)$/;"	f
magit-after-save-refresh-status	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-after-save-refresh-status ()$/;"	f
magit-am	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(define-transient-command magit-am ()$/;"	f
magit-am-abort	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-am-abort ()$/;"	f
magit-am-apply-maildir	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-am-apply-maildir (&optional maildir args)$/;"	f
magit-am-apply-patches	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-am-apply-patches (&optional files args)$/;"	f
magit-am-arguments	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-am-arguments ()$/;"	f
magit-am-continue	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-am-continue ()$/;"	f
magit-am-in-progress-p	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-am-in-progress-p ()$/;"	f
magit-am-skip	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-am-skip ()$/;"	f
magit-anything-modified-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-anything-modified-p (&optional ignore-submodules &rest files)$/;"	f
magit-anything-staged-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-anything-staged-p (&optional ignore-submodules &rest files)$/;"	f
magit-anything-unmerged-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-anything-unmerged-p (&rest files)$/;"	f
magit-anything-unstaged-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-anything-unstaged-p (&optional ignore-submodules &rest files)$/;"	f
magit-apply	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-apply (&rest args)$/;"	f
magit-apply--diff-ignores-whitespace-p	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-apply--diff-ignores-whitespace-p ()$/;"	f
magit-apply--get-diffs	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-apply--get-diffs (sections)$/;"	f
magit-apply--get-selection	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-apply--get-selection ()$/;"	f
magit-apply--section-content	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-apply--section-content (section)$/;"	f
magit-apply-diff	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-apply-diff (section &rest args)$/;"	f
magit-apply-diffs	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-apply-diffs (sections &rest args)$/;"	f
magit-apply-hunk	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-apply-hunk (section &rest args)$/;"	f
magit-apply-hunks	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-apply-hunks (sections &rest args)$/;"	f
magit-apply-patch	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-apply-patch (section:s args patch)$/;"	f
magit-apply-region	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-apply-region (section &rest args)$/;"	f
magit-apply:-p	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(define-infix-argument magit-apply:-p ()$/;"	f
magit-auto-revert	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(defgroup magit-auto-revert nil$/;"	f
magit-auto-revert-buffer-p	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(defun magit-auto-revert-buffer-p (buffer)$/;"	f
magit-auto-revert-buffers	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(defun magit-auto-revert-buffers ()$/;"	f
magit-auto-revert-counter	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(defvar magit-auto-revert-counter 1$/;"	f
magit-auto-revert-immediately	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(defcustom magit-auto-revert-immediately t$/;"	f
magit-auto-revert-mode	.emacs.d/elpa/magit-20190709.1612/magit-autoloads.el	/^(defvar magit-auto-revert-mode (not (or global-auto-revert-mode noninteractive)) "\\$/;"	f
magit-auto-revert-mode	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(define-globalized-minor-mode magit-auto-revert-mode auto-revert-mode$/;"	f
magit-auto-revert-mode--init-kludge	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(defun magit-auto-revert-mode--init-kludge ()$/;"	f
magit-auto-revert-repository-buffer-p	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(defun magit-auto-revert-repository-buffer-p (buffer &optional fallback)$/;"	f
magit-auto-revert-toplevel	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(defvar magit-auto-revert-toplevel nil)$/;"	f
magit-auto-revert-tracked-only	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(defcustom magit-auto-revert-tracked-only t$/;"	f
magit-autofixup:--context	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(define-infix-argument magit-autofixup:--context ()$/;"	f
magit-autofixup:--strict	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(define-infix-argument magit-autofixup:--strict ()$/;"	f
magit-binary-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-binary-files (&rest args)$/;"	f
magit-bind-match-strings	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defmacro magit-bind-match-strings (varlist string &rest body)$/;"	f
magit-bisect	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(define-transient-command magit-bisect ()$/;"	f
magit-bisect-bad	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defface magit-bisect-bad$/;"	f
magit-bisect-bad	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-bisect-bad ()$/;"	f
magit-bisect-good	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defface magit-bisect-good$/;"	f
magit-bisect-good	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-bisect-good ()$/;"	f
magit-bisect-in-progress-p	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-bisect-in-progress-p ()$/;"	f
magit-bisect-reset	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-bisect-reset ()$/;"	f
magit-bisect-run	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-bisect-run (cmdline &optional bad good)$/;"	f
magit-bisect-show-graph	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defcustom magit-bisect-show-graph t$/;"	f
magit-bisect-skip	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defface magit-bisect-skip$/;"	f
magit-bisect-skip	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-bisect-skip ()$/;"	f
magit-bisect-start	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-bisect-start (bad good)$/;"	f
magit-bisect-start-read-args	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-bisect-start-read-args ()$/;"	f
magit-blame	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defgroup magit-blame nil$/;"	f
magit-blame	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(define-transient-command magit-blame ()$/;"	f
magit-blame--commit-alist	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--commit-alist (rev)$/;"	f
magit-blame--format-separator	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--format-separator ()$/;"	f
magit-blame--format-string	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--format-string (ov format face)$/;"	f
magit-blame--format-string-1	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--format-string-1 (rev revinfo format face)$/;"	f
magit-blame--format-time-string	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--format-time-string (time tz)$/;"	f
magit-blame--make-heading-overlay	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--make-heading-overlay (chunk revinfo beg end)$/;"	f
magit-blame--make-highlight-overlay	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--make-highlight-overlay (chunk beg)$/;"	f
magit-blame--make-margin-overlay	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--make-margin-overlay (chunk revinfo line)$/;"	f
magit-blame--make-margin-overlays	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--make-margin-overlays (chunk revinfo _beg end)$/;"	f
magit-blame--make-overlays	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--make-overlays (buf chunk revinfo)$/;"	f
magit-blame--overlay-at	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--overlay-at (&optional pos key)$/;"	f
magit-blame--parse-chunk	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--parse-chunk (type)$/;"	f
magit-blame--pre-blame-assert	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--pre-blame-assert (type)$/;"	f
magit-blame--pre-blame-setup	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--pre-blame-setup (type)$/;"	f
magit-blame--remove-overlays	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--remove-overlays (&optional beg end)$/;"	f
magit-blame--run	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--run ()$/;"	f
magit-blame--style	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defvar-local magit-blame--style nil)$/;"	f
magit-blame--style-get	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defsubst magit-blame--style-get (key)$/;"	f
magit-blame--update-heading-overlay	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--update-heading-overlay (ov)$/;"	f
magit-blame--update-highlight-overlay	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--update-highlight-overlay (ov)$/;"	f
magit-blame--update-margin	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--update-margin ()$/;"	f
magit-blame--update-margin-overlay	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--update-margin-overlay (ov)$/;"	f
magit-blame--update-overlays	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame--update-overlays ()$/;"	f
magit-blame-addition	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(define-suffix-command magit-blame-addition ()$/;"	f
magit-blame-arguments	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-arguments ()$/;"	f
magit-blame-assert-buffer	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-assert-buffer (process)$/;"	f
magit-blame-buffer-read-only	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defvar-local magit-blame-buffer-read-only nil)$/;"	f
magit-blame-cache	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defvar-local magit-blame-cache nil)$/;"	f
magit-blame-chunk	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defclass magit-blame-chunk ()$/;"	f
magit-blame-chunk-at	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-chunk-at (pos)$/;"	f
magit-blame-copy-hash	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-copy-hash ()$/;"	f
magit-blame-cycle-style	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-cycle-style ()$/;"	f
magit-blame-date	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defface magit-blame-date nil$/;"	f
magit-blame-dimmed	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defface magit-blame-dimmed$/;"	f
magit-blame-disable-modes	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defcustom magit-blame-disable-modes '(fci-mode yascroll-bar-mode)$/;"	f
magit-blame-disabled-modes	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defvar-local magit-blame-disabled-modes nil)$/;"	f
magit-blame-echo	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(define-suffix-command magit-blame-echo ()$/;"	f
magit-blame-echo-style	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defcustom magit-blame-echo-style 'lines$/;"	f
magit-blame-goto-chunk-hook	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defcustom magit-blame-goto-chunk-hook$/;"	f
magit-blame-goto-chunk-hook	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-goto-chunk-hook ()$/;"	f
magit-blame-hash	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defface magit-blame-hash nil$/;"	f
magit-blame-heading	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defface magit-blame-heading$/;"	f
magit-blame-highlight	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defface magit-blame-highlight$/;"	f
magit-blame-margin	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defface magit-blame-margin$/;"	f
magit-blame-maybe-show-message	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-maybe-show-message ()$/;"	f
magit-blame-maybe-update-revision-buffer	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-maybe-update-revision-buffer ()$/;"	f
magit-blame-mode	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(define-minor-mode magit-blame-mode$/;"	f
magit-blame-mode	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defvar magit-blame-mode)$/;"	f
magit-blame-mode-lighter	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defcustom magit-blame-mode-lighter " Blame"$/;"	f
magit-blame-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defvar magit-blame-mode-map$/;"	f
magit-blame-name	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defface magit-blame-name nil$/;"	f
magit-blame-next-chunk	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-next-chunk ()$/;"	f
magit-blame-next-chunk-same-commit	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-next-chunk-same-commit (&optional previous)$/;"	f
magit-blame-previous-chunk	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-previous-chunk ()$/;"	f
magit-blame-previous-chunk	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defvar-local magit-blame-previous-chunk nil)$/;"	f
magit-blame-previous-chunk-same-commit	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-previous-chunk-same-commit ()$/;"	f
magit-blame-process	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defvar-local magit-blame-process nil)$/;"	f
magit-blame-process-filter	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-process-filter (process string)$/;"	f
magit-blame-process-quickstart-sentinel	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-process-quickstart-sentinel (process event)$/;"	f
magit-blame-process-sentinel	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-process-sentinel (process _event &optional quiet)$/;"	f
magit-blame-put-keymap-before-view-mode	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-put-keymap-before-view-mode ()$/;"	f
magit-blame-quit	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(define-suffix-command magit-blame-quit ()$/;"	f
magit-blame-read-only	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defcustom magit-blame-read-only t$/;"	f
magit-blame-read-only-mode	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(define-minor-mode magit-blame-read-only-mode$/;"	f
magit-blame-read-only-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defvar magit-blame-read-only-mode-map$/;"	f
magit-blame-recursive-p	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defvar-local magit-blame-recursive-p nil)$/;"	f
magit-blame-removal	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(define-suffix-command magit-blame-removal ()$/;"	f
magit-blame-reverse	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(define-suffix-command magit-blame-reverse ()$/;"	f
magit-blame-run-process	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-run-process (revision file args &optional lines)$/;"	f
magit-blame-separator	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defvar-local magit-blame-separator nil)$/;"	f
magit-blame-styles	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defcustom magit-blame-styles$/;"	f
magit-blame-summary	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defface magit-blame-summary nil$/;"	f
magit-blame-time-format	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defcustom magit-blame-time-format "%F %H:%M"$/;"	f
magit-blame-toggle-read-only	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-toggle-read-only ()$/;"	f
magit-blame-type	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defvar-local magit-blame-type nil)$/;"	f
magit-blame-visit-file	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-visit-file ()$/;"	f
magit-blame-visit-other-file	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-blame-visit-other-file ()$/;"	f
magit-blame:-C	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(define-infix-argument magit-blame:-C ()$/;"	f
magit-blame:-M	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(define-infix-argument magit-blame:-M ()$/;"	f
magit-blob-ancestor	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-blob-ancestor (rev file)$/;"	f
magit-blob-mode	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(define-minor-mode magit-blob-mode$/;"	f
magit-blob-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defvar magit-blob-mode-map$/;"	f
magit-blob-next	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-blob-next ()$/;"	f
magit-blob-previous	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-blob-previous ()$/;"	f
magit-blob-successor	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-blob-successor (rev file)$/;"	f
magit-blob-visit	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-blob-visit (blob-or-file)$/;"	f
magit-blob-visit-file	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-blob-visit-file ()$/;"	f
magit-branch	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(define-transient-command magit-branch (branch)$/;"	f
magit-branch-adjust-remote-upstream-alist	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defcustom magit-branch-adjust-remote-upstream-alist nil$/;"	f
magit-branch-and-checkout	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-and-checkout (branch start-point)$/;"	f
magit-branch-at-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-branch-at-point ()$/;"	f
magit-branch-checkout	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-checkout (branch &optional start-point)$/;"	f
magit-branch-configure	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(define-transient-command magit-branch-configure (branch)$/;"	f
magit-branch-create	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-create (branch start-point)$/;"	f
magit-branch-current	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-branch-current$/;"	f
magit-branch-delete	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-delete (branches &optional force)$/;"	f
magit-branch-description-check-buffers	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-description-check-buffers ()$/;"	f
magit-branch-direct-configure	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defcustom magit-branch-direct-configure t$/;"	f
magit-branch-local	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-branch-local$/;"	f
magit-branch-maybe-adjust-upstream	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-maybe-adjust-upstream (branch start-point)$/;"	f
magit-branch-maybe-delete-pr-remote	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-maybe-delete-pr-remote (branch)$/;"	f
magit-branch-merged-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-branch-merged-p (branch &optional target)$/;"	f
magit-branch-or-checkout	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-or-checkout (arg &optional start-point)$/;"	f
magit-branch-or-commit-at-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-branch-or-commit-at-point ()$/;"	f
magit-branch-orphan	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-orphan (branch start-point)$/;"	f
magit-branch-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-branch-p (rev)$/;"	f
magit-branch-popup-show-variables	.emacs.d/elpa/magit-20190709.1612/magit-obsolete.el	/^(define-obsolete-variable-alias 'magit-branch-popup-show-variables$/;"	f
magit-branch-prefer-remote-upstream	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defcustom magit-branch-prefer-remote-upstream nil$/;"	f
magit-branch-prefer-remote-upstream	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-branch-prefer-remote-upstream)$/;"	f
magit-branch-read-args	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-read-args (prompt &optional default-start)$/;"	f
magit-branch-read-upstream-first	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defcustom magit-branch-read-upstream-first t$/;"	f
magit-branch-remote	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-branch-remote$/;"	f
magit-branch-remote-head	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-branch-remote-head$/;"	f
magit-branch-rename	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-rename (old new &optional force)$/;"	f
magit-branch-rename-push-target	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defcustom magit-branch-rename-push-target t$/;"	f
magit-branch-reset	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-reset (branch to &optional set-upstream)$/;"	f
magit-branch-section-map	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defvar magit-branch-section-map$/;"	f
magit-branch-set-face	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-branch-set-face (branch)$/;"	f
magit-branch-shelve	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-shelve (branch)$/;"	f
magit-branch-spinoff	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-spinoff (branch &optional from)$/;"	f
magit-branch-spinout	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-spinout (branch &optional from)$/;"	f
magit-branch-unset-pushRemote	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-unset-pushRemote (branch)$/;"	f
magit-branch-unshelve	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-branch-unshelve (branch)$/;"	f
magit-branch-upstream	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-branch-upstream$/;"	f
magit-branch.<branch>.description	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(define-suffix-command magit-branch.<branch>.description (branch)$/;"	f
magit-branch.<branch>.merge/remote	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(define-infix-command magit-branch.<branch>.merge\/remote ()$/;"	f
magit-branch.<branch>.pushRemote	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(define-infix-command magit-branch.<branch>.pushRemote ()$/;"	f
magit-branch.<branch>.rebase	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(define-infix-command magit-branch.<branch>.rebase ()$/;"	f
magit-branch.autoSetupMerge	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(define-infix-command magit-branch.autoSetupMerge ()$/;"	f
magit-branch.autoSetupRebase	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(define-infix-command magit-branch.autoSetupRebase ()$/;"	f
magit-browse-thing	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-browse-thing ()$/;"	f
magit-buffer-arguments	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-arguments nil)$/;"	f
magit-buffer-diff-args	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-buffer-diff-args)$/;"	f
magit-buffer-diff-args	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-diff-args nil)$/;"	f
magit-buffer-diff-files	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-diff-files nil)$/;"	f
magit-buffer-diff-files-suspended	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-diff-files-suspended nil)$/;"	f
magit-buffer-file-name	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-buffer-file-name)$/;"	f
magit-buffer-file-name	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-file-name nil)$/;"	f
magit-buffer-files	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-files nil)$/;"	f
magit-buffer-lock-functions	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar magit-buffer-lock-functions nil$/;"	f
magit-buffer-locked-p	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-locked-p nil)$/;"	f
magit-buffer-log-args	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-buffer-log-args)$/;"	f
magit-buffer-log-args	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-log-args nil)$/;"	f
magit-buffer-log-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-buffer-log-files)$/;"	f
magit-buffer-log-files	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-log-files nil)$/;"	f
magit-buffer-margin	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-buffer-margin)$/;"	f
magit-buffer-margin	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defvar-local magit-buffer-margin nil)$/;"	f
magit-buffer-margin-p	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defun magit-buffer-margin-p ()$/;"	f
magit-buffer-name-format	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-buffer-name-format "%x%M%v: %t%x"$/;"	f
magit-buffer-range	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-range nil)$/;"	f
magit-buffer-range-hashed	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-range-hashed nil)$/;"	f
magit-buffer-refname	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-buffer-refname)$/;"	f
magit-buffer-refname	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-refname nil)$/;"	f
magit-buffer-revision	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-buffer-revision)$/;"	f
magit-buffer-revision	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-revision nil)$/;"	f
magit-buffer-revision-hash	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-revision-hash nil)$/;"	f
magit-buffer-revisions	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-revisions nil)$/;"	f
magit-buffer-typearg	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-typearg nil)$/;"	f
magit-buffer-upstream	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-buffer-upstream nil)$/;"	f
magit-buffers	.emacs.d/elpa/magit-20190709.1612/magit-core.el	/^(defgroup magit-buffers nil$/;"	f
magit-builtin-completing-read	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-builtin-completing-read$/;"	f
magit-bury-buffer-function	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-bury-buffer-function 'magit-restore-window-configuration$/;"	f
magit-call-git	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-call-git (&rest args)$/;"	f
magit-call-process	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-call-process (program &rest args)$/;"	f
magit-cancel-section	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-cancel-section ()$/;"	f
magit-changed-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-changed-files (rev-or-range &optional other-rev)$/;"	f
magit-checkout	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-checkout (revision)$/;"	f
magit-checkout-read-stage	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-checkout-read-stage (file)$/;"	f
magit-checkout-stage	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-checkout-stage (file arg)$/;"	f
magit-cherry	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-cherry (head upstream)$/;"	f
magit-cherry-apply	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-cherry-apply (commits &optional args)$/;"	f
magit-cherry-copy	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-cherry-copy (commits &optional args)$/;"	f
magit-cherry-donate	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-cherry-donate (commits branch &optional args)$/;"	f
magit-cherry-equivalent	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-cherry-equivalent$/;"	f
magit-cherry-harvest	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-cherry-harvest (commits branch &optional args)$/;"	f
magit-cherry-margin	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-cherry-margin$/;"	f
magit-cherry-mode	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(define-derived-mode magit-cherry-mode magit-mode "Magit Cherry"$/;"	f
magit-cherry-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-cherry-mode-map$/;"	f
magit-cherry-pick	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(define-transient-command magit-cherry-pick ()$/;"	f
magit-cherry-pick-in-progress-p	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-cherry-pick-in-progress-p ()$/;"	f
magit-cherry-pick-read-args	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-cherry-pick-read-args (prompt)$/;"	f
magit-cherry-pick:--mainline	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(define-infix-argument magit-cherry-pick:--mainline ()$/;"	f
magit-cherry-refresh-buffer	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-cherry-refresh-buffer ()$/;"	f
magit-cherry-sections-hook	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-cherry-sections-hook$/;"	f
magit-cherry-setup-buffer	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-cherry-setup-buffer (head upstream)$/;"	f
magit-cherry-spinoff	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-cherry-spinoff (commits branch start-point &optional args)$/;"	f
magit-cherry-spinout	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-cherry-spinout (commits branch start-point &optional args)$/;"	f
magit-cherry-unmatched	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-cherry-unmatched$/;"	f
magit-clean	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-clean (&optional arg)$/;"	f
magit-clone	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(define-transient-command magit-clone (&optional transient)$/;"	f
magit-clone--name-to-url	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defun magit-clone--name-to-url (name)$/;"	f
magit-clone-always-transient	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defcustom magit-clone-always-transient nil$/;"	f
magit-clone-bare	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defun magit-clone-bare (repository directory args)$/;"	f
magit-clone-default-directory	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defcustom magit-clone-default-directory nil$/;"	f
magit-clone-internal	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defun magit-clone-internal (repository directory args)$/;"	f
magit-clone-mirror	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defun magit-clone-mirror (repository directory args)$/;"	f
magit-clone-name-alist	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defcustom magit-clone-name-alist$/;"	f
magit-clone-read-args	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defun magit-clone-read-args ()$/;"	f
magit-clone-read-repository	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defun magit-clone-read-repository ()$/;"	f
magit-clone-regular	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defun magit-clone-regular (repository directory args)$/;"	f
magit-clone-set-remote-head	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defcustom magit-clone-set-remote-head nil$/;"	f
magit-clone-set-remote.pushDefault	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defcustom magit-clone-set-remote.pushDefault 'ask$/;"	f
magit-clone-shallow	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defun magit-clone-shallow (repository directory args depth)$/;"	f
magit-clone-shallow-exclude	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defun magit-clone-shallow-exclude (repository directory args exclude)$/;"	f
magit-clone-shallow-since	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defun magit-clone-shallow-since (repository directory args date)$/;"	f
magit-clone-url-format	.emacs.d/elpa/magit-20190709.1612/magit-clone.el	/^(defcustom magit-clone-url-format "git@%h:%n.git"$/;"	f
magit-commands	.emacs.d/elpa/magit-20190709.1612/magit-core.el	/^(defgroup magit-commands nil$/;"	f
magit-commit	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(define-transient-command magit-commit ()$/;"	f
magit-commit-absorb	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(define-transient-command magit-commit-absorb (phase commit args)$/;"	f
magit-commit-add-log	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-add-log ()$/;"	f
magit-commit-add-log-insert	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-add-log-insert (buffer file defun)$/;"	f
magit-commit-add-log-insert-function	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defvar magit-commit-add-log-insert-function 'magit-commit-add-log-insert$/;"	f
magit-commit-amend	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-amend (&optional args)$/;"	f
magit-commit-amend-assert	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-amend-assert (&optional commit)$/;"	f
magit-commit-arguments	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-arguments nil$/;"	f
magit-commit-ask-to-stage	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defcustom magit-commit-ask-to-stage 'verbose$/;"	f
magit-commit-assert	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-assert (args &optional strict)$/;"	f
magit-commit-at-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-commit-at-point ()$/;"	f
magit-commit-augment	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-augment (&optional commit args)$/;"	f
magit-commit-children	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-commit-children (commit &optional args)$/;"	f
magit-commit-create	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-create (&optional args)$/;"	f
magit-commit-diff	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-diff ()$/;"	f
magit-commit-extend	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-extend (&optional args override-date)$/;"	f
magit-commit-extend-override-date	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defcustom magit-commit-extend-override-date t$/;"	f
magit-commit-fixup	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-fixup (&optional commit args)$/;"	f
magit-commit-instant-fixup	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-instant-fixup (&optional commit args)$/;"	f
magit-commit-instant-squash	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-instant-squash (&optional commit args)$/;"	f
magit-commit-message-buffer	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-message-buffer ()$/;"	f
magit-commit-message-section-map	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defvar magit-commit-message-section-map$/;"	f
magit-commit-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-commit-p (rev)$/;"	f
magit-commit-parents	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-commit-parents (commit)$/;"	f
magit-commit-reshelve	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-reshelve (date)$/;"	f
magit-commit-reword	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-reword (&optional args override-date)$/;"	f
magit-commit-reword-override-date	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defcustom magit-commit-reword-override-date t$/;"	f
magit-commit-section-map	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-commit-section-map$/;"	f
magit-commit-show-diff	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defcustom magit-commit-show-diff t$/;"	f
magit-commit-squash	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-squash (&optional commit args)$/;"	f
magit-commit-squash-confirm	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defcustom magit-commit-squash-confirm t$/;"	f
magit-commit-squash-internal	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-commit-squash-internal$/;"	f
magit-commit-tree	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-commit-tree (message &optional tree &rest parents)$/;"	f
magit-commit-worktree	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-commit-worktree (message &optional arg &rest other-parents)$/;"	f
magit-commit:--reuse-message	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(define-infix-argument magit-commit:--reuse-message ()$/;"	f
magit-completing-read	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-completing-read (prompt collection &optional$/;"	f
magit-completing-read--silent-default	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defvar magit-completing-read--silent-default nil)$/;"	f
magit-completing-read-function	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defcustom magit-completing-read-function 'magit-builtin-completing-read$/;"	f
magit-completing-read-multiple	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-completing-read-multiple$/;"	f
magit-completing-read-multiple*	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-completing-read-multiple*$/;"	f
magit-completion-pcm--all-completions	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-completion-pcm--all-completions (prefix pattern table pred)$/;"	f
magit-config-get-from-cached-list	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-config-get-from-cached-list (key)$/;"	f
magit-confirm-files	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-confirm-files (action files &optional prompt)$/;"	f
magit-confirm-make-prompt	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-confirm-make-prompt (action)$/;"	f
magit-convert-filename-for-git	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-convert-filename-for-git (filename)$/;"	f
magit-copy-buffer-revision	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-copy-buffer-revision ()$/;"	f
magit-copy-section-value	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-copy-section-value ()$/;"	f
magit-core.notesRef	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(define-infix-command magit-core.notesRef ()$/;"	f
magit-create-buffer-hook	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-create-buffer-hook nil$/;"	f
magit-credential-cache-daemon-process	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defvar magit-credential-cache-daemon-process nil)$/;"	f
magit-credential-cache-daemon-socket	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-credential-cache-daemon-socket$/;"	f
magit-credential-hook	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defvar magit-credential-hook nil$/;"	f
magit-current-blame-chunk	.emacs.d/elpa/magit-20190709.1612/magit-blame.el	/^(defun magit-current-blame-chunk (&optional type)$/;"	f
magit-current-file	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-current-file ()$/;"	f
magit-current-section	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-current-section ()$/;"	f
magit-custom-initialize-reset	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-custom-initialize-reset (symbol exp)$/;"	f
magit-cycle-margin-style	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defun magit-cycle-margin-style ()$/;"	f
magit-cygwin-mount-points	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defcustom magit-cygwin-mount-points$/;"	f
magit-debug-git-executable	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defun magit-debug-git-executable ()$/;"	f
magit-decode-git-path	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-decode-git-path (path)$/;"	f
magit-define-section-jumper	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defmacro magit-define-section-jumper (name heading type &optional value)$/;"	f
magit-delete-by-moving-to-trash	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defcustom magit-delete-by-moving-to-trash t$/;"	f
magit-delete-line	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-delete-line ()$/;"	f
magit-delete-match	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-delete-match (&optional num)$/;"	f
magit-delete-region-overlays	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-delete-region-overlays ()$/;"	f
magit-delete-remote-branch-sentinel	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defun magit-delete-remote-branch-sentinel (remote refs process event)$/;"	f
magit-delete-thing	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-delete-thing ()$/;"	f
magit-describe-section	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-describe-section (section &optional interactive-p)$/;"	f
magit-describe-section-briefly	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-describe-section-briefly (section &optional ident)$/;"	f
magit-diff	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defgroup magit-diff nil$/;"	f
magit-diff	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-transient-command magit-diff ()$/;"	f
magit-diff--dwim	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff--dwim ()$/;"	f
magit-diff--get-value	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff--get-value (mode &optional use-buffer-args)$/;"	f
magit-diff--goto-position	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff--goto-position (file line column)$/;"	f
magit-diff--hunk-after-string	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff--hunk-after-string (face)$/;"	f
magit-diff--make-hunk-overlay	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff--make-hunk-overlay (start end &rest args)$/;"	f
magit-diff--reset-non-color-moved	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defvar magit-diff--reset-non-color-moved$/;"	f
magit-diff--set-value	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff--set-value (obj &optional save)$/;"	f
magit-diff--tab-width-cache	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defvar magit-diff--tab-width-cache nil)$/;"	f
magit-diff-added	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-added$/;"	f
magit-diff-added-highlight	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-added-highlight$/;"	f
magit-diff-adjust-tab-width	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-adjust-tab-width nil$/;"	f
magit-diff-arguments	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-arguments (&optional mode)$/;"	f
magit-diff-base	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-base$/;"	f
magit-diff-base-highlight	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-base-highlight$/;"	f
magit-diff-buffer-file	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-buffer-file ()$/;"	f
magit-diff-buffer-file-locked	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-buffer-file-locked t$/;"	f
magit-diff-conflict-heading	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-conflict-heading$/;"	f
magit-diff-context	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-context$/;"	f
magit-diff-context-highlight	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-context-highlight$/;"	f
magit-diff-context-p	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-context-p ()$/;"	f
magit-diff-default-context	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-default-context ()$/;"	f
magit-diff-dwim	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-dwim (&optional args files)$/;"	f
magit-diff-edit-hunk-commit	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-diff-edit-hunk-commit (file)$/;"	f
magit-diff-expansion-threshold	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-expansion-threshold 60$/;"	f
magit-diff-expansion-threshold	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-expansion-threshold (section)$/;"	f
magit-diff-file-header	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-file-header (section)$/;"	f
magit-diff-file-heading	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-file-heading$/;"	f
magit-diff-file-heading-highlight	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-file-heading-highlight$/;"	f
magit-diff-file-heading-selection	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-file-heading-selection$/;"	f
magit-diff-flip-revs	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-flip-revs ()$/;"	f
magit-diff-headline-re	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defconst magit-diff-headline-re$/;"	f
magit-diff-hide-trailing-cr-characters	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-hide-trailing-cr-characters$/;"	f
magit-diff-highlight	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-highlight (section selection)$/;"	f
magit-diff-highlight-file	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-highlight-file (section &optional selection)$/;"	f
magit-diff-highlight-heading	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-highlight-heading (section &optional selection)$/;"	f
magit-diff-highlight-hunk-body	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-highlight-hunk-body t$/;"	f
magit-diff-highlight-hunk-region-dim-outside	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-highlight-hunk-region-dim-outside (section)$/;"	f
magit-diff-highlight-hunk-region-functions	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-highlight-hunk-region-functions$/;"	f
magit-diff-highlight-hunk-region-using-face	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-highlight-hunk-region-using-face (_section)$/;"	f
magit-diff-highlight-hunk-region-using-overlays	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-highlight-hunk-region-using-overlays (section)$/;"	f
magit-diff-highlight-hunk-region-using-underline	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-highlight-hunk-region-using-underline (section)$/;"	f
magit-diff-highlight-indentation	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-highlight-indentation nil$/;"	f
magit-diff-highlight-keywords	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-highlight-keywords t$/;"	f
magit-diff-highlight-list	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-highlight-list (section &optional selection)$/;"	f
magit-diff-highlight-recursive	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-highlight-recursive (section &optional selection)$/;"	f
magit-diff-highlight-trailing	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-highlight-trailing t$/;"	f
magit-diff-hunk-column	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-hunk-column (section goto-from)$/;"	f
magit-diff-hunk-heading	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-hunk-heading$/;"	f
magit-diff-hunk-heading-highlight	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-hunk-heading-highlight$/;"	f
magit-diff-hunk-heading-selection	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-hunk-heading-selection$/;"	f
magit-diff-hunk-line	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-hunk-line (section goto-from)$/;"	f
magit-diff-hunk-region	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-hunk-region$/;"	f
magit-diff-hunk-region-beginning	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-hunk-region-beginning ()$/;"	f
magit-diff-hunk-region-end	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-hunk-region-end ()$/;"	f
magit-diff-hunk-region-header	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-hunk-region-header (section)$/;"	f
magit-diff-hunk-region-patch	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-hunk-region-patch (section &optional args)$/;"	f
magit-diff-ignore-any-space-p	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-ignore-any-space-p ()$/;"	f
magit-diff-insert-file-section	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-insert-file-section (file orig status modes header)$/;"	f
magit-diff-inside-hunk-body-p	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-inside-hunk-body-p ()$/;"	f
magit-diff-less-context	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-less-context (&optional count)$/;"	f
magit-diff-lines-boundary	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-lines-boundary$/;"	f
magit-diff-lines-heading	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-lines-heading$/;"	f
magit-diff-mode	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-derived-mode magit-diff-mode magit-mode "Magit Diff"$/;"	f
magit-diff-mode-hook	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-mode-hook nil$/;"	f
magit-diff-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defvar magit-diff-mode-map$/;"	f
magit-diff-more-context	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-more-context (&optional count)$/;"	f
magit-diff-our	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-our$/;"	f
magit-diff-our-highlight	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-our-highlight$/;"	f
magit-diff-paint-tab	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-paint-tab (merging width)$/;"	f
magit-diff-paint-whitespace	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-paint-whitespace t$/;"	f
magit-diff-paint-whitespace	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-paint-whitespace (merging line-type diff-type)$/;"	f
magit-diff-paint-whitespace-lines	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-paint-whitespace-lines t$/;"	f
magit-diff-paths	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-paths (a b)$/;"	f
magit-diff-prefix	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defclass magit-diff-prefix (transient-prefix)$/;"	f
magit-diff-range	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-range (rev-or-range &optional args files)$/;"	f
magit-diff-read-range-or-commit	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-read-range-or-commit (prompt &optional secondary-default mbase)$/;"	f
magit-diff-refine-hunk	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-refine-hunk nil$/;"	f
magit-diff-refine-ignore-whitespace	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-refine-ignore-whitespace smerge-refine-ignore-whitespace$/;"	f
magit-diff-refresh	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-transient-command magit-diff-refresh ()$/;"	f
magit-diff-refresh-buffer	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-refresh-buffer ()$/;"	f
magit-diff-refresh-prefix	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defclass magit-diff-refresh-prefix (magit-diff-prefix)$/;"	f
magit-diff-removed	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-removed$/;"	f
magit-diff-removed-highlight	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-removed-highlight$/;"	f
magit-diff-sections-hook	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-sections-hook$/;"	f
magit-diff-select-algorithm	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-select-algorithm (&rest _ignore)$/;"	f
magit-diff-select-color-moved-mode	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-select-color-moved-mode (&rest _ignore)$/;"	f
magit-diff-select-color-moved-ws-mode	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-select-color-moved-ws-mode (&rest _ignore)$/;"	f
magit-diff-select-ignore-submodules	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-select-ignore-submodules (&rest _ignored)$/;"	f
magit-diff-set-context	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-set-context (fn)$/;"	f
magit-diff-setup-buffer	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-setup-buffer (range typearg args files &optional locked)$/;"	f
magit-diff-show-or-scroll	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-show-or-scroll (fn)$/;"	f
magit-diff-show-or-scroll-down	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-show-or-scroll-down ()$/;"	f
magit-diff-show-or-scroll-up	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-show-or-scroll-up ()$/;"	f
magit-diff-staged	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-staged (&optional rev args files)$/;"	f
magit-diff-statline-re	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defconst magit-diff-statline-re$/;"	f
magit-diff-switch-range-type	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-switch-range-type ()$/;"	f
magit-diff-tab-width	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-tab-width (file)$/;"	f
magit-diff-their	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-their$/;"	f
magit-diff-their-highlight	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-their-highlight$/;"	f
magit-diff-toggle-file-filter	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-toggle-file-filter ()$/;"	f
magit-diff-toggle-refine-hunk	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-toggle-refine-hunk (&optional style)$/;"	f
magit-diff-trace-definition	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-diff-trace-definition ()$/;"	f
magit-diff-type	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-type (&optional section)$/;"	f
magit-diff-unhighlight	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-unhighlight (section selection)$/;"	f
magit-diff-unmarked-lines-keep-foreground	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-unmarked-lines-keep-foreground t$/;"	f
magit-diff-unmerged	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-unmerged (&optional args files)$/;"	f
magit-diff-unstaged	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-unstaged (&optional args files)$/;"	f
magit-diff-update-hunk-refinement	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-update-hunk-refinement (&optional section)$/;"	f
magit-diff-update-hunk-region	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-update-hunk-region (section)$/;"	f
magit-diff-use-hunk-region-p	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-use-hunk-region-p ()$/;"	f
magit-diff-visit--goto-from-p	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit--goto-from-p (section in-worktree)$/;"	f
magit-diff-visit--hunk	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit--hunk ()$/;"	f
magit-diff-visit--offset	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit--offset (file rev line)$/;"	f
magit-diff-visit--range-from	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit--range-from (spec)$/;"	f
magit-diff-visit--range-to	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit--range-to (spec)$/;"	f
magit-diff-visit-avoid-head-blob	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-visit-avoid-head-blob nil$/;"	f
magit-diff-visit-directory	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit-directory (directory &optional other-window)$/;"	f
magit-diff-visit-file	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit-file (file &optional other-window)$/;"	f
magit-diff-visit-file--internal	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit-file--internal (file force-worktree fn)$/;"	f
magit-diff-visit-file--noselect	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit-file--noselect (&optional file goto-worktree)$/;"	f
magit-diff-visit-file--setup	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit-file--setup (buf pos)$/;"	f
magit-diff-visit-file-other-frame	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit-file-other-frame (file)$/;"	f
magit-diff-visit-file-other-window	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit-file-other-window (file)$/;"	f
magit-diff-visit-file-worktree	.emacs.d/elpa/magit-20190709.1612/magit-obsolete.el	/^(define-obsolete-function-alias 'magit-diff-visit-file-worktree$/;"	f
magit-diff-visit-previous-blob	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-diff-visit-previous-blob t$/;"	f
magit-diff-visit-worktree-file	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit-worktree-file (file &optional other-window)$/;"	f
magit-diff-visit-worktree-file-other-frame	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit-worktree-file-other-frame (file)$/;"	f
magit-diff-visit-worktree-file-other-window	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-visit-worktree-file-other-window (file)$/;"	f
magit-diff-wash-diff	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-wash-diff (args)$/;"	f
magit-diff-wash-diffs	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-wash-diffs (args &optional limit)$/;"	f
magit-diff-wash-diffstat	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-wash-diffstat ()$/;"	f
magit-diff-wash-hunk	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-wash-hunk ()$/;"	f
magit-diff-wash-submodule	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-wash-submodule ()$/;"	f
magit-diff-while-amending	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-while-amending (&optional args)$/;"	f
magit-diff-while-committing	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-while-committing (&optional args)$/;"	f
magit-diff-whitespace-warning	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diff-whitespace-warning$/;"	f
magit-diff-working-tree	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-diff-working-tree (&optional rev args files)$/;"	f
magit-diff:--color-moved	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-infix-argument magit-diff:--color-moved ()$/;"	f
magit-diff:--color-moved-ws	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-infix-argument magit-diff:--color-moved-ws ()$/;"	f
magit-diff:--diff-algorithm	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-infix-argument magit-diff:--diff-algorithm ()$/;"	f
magit-diff:--ignore-submodules	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-infix-argument magit-diff:--ignore-submodules ()$/;"	f
magit-diff:-C	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-infix-argument magit-diff:-C ()$/;"	f
magit-diff:-M	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-infix-argument magit-diff:-M ()$/;"	f
magit-diff:-U	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-infix-argument magit-diff:-U ()$/;"	f
magit-diffstat-added	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diffstat-added$/;"	f
magit-diffstat-removed	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defface magit-diffstat-removed$/;"	f
magit-dimmed	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-dimmed$/;"	f
magit-direct-use-buffer-arguments	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-direct-use-buffer-arguments 'selected$/;"	f
magit-dired-jump	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-dired-jump (&optional other-window)$/;"	f
magit-dired-log	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-dired-log (&optional follow)$/;"	f
magit-discard	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard ()$/;"	f
magit-discard-apply	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard-apply (section apply)$/;"	f
magit-discard-apply-n	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard-apply-n (sections apply)$/;"	f
magit-discard-file	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard-file (section)$/;"	f
magit-discard-files	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard-files (sections)$/;"	f
magit-discard-files--delete	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard-files--delete (files status)$/;"	f
magit-discard-files--discard	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard-files--discard (sections new-files)$/;"	f
magit-discard-files--rename	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard-files--rename (files status)$/;"	f
magit-discard-files--resolve	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard-files--resolve (files)$/;"	f
magit-discard-files--resurrect	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard-files--resurrect (files)$/;"	f
magit-discard-hunk	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard-hunk (section)$/;"	f
magit-discard-hunks	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard-hunks (sections)$/;"	f
magit-discard-region	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-discard-region (section)$/;"	f
magit-dispatch	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(define-transient-command magit-dispatch ()$/;"	f
magit-dispatch-popup	.emacs.d/elpa/magit-20190709.1612/magit-obsolete.el	/^(define-obsolete-function-alias 'magit-dispatch-popup$/;"	f
magit-display-buffer	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-display-buffer (buffer &optional display-function)$/;"	f
magit-display-buffer-fullcolumn-most-v1	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-display-buffer-fullcolumn-most-v1 (buffer)$/;"	f
magit-display-buffer-fullframe-status-topleft-v1	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-display-buffer-fullframe-status-topleft-v1 (buffer)$/;"	f
magit-display-buffer-fullframe-status-v1	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-display-buffer-fullframe-status-v1 (buffer)$/;"	f
magit-display-buffer-function	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-display-buffer-function 'magit-display-buffer-traditional$/;"	f
magit-display-buffer-noselect	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar magit-display-buffer-noselect nil$/;"	f
magit-display-buffer-same-window-except-diff-v1	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-display-buffer-same-window-except-diff-v1 (buffer)$/;"	f
magit-display-buffer-traditional	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-display-buffer-traditional (buffer)$/;"	f
magit-do-async-shell-command	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-do-async-shell-command (file)$/;"	f
magit-dwim-selection	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defcustom magit-dwim-selection$/;"	f
magit-ediff	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defgroup magit-ediff nil$/;"	f
magit-ediff	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(define-transient-command magit-ediff ()$/;"	f
magit-ediff-cleanup-auxiliary-buffers	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-cleanup-auxiliary-buffers ()$/;"	f
magit-ediff-compare	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-compare (revA revB fileA fileB)$/;"	f
magit-ediff-compare--read-revisions	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-compare--read-revisions (&optional arg mbase)$/;"	f
magit-ediff-dwim	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-dwim ()$/;"	f
magit-ediff-dwim-show-on-hunks	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defcustom magit-ediff-dwim-show-on-hunks nil$/;"	f
magit-ediff-previous-winconf	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defvar magit-ediff-previous-winconf nil)$/;"	f
magit-ediff-quit-hook	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defcustom magit-ediff-quit-hook$/;"	f
magit-ediff-read-files	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-read-files (revA revB &optional fileB)$/;"	f
magit-ediff-resolve	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-resolve (file)$/;"	f
magit-ediff-restore-previous-winconf	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-restore-previous-winconf ()$/;"	f
magit-ediff-show-commit	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-show-commit (commit)$/;"	f
magit-ediff-show-staged	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-show-staged (file)$/;"	f
magit-ediff-show-stash	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-show-stash (stash)$/;"	f
magit-ediff-show-stash-with-index	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defcustom magit-ediff-show-stash-with-index t$/;"	f
magit-ediff-show-unstaged	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-show-unstaged (file)$/;"	f
magit-ediff-show-working-tree	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-show-working-tree (file)$/;"	f
magit-ediff-stage	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defun magit-ediff-stage (file)$/;"	f
magit-edit-line-commit	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-edit-line-commit (&optional type)$/;"	f
magit-edit-thing	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-edit-thing ()$/;"	f
magit-ellipsis	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defcustom magit-ellipsis ?…$/;"	f
magit-emacs-Q-command	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-emacs-Q-command ()$/;"	f
magit-error-section-map	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defvar magit-error-section-map$/;"	f
magit-essentials	.emacs.d/elpa/magit-20190709.1612/magit-core.el	/^(defgroup magit-essentials nil$/;"	f
magit-expand-git-file-name	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-expand-git-file-name (filename)$/;"	f
magit-extensions	.emacs.d/elpa/magit-20190709.1612/magit-core.el	/^(defgroup magit-extensions nil$/;"	f
magit-extras	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defgroup magit-extras nil$/;"	f
magit-face-property-all	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-face-property-all (face string)$/;"	f
magit-faces	.emacs.d/elpa/magit-20190709.1612/magit-core.el	/^(defgroup magit-faces nil$/;"	f
magit-fetch	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(define-transient-command magit-fetch ()$/;"	f
magit-fetch--pushremote-description	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(defun magit-fetch--pushremote-description ()$/;"	f
magit-fetch-all	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(defun magit-fetch-all (args)$/;"	f
magit-fetch-all-no-prune	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(defun magit-fetch-all-no-prune ()$/;"	f
magit-fetch-all-prune	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(defun magit-fetch-all-prune ()$/;"	f
magit-fetch-arguments	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(defun magit-fetch-arguments ()$/;"	f
magit-fetch-branch	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(defun magit-fetch-branch (remote branch args)$/;"	f
magit-fetch-from-pushremote	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(define-suffix-command magit-fetch-from-pushremote (args)$/;"	f
magit-fetch-from-upstream	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(define-suffix-command magit-fetch-from-upstream (remote args)$/;"	f
magit-fetch-modules	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(defun magit-fetch-modules (&optional all)$/;"	f
magit-fetch-modules-jobs	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(defcustom magit-fetch-modules-jobs 4$/;"	f
magit-fetch-other	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(defun magit-fetch-other (remote args)$/;"	f
magit-fetch-refspec	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(defun magit-fetch-refspec (remote refspec args)$/;"	f
magit-file-accessible-directory-p	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-file-accessible-directory-p (filename)$/;"	f
magit-file-at-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-file-at-point (&optional expand assert)$/;"	f
magit-file-checkout	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-file-checkout (rev file)$/;"	f
magit-file-delete	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-file-delete (files &optional force)$/;"	f
magit-file-dispatch	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(define-transient-command magit-file-dispatch ()$/;"	f
magit-file-line	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-file-line (file)$/;"	f
magit-file-lines	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-file-lines (file &optional keep-empty-lines)$/;"	f
magit-file-mode	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(define-minor-mode magit-file-mode$/;"	f
magit-file-mode-lighter	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defvar magit-file-mode-lighter "")$/;"	f
magit-file-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defvar magit-file-mode-map$/;"	f
magit-file-mode-turn-on	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-file-mode-turn-on ()$/;"	f
magit-file-relative-name	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-file-relative-name (&optional file tracked)$/;"	f
magit-file-rename	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-file-rename (file newname)$/;"	f
magit-file-section	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defclass magit-file-section (magit-section)$/;"	f
magit-file-section-map	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defvar magit-file-section-map$/;"	f
magit-file-status	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-file-status (&rest args)$/;"	f
magit-file-tracked-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-file-tracked-p (file)$/;"	f
magit-file-untrack	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-file-untrack (files &optional force)$/;"	f
magit-filename	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-filename$/;"	f
magit-find-file	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-find-file (rev file)$/;"	f
magit-find-file--internal	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-find-file--internal (rev file fn)$/;"	f
magit-find-file-hook	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defvar magit-find-file-hook nil)$/;"	f
magit-find-file-index-noselect	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-find-file-index-noselect (file &optional revert)$/;"	f
magit-find-file-noselect	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-find-file-noselect (rev file)$/;"	f
magit-find-file-noselect-1	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-find-file-noselect-1 (rev file &optional revert)$/;"	f
magit-find-file-other-frame	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-find-file-other-frame (rev file)$/;"	f
magit-find-file-other-window	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-find-file-other-window (rev file)$/;"	f
magit-find-file-read-args	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-find-file-read-args (prompt)$/;"	f
magit-find-git-config-file	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-find-git-config-file (filename &optional wildcards)$/;"	f
magit-find-git-config-file-other-frame	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-find-git-config-file-other-frame (filename &optional wildcards)$/;"	f
magit-find-git-config-file-other-window	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-find-git-config-file-other-window (filename &optional wildcards)$/;"	f
magit-find-index-hook	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defvar magit-find-index-hook nil)$/;"	f
magit-font-lock-keywords	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defconst magit-font-lock-keywords$/;"	f
magit-for-each-ref:--contains	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(define-infix-argument magit-for-each-ref:--contains ()$/;"	f
magit-for-each-ref:--sort	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(define-infix-argument magit-for-each-ref:--sort ()$/;"	f
magit-format-patch:--cc	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(define-infix-argument magit-format-patch:--cc ()$/;"	f
magit-format-patch:--from	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(define-infix-argument magit-format-patch:--from ()$/;"	f
magit-format-patch:--in-reply-to	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(define-infix-argument magit-format-patch:--in-reply-to ()$/;"	f
magit-format-patch:--output-directory	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(define-infix-argument magit-format-patch:--output-directory ()$/;"	f
magit-format-patch:--reroll-count	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(define-infix-argument magit-format-patch:--reroll-count ()$/;"	f
magit-format-patch:--subject-prefix	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(define-infix-argument magit-format-patch:--subject-prefix ()$/;"	f
magit-format-patch:--thread	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(define-infix-argument magit-format-patch:--thread ()$/;"	f
magit-format-patch:--to	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(define-infix-argument magit-format-patch:--to ()$/;"	f
magit-format-ref-labels	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-format-ref-labels (string)$/;"	f
magit-format-refs	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-format-refs (format &rest args)$/;"	f
magit-format-rev-summary	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-format-rev-summary (rev)$/;"	f
magit-generate-buffer-name-default-function	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-generate-buffer-name-default-function (mode &optional value)$/;"	f
magit-generate-buffer-name-function	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-generate-buffer-name-function$/;"	f
magit-generate-new-buffer	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-generate-new-buffer (mode &optional value)$/;"	f
magit-get	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get (&rest keys)$/;"	f
magit-get-@{push}-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-@{push}-branch (&optional branch)$/;"	f
magit-get-all	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-all (&rest keys)$/;"	f
magit-get-boolean	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-boolean (&rest keys)$/;"	f
magit-get-current-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-current-branch ()$/;"	f
magit-get-current-remote	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-current-remote (&optional allow-unnamed)$/;"	f
magit-get-current-tag	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-current-tag (&optional rev with-distance)$/;"	f
magit-get-indirect-upstream-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-indirect-upstream-branch (branch &optional force)$/;"	f
magit-get-mode-buffer	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-get-mode-buffer (mode &optional value frame)$/;"	f
magit-get-next-tag	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-next-tag (&optional rev with-distance)$/;"	f
magit-get-previous-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-previous-branch ()$/;"	f
magit-get-previous-branch-timeout	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-get-previous-branch-timeout 0.5$/;"	f
magit-get-push-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-push-branch (&optional branch verify)$/;"	f
magit-get-push-remote	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-push-remote (&optional branch)$/;"	f
magit-get-remote	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-remote (&optional branch)$/;"	f
magit-get-revision-buffer	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-get-revision-buffer (rev file &optional create)$/;"	f
magit-get-revision-buffer-create	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-get-revision-buffer-create (rev file)$/;"	f
magit-get-section	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-get-section (ident &optional root)$/;"	f
magit-get-shortname	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-shortname (rev)$/;"	f
magit-get-some-remote	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-some-remote (&optional branch)$/;"	f
magit-get-submodule-name	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-submodule-name (path)$/;"	f
magit-get-tracked	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-tracked (refname)$/;"	f
magit-get-unnamed-upstream	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-unnamed-upstream (&optional branch)$/;"	f
magit-get-upstream-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-upstream-branch (&optional branch)$/;"	f
magit-get-upstream-ref	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-upstream-ref (&optional branch)$/;"	f
magit-get-upstream-remote	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-get-upstream-remote (&optional branch allow-unnamed)$/;"	f
magit-git	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-git (&rest args)$/;"	f
magit-git-arguments	.emacs.d/elpa/magit-20190709.1612/magit-core.el	/^(defgroup magit-git-arguments nil$/;"	f
magit-git-bisect	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-git-bisect (subcommand &optional args no-assert)$/;"	f
magit-git-command	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defun magit-git-command (command)$/;"	f
magit-git-command-history	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defvar magit-git-command-history nil)$/;"	f
magit-git-command-topdir	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defun magit-git-command-topdir (command)$/;"	f
magit-git-debug	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-git-debug nil$/;"	f
magit-git-dir	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-dir (&optional path)$/;"	f
magit-git-environment	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-git-environment$/;"	f
magit-git-error	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(define-error 'magit-git-error "Git error")$/;"	f
magit-git-executable	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defcustom magit-git-executable$/;"	f
magit-git-executable-not-found	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(define-error 'magit-git-executable-not-found$/;"	f
magit-git-exit-code	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-exit-code (&rest args)$/;"	f
magit-git-failure	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-failure (&rest args)$/;"	f
magit-git-false	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-false (&rest args)$/;"	f
magit-git-fetch	.emacs.d/elpa/magit-20190709.1612/magit-fetch.el	/^(defun magit-git-fetch (remote args)$/;"	f
magit-git-global-arguments	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defcustom magit-git-global-arguments$/;"	f
magit-git-insert	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-insert (&rest args)$/;"	f
magit-git-items	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-items (&rest args)$/;"	f
magit-git-lines	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-lines (&rest args)$/;"	f
magit-git-output	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-output (&rest args)$/;"	f
magit-git-output-coding-system	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defcustom magit-git-output-coding-system$/;"	f
magit-git-push	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-git-push (branch target args)$/;"	f
magit-git-rebase	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-git-rebase (target args)$/;"	f
magit-git-repo-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-repo-p (directory &optional non-bare)$/;"	f
magit-git-str	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-str (&rest args)$/;"	f
magit-git-string	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-string (&rest args)$/;"	f
magit-git-string-ng	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-string-ng (&rest args)$/;"	f
magit-git-string-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-string-p (&rest args)$/;"	f
magit-git-subtree	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(defun magit-git-subtree (subcmd prefix &rest args)$/;"	f
magit-git-success	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-success (&rest args)$/;"	f
magit-git-true	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-true (&rest args)$/;"	f
magit-git-version	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-version (&optional raw)$/;"	f
magit-git-w32-path-hack	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-git-w32-path-hack nil$/;"	f
magit-git-wash	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-git-wash (washer &rest args)$/;"	f
magit-gitdir	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-gitdir (&optional directory)$/;"	f
magit-gitignore	.emacs.d/elpa/magit-20190709.1612/magit-gitignore.el	/^(define-transient-command magit-gitignore ()$/;"	f
magit-gitignore-in-gitdir	.emacs.d/elpa/magit-20190709.1612/magit-gitignore.el	/^(defun magit-gitignore-in-gitdir (rule)$/;"	f
magit-gitignore-in-subdir	.emacs.d/elpa/magit-20190709.1612/magit-gitignore.el	/^(defun magit-gitignore-in-subdir (rule directory)$/;"	f
magit-gitignore-in-topdir	.emacs.d/elpa/magit-20190709.1612/magit-gitignore.el	/^(defun magit-gitignore-in-topdir (rule)$/;"	f
magit-gitignore-on-system	.emacs.d/elpa/magit-20190709.1612/magit-gitignore.el	/^(defun magit-gitignore-on-system (rule)$/;"	f
magit-gitignore-read-pattern	.emacs.d/elpa/magit-20190709.1612/magit-gitignore.el	/^(defun magit-gitignore-read-pattern ()$/;"	f
magit-gitimpl	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-gitimpl ()$/;"	f
magit-gitk-executable	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defcustom magit-gitk-executable$/;"	f
magit-global-core.notesRef	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(define-infix-command magit-global-core.notesRef ()$/;"	f
magit-global-notes.displayRef	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(define-infix-command magit-global-notes.displayRef ()$/;"	f
magit-go-backward	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-go-backward ()$/;"	f
magit-go-forward	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-go-forward ()$/;"	f
magit-gpg-secret-key-hist	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defvar magit-gpg-secret-key-hist nil)$/;"	f
magit-hash	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-hash$/;"	f
magit-hash-range	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-hash-range (range)$/;"	f
magit-head	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-head$/;"	f
magit-header-line	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-header-line$/;"	f
magit-header-line-key	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-header-line-key$/;"	f
magit-header-line-log-select	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defface magit-header-line-log-select$/;"	f
magit-headish	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-headish ()$/;"	f
magit-highlight-region	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-highlight-region (start end window rol)$/;"	f
magit-hook-custom-get	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-hook-custom-get (symbol)$/;"	f
magit-hunk-section	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defclass magit-hunk-section (magit-section)$/;"	f
magit-hunk-section-map	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defvar magit-hunk-section-map$/;"	f
magit-hunk-set-window-start	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-hunk-set-window-start (section)$/;"	f
magit-ido-completing-read	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-ido-completing-read$/;"	f
magit-ignore-submodules-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-ignore-submodules-p ()$/;"	f
magit-ignored-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-ignored-files ()$/;"	f
magit-imenu--cherry-create-index-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--cherry-create-index-function ()$/;"	f
magit-imenu--diff-extract-index-name-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--diff-extract-index-name-function ()$/;"	f
magit-imenu--diff-prev-index-position-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--diff-prev-index-position-function ()$/;"	f
magit-imenu--index-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--index-function (entry-types menu-types)$/;"	f
magit-imenu--log-extract-index-name-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--log-extract-index-name-function ()$/;"	f
magit-imenu--log-prev-index-position-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--log-prev-index-position-function ()$/;"	f
magit-imenu--process-extract-index-name-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--process-extract-index-name-function ()$/;"	f
magit-imenu--process-prev-index-position-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--process-prev-index-position-function ()$/;"	f
magit-imenu--rebase-extract-index-name-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--rebase-extract-index-name-function ()$/;"	f
magit-imenu--rebase-prev-index-position-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--rebase-prev-index-position-function ()$/;"	f
magit-imenu--refs-create-index-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--refs-create-index-function ()$/;"	f
magit-imenu--repolist-extract-index-name-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--repolist-extract-index-name-function ()$/;"	f
magit-imenu--repolist-prev-index-position-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--repolist-prev-index-position-function ()$/;"	f
magit-imenu--status-create-index-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--status-create-index-function ()$/;"	f
magit-imenu--submodule-extract-index-name-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--submodule-extract-index-name-function ()$/;"	f
magit-imenu--submodule-prev-index-position-function	.emacs.d/elpa/magit-20190709.1612/magit-imenu.el	/^(defun magit-imenu--submodule-prev-index-position-function ()$/;"	f
magit-inhibit-libgit	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-inhibit-libgit nil$/;"	f
magit-inhibit-refresh-save	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-inhibit-refresh-save nil)$/;"	f
magit-inhibit-save-previous-winconf	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar magit-inhibit-save-previous-winconf nil)$/;"	f
magit-init	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-init (directory)$/;"	f
magit-insert-am-sequence	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-insert-am-sequence ()$/;"	f
magit-insert-bisect-log	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-insert-bisect-log ()$/;"	f
magit-insert-bisect-output	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-insert-bisect-output ()$/;"	f
magit-insert-bisect-rest	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-insert-bisect-rest ()$/;"	f
magit-insert-branch-description	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-insert-branch-description ()$/;"	f
magit-insert-cherry-commits	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-insert-cherry-commits ()$/;"	f
magit-insert-cherry-headers	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-insert-cherry-headers ()$/;"	f
magit-insert-child-count	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-insert-child-count (section)$/;"	f
magit-insert-diff	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-insert-diff ()$/;"	f
magit-insert-diff-filter-header	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-diff-filter-header ()$/;"	f
magit-insert-error-header	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-error-header ()$/;"	f
magit-insert-files	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-files (files directory)$/;"	f
magit-insert-head-branch-header	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-head-branch-header (&optional branch)$/;"	f
magit-insert-headers	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-insert-headers (hook)$/;"	f
magit-insert-heading	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-insert-heading (&rest args)$/;"	f
magit-insert-ignored-files	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-ignored-files ()$/;"	f
magit-insert-local-branches	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-insert-local-branches ()$/;"	f
magit-insert-log	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-insert-log (revs &optional args files)$/;"	f
magit-insert-merge-log	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-insert-merge-log ()$/;"	f
magit-insert-modules	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-insert-modules ()$/;"	f
magit-insert-modules-overview	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-insert-modules-overview ()$/;"	f
magit-insert-modules-unpulled-from-pushremote	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-insert-modules-unpulled-from-pushremote ()$/;"	f
magit-insert-modules-unpulled-from-upstream	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-insert-modules-unpulled-from-upstream ()$/;"	f
magit-insert-modules-unpushed-to-pushremote	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-insert-modules-unpushed-to-pushremote ()$/;"	f
magit-insert-modules-unpushed-to-upstream	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-insert-modules-unpushed-to-upstream ()$/;"	f
magit-insert-push-branch-header	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-push-branch-header ()$/;"	f
magit-insert-rebase-sequence	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-insert-rebase-sequence ()$/;"	f
magit-insert-recent-commits	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-insert-recent-commits (&optional type value)$/;"	f
magit-insert-remote-branches	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-insert-remote-branches ()$/;"	f
magit-insert-remote-header	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-remote-header ()$/;"	f
magit-insert-repo-header	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-repo-header ()$/;"	f
magit-insert-revision-diff	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-insert-revision-diff ()$/;"	f
magit-insert-revision-gravatar	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-insert-revision-gravatar (beg rev email regexp)$/;"	f
magit-insert-revision-gravatar-cb	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-insert-revision-gravatar-cb (image rev marker align-to column)$/;"	f
magit-insert-revision-gravatars	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-insert-revision-gravatars (rev beg)$/;"	f
magit-insert-revision-headers	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-insert-revision-headers ()$/;"	f
magit-insert-revision-message	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-insert-revision-message ()$/;"	f
magit-insert-revision-notes	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-insert-revision-notes ()$/;"	f
magit-insert-revision-tag	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-insert-revision-tag ()$/;"	f
magit-insert-section	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defmacro magit-insert-section (&rest args)$/;"	f
magit-insert-section--current	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar magit-insert-section--current nil "For internal use only.")$/;"	f
magit-insert-section--oldroot	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar magit-insert-section--oldroot nil "For internal use only.")$/;"	f
magit-insert-section--parent	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar magit-insert-section--parent  nil "For internal use only.")$/;"	f
magit-insert-section-body	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defmacro magit-insert-section-body (&rest body)$/;"	f
magit-insert-section-hook	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar magit-insert-section-hook nil$/;"	f
magit-insert-sequencer-sequence	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-insert-sequencer-sequence ()$/;"	f
magit-insert-skip-worktree-files	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-skip-worktree-files ()$/;"	f
magit-insert-staged-changes	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-insert-staged-changes ()$/;"	f
magit-insert-stash-index	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-insert-stash-index ()$/;"	f
magit-insert-stash-notes	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-insert-stash-notes ()$/;"	f
magit-insert-stash-untracked	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-insert-stash-untracked ()$/;"	f
magit-insert-stash-worktree	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-insert-stash-worktree ()$/;"	f
magit-insert-status-headers	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-status-headers ()$/;"	f
magit-insert-tags	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-insert-tags ()$/;"	f
magit-insert-tags-header	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-tags-header ()$/;"	f
magit-insert-tracked-files	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-tracked-files ()$/;"	f
magit-insert-unpulled-cherries	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-insert-unpulled-cherries ()$/;"	f
magit-insert-unpulled-from-pushremote	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-insert-unpulled-from-pushremote ()$/;"	f
magit-insert-unpulled-from-upstream	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-insert-unpulled-from-upstream ()$/;"	f
magit-insert-unpushed-cherries	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-insert-unpushed-cherries ()$/;"	f
magit-insert-unpushed-to-pushremote	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-insert-unpushed-to-pushremote ()$/;"	f
magit-insert-unpushed-to-upstream	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-insert-unpushed-to-upstream ()$/;"	f
magit-insert-unpushed-to-upstream-or-recent	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-insert-unpushed-to-upstream-or-recent ()$/;"	f
magit-insert-unstaged-changes	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-insert-unstaged-changes ()$/;"	f
magit-insert-untracked-files	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-untracked-files ()$/;"	f
magit-insert-upstream-branch-header	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-upstream-branch-header (&optional branch upstream keyword)$/;"	f
magit-insert-user-header	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-insert-user-header ()$/;"	f
magit-insert-worktrees	.emacs.d/elpa/magit-20190709.1612/magit-worktree.el	/^(defun magit-insert-worktrees ()$/;"	f
magit-insert-xref-buttons	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-insert-xref-buttons ()$/;"	f
magit-inside-gitdir-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-inside-gitdir-p (&optioal noerror)$/;"	f
magit-inside-worktree-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-inside-worktree-p (&optional noerror)$/;"	f
magit-invalid-git-boolean	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(define-error 'magit-invalid-git-boolean "Not a Git boolean")$/;"	f
magit-jump-to-diffstat-or-diff	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-jump-to-diffstat-or-diff ()$/;"	f
magit-keep-region-overlay	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-keep-region-overlay nil$/;"	f
magit-keep-region-overlay	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar magit-keep-region-overlay)$/;"	f
magit-keyword	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-keyword$/;"	f
magit-keyword-squash	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-keyword-squash$/;"	f
magit-kill-this-buffer	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-kill-this-buffer ()$/;"	f
magit-list-active-notes-refs	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-active-notes-refs ()$/;"	f
magit-list-branch-names	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-branch-names ()$/;"	f
magit-list-branches	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-branches ()$/;"	f
magit-list-branches-pointing-at	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-branches-pointing-at (commit)$/;"	f
magit-list-containing-branches	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-containing-branches (&optional commit arg)$/;"	f
magit-list-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-files (&rest args)$/;"	f
magit-list-local-branch-names	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-local-branch-names ()$/;"	f
magit-list-local-branches	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-local-branches ()$/;"	f
magit-list-merged-branches	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-merged-branches (&optional commit arg)$/;"	f
magit-list-module-paths	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-module-paths ()$/;"	f
magit-list-notes-refnames	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-notes-refnames ()$/;"	f
magit-list-publishing-branches	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-publishing-branches (&optional commit)$/;"	f
magit-list-refnames	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-refnames (&optional namespaces include-special)$/;"	f
magit-list-refs	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-refs (&optional namespaces format sortby)$/;"	f
magit-list-refs-namespaces	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-list-refs-namespaces$/;"	f
magit-list-refs-sortby	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defcustom magit-list-refs-sortby nil$/;"	f
magit-list-related-branches	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-related-branches (relation &optional commit arg)$/;"	f
magit-list-remote-branch-names	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-remote-branch-names (&optional remote relative)$/;"	f
magit-list-remote-branches	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-remote-branches (&optional remote)$/;"	f
magit-list-remotes	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-remotes ()$/;"	f
magit-list-repos	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-list-repos ()$/;"	f
magit-list-repos-1	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-list-repos-1 (directory depth)$/;"	f
magit-list-repos-uniquify	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-list-repos-uniquify (alist)$/;"	f
magit-list-repositories	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-list-repositories ()$/;"	f
magit-list-special-refnames	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-special-refnames ()$/;"	f
magit-list-stashes	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-stashes (&optional format)$/;"	f
magit-list-submodules	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-list-submodules ()$/;"	f
magit-list-tags	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-tags ()$/;"	f
magit-list-unmerged-branches	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-unmerged-branches (&optional commit arg)$/;"	f
magit-list-unmerged-to-upstream-branches	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-unmerged-to-upstream-branches ()$/;"	f
magit-list-worktrees	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-list-worktrees ()$/;"	f
magit-load-config-extensions	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-load-config-extensions ()$/;"	f
magit-local-branch-at-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-local-branch-at-point ()$/;"	f
magit-local-branch-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-local-branch-p (rev)$/;"	f
magit-log	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defgroup magit-log nil$/;"	f
magit-log	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(define-transient-command magit-log ()$/;"	f
magit-log--get-value	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log--get-value (mode &optional use-buffer-args)$/;"	f
magit-log--set-value	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log--set-value (obj &optional save)$/;"	f
magit-log-all	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-all (&optional args files)$/;"	f
magit-log-all-branches	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-all-branches (&optional args files)$/;"	f
magit-log-arguments	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-arguments (&optional mode)$/;"	f
magit-log-author	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defface magit-log-author$/;"	f
magit-log-auto-more	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-auto-more nil$/;"	f
magit-log-bisect-log-re	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defconst magit-log-bisect-log-re$/;"	f
magit-log-bisect-vis-re	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defconst magit-log-bisect-vis-re$/;"	f
magit-log-branches	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-branches (&optional args files)$/;"	f
magit-log-buffer-file	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-buffer-file (&optional follow beg end)$/;"	f
magit-log-buffer-file-locked	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-buffer-file-locked t$/;"	f
magit-log-bury-buffer	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-bury-buffer (&optional arg)$/;"	f
magit-log-cherry-re	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defconst magit-log-cherry-re$/;"	f
magit-log-count	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-log-count nil)$/;"	f
magit-log-current	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-current (revs &optional args files)$/;"	f
magit-log-date	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defface magit-log-date$/;"	f
magit-log-disable-graph-hack-args	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-log-disable-graph-hack-args$/;"	f
magit-log-double-commit-limit	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-double-commit-limit ()$/;"	f
magit-log-format-author-margin	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-format-author-margin (author date &optional previous-line)$/;"	f
magit-log-format-margin	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-format-margin (rev author date)$/;"	f
magit-log-format-message-function	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-log-format-message-function 'magit-log-propertize-keywords)$/;"	f
magit-log-format-shortstat-margin	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-format-shortstat-margin (rev)$/;"	f
magit-log-get-commit-limit	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-get-commit-limit ()$/;"	f
magit-log-goto-commit-section	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-goto-commit-section (rev)$/;"	f
magit-log-goto-same-commit	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-goto-same-commit ()$/;"	f
magit-log-graph	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defface magit-log-graph$/;"	f
magit-log-half-commit-limit	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-half-commit-limit ()$/;"	f
magit-log-head	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-head (&optional args files)$/;"	f
magit-log-header-line-arguments	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-header-line-arguments (revs args files)$/;"	f
magit-log-header-line-function	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-header-line-function 'magit-log-header-line-sentence$/;"	f
magit-log-header-line-sentence	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-header-line-sentence (revs args files)$/;"	f
magit-log-heading-re	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defconst magit-log-heading-re$/;"	f
magit-log-highlight-keywords	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-highlight-keywords t$/;"	f
magit-log-margin	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-margin '(t age magit-log-margin-width t 18)$/;"	f
magit-log-margin--custom-type	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defconst magit-log-margin--custom-type$/;"	f
magit-log-margin-show-shortstat	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar-local magit-log-margin-show-shortstat nil)$/;"	f
magit-log-margin-width	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-margin-width (style details details-width)$/;"	f
magit-log-maybe-show-more-commits	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-maybe-show-more-commits (section)$/;"	f
magit-log-maybe-update-blob-buffer	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-maybe-update-blob-buffer (&optional _)$/;"	f
magit-log-maybe-update-blob-buffer-1	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-maybe-update-blob-buffer-1 ()$/;"	f
magit-log-maybe-update-revision-buffer	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-maybe-update-revision-buffer (&optional _)$/;"	f
magit-log-maybe-update-revision-buffer-1	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-maybe-update-revision-buffer-1 ()$/;"	f
magit-log-merged	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-merged (commit branch &optional args files)$/;"	f
magit-log-mode	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(define-derived-mode magit-log-mode magit-mode "Magit Log"$/;"	f
magit-log-mode-hook	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-mode-hook nil$/;"	f
magit-log-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-log-mode-map$/;"	f
magit-log-module-re	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defconst magit-log-module-re$/;"	f
magit-log-move-to-parent	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-move-to-parent (&optional n)$/;"	f
magit-log-other	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-other (revs &optional args files)$/;"	f
magit-log-prefix	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defclass magit-log-prefix (transient-prefix)$/;"	f
magit-log-propertize-keywords	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-propertize-keywords (_rev msg)$/;"	f
magit-log-read-revs	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-read-revs (&optional use-current)$/;"	f
magit-log-read-revs-map	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-log-read-revs-map$/;"	f
magit-log-reflog-re	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defconst magit-log-reflog-re$/;"	f
magit-log-refresh	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(define-transient-command magit-log-refresh ()$/;"	f
magit-log-refresh-buffer	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-refresh-buffer ()$/;"	f
magit-log-refresh-prefix	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defclass magit-log-refresh-prefix (magit-log-prefix)$/;"	f
magit-log-remove-graph-args	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-remove-graph-args '("--follow" "--grep" "-G" "-S" "-L")$/;"	f
magit-log-revision-headers-format	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-revision-headers-format "\\$/;"	f
magit-log-section-commit-count	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-section-commit-count 10$/;"	f
magit-log-select	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-select (pick &optional msg quit branch args initial)$/;"	f
magit-log-select-margin	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-select-margin$/;"	f
magit-log-select-mode	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(define-derived-mode magit-log-select-mode magit-log-mode "Magit Select"$/;"	f
magit-log-select-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-log-select-mode-map$/;"	f
magit-log-select-pick	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-select-pick ()$/;"	f
magit-log-select-pick-function	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar-local magit-log-select-pick-function nil)$/;"	f
magit-log-select-quit	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-select-quit ()$/;"	f
magit-log-select-quit-function	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar-local magit-log-select-quit-function nil)$/;"	f
magit-log-select-refresh-buffer	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-select-refresh-buffer ()$/;"	f
magit-log-select-setup-buffer	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-select-setup-buffer (revs args)$/;"	f
magit-log-select-show-usage	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-select-show-usage 'both$/;"	f
magit-log-set-commit-limit	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-set-commit-limit (fn)$/;"	f
magit-log-setup-buffer	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-setup-buffer (revs args files &optional locked focus)$/;"	f
magit-log-show-refname-after-summary	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-show-refname-after-summary nil$/;"	f
magit-log-stash-re	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defconst magit-log-stash-re$/;"	f
magit-log-toggle-commit-limit	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-toggle-commit-limit ()$/;"	f
magit-log-trace-definition	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-trace-definition (file fn rev)$/;"	f
magit-log-trace-definition-function	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defcustom magit-log-trace-definition-function 'magit-which-function$/;"	f
magit-log-wash-log	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-log-wash-log (style args)$/;"	f
magit-log:--*-order	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(define-infix-argument magit-log:--*-order ()$/;"	f
magit-log:--grep	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(define-infix-argument magit-log:--grep ()$/;"	f
magit-log:-G	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(define-infix-argument magit-log:-G ()$/;"	f
magit-log:-L	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(define-infix-argument magit-log:-L ()$/;"	f
magit-log:-S	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(define-infix-argument magit-log:-S ()$/;"	f
magit-log:-n	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(define-infix-argument magit-log:-n ()$/;"	f
magit-make-margin-overlay	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defun magit-make-margin-overlay (&optional string previous-line)$/;"	f
magit-margin	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defgroup magit-margin nil$/;"	f
magit-margin-option	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defun magit-margin-option ()$/;"	f
magit-margin-set-variable	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defun magit-margin-set-variable (mode symbol value)$/;"	f
magit-margin-settings	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(define-transient-command magit-margin-settings ()$/;"	f
magit-maybe-make-margin-overlay	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defun magit-maybe-make-margin-overlay ()$/;"	f
magit-maybe-save-repository-buffers	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-maybe-save-repository-buffers ()$/;"	f
magit-maybe-set-dedicated	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-maybe-set-dedicated ()$/;"	f
magit-maybe-start-credential-cache-daemon	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-maybe-start-credential-cache-daemon ()$/;"	f
magit-merge	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(define-transient-command magit-merge ()$/;"	f
magit-merge-abort	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-merge-abort ()$/;"	f
magit-merge-absorb	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-merge-absorb (branch &optional args)$/;"	f
magit-merge-arguments	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-merge-arguments ()$/;"	f
magit-merge-assert	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-merge-assert ()$/;"	f
magit-merge-commit-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-merge-commit-p (commit)$/;"	f
magit-merge-editmsg	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-merge-editmsg (rev &optional args)$/;"	f
magit-merge-in-progress-p	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-merge-in-progress-p ()$/;"	f
magit-merge-into	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-merge-into (branch &optional args)$/;"	f
magit-merge-nocommit	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-merge-nocommit (rev &optional args)$/;"	f
magit-merge-plain	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-merge-plain (rev &optional args nocommit)$/;"	f
magit-merge-preview	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-merge-preview (rev)$/;"	f
magit-merge-preview-mode	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-derived-mode magit-merge-preview-mode magit-diff-mode "Magit Merge"$/;"	f
magit-merge-preview-refresh-buffer	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-merge-preview-refresh-buffer ()$/;"	f
magit-merge-preview-setup-buffer	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-merge-preview-setup-buffer (rev)$/;"	f
magit-merge-squash	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defun magit-merge-squash (rev)$/;"	f
magit-merge:--strategy	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(define-infix-argument magit-merge:--strategy ()$/;"	f
magit-message	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-message (format-string &rest args)$/;"	f
magit-minibuffer-local-ns-map	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defvar magit-minibuffer-local-ns-map$/;"	f
magit-miscellaneous	.emacs.d/elpa/magit-20190709.1612/magit-core.el	/^(defgroup magit-miscellaneous nil$/;"	f
magit-mode	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(define-derived-mode magit-mode special-mode "Magit"$/;"	f
magit-mode-bury-buffer	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-mode-bury-buffer (&optional kill-buffer)$/;"	f
magit-mode-get-buffer	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-mode-get-buffer (mode &optional create frame value)$/;"	f
magit-mode-get-buffers	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-mode-get-buffers ()$/;"	f
magit-mode-hook	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-mode-hook$/;"	f
magit-mode-line-process	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defface magit-mode-line-process$/;"	f
magit-mode-line-process-error	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defface magit-mode-line-process-error$/;"	f
magit-mode-line-process-map	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defvar magit-mode-line-process-map$/;"	f
magit-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar magit-mode-map$/;"	f
magit-mode-quit-window	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-mode-quit-window (kill-buffer)$/;"	f
magit-mode-setup	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-mode-setup (mode &rest args)$/;"	f
magit-mode-setup-hook	.emacs.d/elpa/magit-20190709.1612/magit-obsolete.el	/^(define-obsolete-variable-alias 'magit-mode-setup-hook$/;"	f
magit-mode-setup-internal	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-mode-setup-internal (mode args &optional locked)$/;"	f
magit-modes	.emacs.d/elpa/magit-20190709.1612/magit-core.el	/^(defgroup magit-modes nil$/;"	f
magit-module-at-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-module-at-point (&optional predicate)$/;"	f
magit-module-commit-section-map	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-module-commit-section-map$/;"	f
magit-module-confirm	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-module-confirm (verb &optional predicate)$/;"	f
magit-module-no-worktree-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-module-no-worktree-p (module)$/;"	f
magit-module-section	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defclass magit-module-section (magit-file-section)$/;"	f
magit-module-section-map	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defvar magit-module-section-map$/;"	f
magit-module-sections-hook	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defcustom magit-module-sections-hook$/;"	f
magit-module-sections-nested	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defcustom magit-module-sections-nested t$/;"	f
magit-module-worktree-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-module-worktree-p (module)$/;"	f
magit-modulelist-column-path	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-modulelist-column-path (path)$/;"	f
magit-modules-overview-align-numbers	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defvar magit-modules-overview-align-numbers t)$/;"	f
magit-modules-section-map	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defvar magit-modules-section-map$/;"	f
magit-msg	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-msg (format-string &rest args)$/;"	f
magit-name-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-name-branch (rev &optional lax)$/;"	f
magit-name-local-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-name-local-branch (rev &optional lax)$/;"	f
magit-name-remote-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-name-remote-branch (rev &optional lax)$/;"	f
magit-name-tag	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-name-tag (rev &optional lax)$/;"	f
magit-need-cygwin-noglob	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-need-cygwin-noglob$/;"	f
magit-next-line	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-next-line (&optional arg try-vscroll)$/;"	f
magit-no-commit-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-no-commit-p ()$/;"	f
magit-no-confirm	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defcustom magit-no-confirm nil$/;"	f
magit-no-message	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defcustom magit-no-message nil$/;"	f
magit-no-skip-worktree	.emacs.d/elpa/magit-20190709.1612/magit-gitignore.el	/^(defun magit-no-skip-worktree (file)$/;"	f
magit-notes	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(define-transient-command magit-notes ()$/;"	f
magit-notes-edit	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(defun magit-notes-edit (commit &optional ref)$/;"	f
magit-notes-merge	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(defun magit-notes-merge (ref)$/;"	f
magit-notes-merge-abort	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(defun magit-notes-merge-abort ()$/;"	f
magit-notes-merge-commit	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(defun magit-notes-merge-commit ()$/;"	f
magit-notes-merging-p	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(defun magit-notes-merging-p ()$/;"	f
magit-notes-prune	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(defun magit-notes-prune (&optional dry-run)$/;"	f
magit-notes-read-args	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(defun magit-notes-read-args (prompt)$/;"	f
magit-notes-read-ref	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(defun magit-notes-read-ref (prompt _initial-input history)$/;"	f
magit-notes-read-refs	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(defun magit-notes-read-refs (prompt)$/;"	f
magit-notes-remove	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(defun magit-notes-remove (commit &optional ref)$/;"	f
magit-notes.displayRef	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(define-infix-command magit-notes.displayRef ()$/;"	f
magit-notes:--ref	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(define-infix-argument magit-notes:--ref ()$/;"	f
magit-notes:--strategy	.emacs.d/elpa/magit-20190709.1612/magit-notes.el	/^(define-infix-argument magit-notes:--strategy ()$/;"	f
magit-object-type	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-object-type (object)$/;"	f
magit-outside-git-repo	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(define-error 'magit-outside-git-repo "Not inside Git repository")$/;"	f
magit-parse-git-async	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-parse-git-async (&rest args)$/;"	f
magit-patch	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(define-transient-command magit-patch ()$/;"	f
magit-patch-apply	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(define-transient-command magit-patch-apply (file &rest args)$/;"	f
magit-patch-create	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(define-transient-command magit-patch-create (range args files)$/;"	f
magit-patch-id	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-patch-id (rev)$/;"	f
magit-patch-save	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(defun magit-patch-save (file &optional arg)$/;"	f
magit-patch-save-arguments	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(defcustom magit-patch-save-arguments '(exclude "--stat")$/;"	f
magit-perl-executable	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defvar magit-perl-executable "perl"$/;"	f
magit-pop-revision-stack	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-pop-revision-stack (rev toplevel)$/;"	f
magit-pop-revision-stack-format	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defcustom magit-pop-revision-stack-format$/;"	f
magit-post-commit-hook	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defcustom magit-post-commit-hook nil$/;"	f
magit-post-commit-hook-commands	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defvar magit-post-commit-hook-commands$/;"	f
magit-post-commit-hook-commands	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar magit-post-commit-hook-commands)$/;"	f
magit-post-display-buffer-hook	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-post-display-buffer-hook '(magit-maybe-set-dedicated)$/;"	f
magit-post-refresh-hook	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-post-refresh-hook nil$/;"	f
magit-post-stage-hook	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defcustom magit-post-stage-hook nil$/;"	f
magit-post-stage-hook-commands	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defvar magit-post-stage-hook-commands$/;"	f
magit-post-stage-hook-commands	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar magit-post-stage-hook-commands)$/;"	f
magit-post-unstage-hook	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defcustom magit-post-unstage-hook nil$/;"	f
magit-post-unstage-hook-commands	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defvar magit-post-unstage-hook-commands$/;"	f
magit-post-unstage-hook-commands	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar magit-post-unstage-hook-commands)$/;"	f
magit-pre-call-git-hook	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defvar magit-pre-call-git-hook nil)$/;"	f
magit-pre-command-hook	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-pre-command-hook ()$/;"	f
magit-pre-display-buffer-hook	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-pre-display-buffer-hook '(magit-save-window-configuration)$/;"	f
magit-pre-refresh-hook	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-pre-refresh-hook '(magit-maybe-save-repository-buffers)$/;"	f
magit-pre-start-git-hook	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defvar magit-pre-start-git-hook nil)$/;"	f
magit-prefer-push-default	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defcustom magit-prefer-push-default nil$/;"	f
magit-prefer-remote-upstream	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defcustom magit-prefer-remote-upstream nil$/;"	f
magit-prefix-use-buffer-arguments	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-prefix-use-buffer-arguments 'selected$/;"	f
magit-preserve-section-visibility-cache	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-preserve-section-visibility-cache ()$/;"	f
magit-previous-line	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-previous-line (&optional arg try-vscroll)$/;"	f
magit-previous-section	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-previous-section nil)$/;"	f
magit-previous-window-configuration	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-previous-window-configuration nil)$/;"	f
magit-process	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defgroup magit-process nil$/;"	f
magit-process-buffer	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-buffer (&optional nodisplay)$/;"	f
magit-process-connection-type	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-process-connection-type (not (eq system-type 'cygwin))$/;"	f
magit-process-display-buffer	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-display-buffer (process)$/;"	f
magit-process-display-mode-line-error	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-process-display-mode-line-error t$/;"	f
magit-process-ensure-unix-line-ending	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-process-ensure-unix-line-ending t$/;"	f
magit-process-environment	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-environment ()$/;"	f
magit-process-error-message-regexps	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-process-error-message-regexps)$/;"	f
magit-process-error-message-regexps	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defvar magit-process-error-message-regexps$/;"	f
magit-process-error-summary	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-error-summary (process-buf section)$/;"	f
magit-process-error-tooltip	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-error-tooltip (process-buf section)$/;"	f
magit-process-error-tooltip-max-lines	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-process-error-tooltip-max-lines 20$/;"	f
magit-process-file	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-file (process &optional infile buffer display &rest args)$/;"	f
magit-process-filter	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-filter (proc string)$/;"	f
magit-process-find-password-functions	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-process-find-password-functions nil$/;"	f
magit-process-finish	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-finish (arg &optional process-buf command-buf$/;"	f
magit-process-finish-apply-ansi-colors	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defvar magit-process-finish-apply-ansi-colors nil)$/;"	f
magit-process-git-arguments	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-process-git-arguments (args)$/;"	f
magit-process-insert-section	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-insert-section (pwd program args &optional errcode errlog)$/;"	f
magit-process-kill	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-kill ()$/;"	f
magit-process-kill-on-abort	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defmacro magit-process-kill-on-abort (proc &rest body)$/;"	f
magit-process-log-max	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-process-log-max 32$/;"	f
magit-process-match-prompt	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-match-prompt (prompts string)$/;"	f
magit-process-mode	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(define-derived-mode magit-process-mode magit-mode "Magit Process"$/;"	f
magit-process-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defvar magit-process-mode-map$/;"	f
magit-process-ng	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defface magit-process-ng$/;"	f
magit-process-ok	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defface magit-process-ok$/;"	f
magit-process-password-auth-source	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-password-auth-source (key)$/;"	f
magit-process-password-prompt	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-password-prompt (process string)$/;"	f
magit-process-password-prompt-regexps	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-process-password-prompt-regexps$/;"	f
magit-process-popup-time	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-process-popup-time -1$/;"	f
magit-process-prompt-functions	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-process-prompt-functions nil$/;"	f
magit-process-raise-error	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defvar magit-process-raise-error nil)$/;"	f
magit-process-sentinel	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-sentinel (process event)$/;"	f
magit-process-set-mode-line	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-set-mode-line (program args)$/;"	f
magit-process-set-mode-line-error-status	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-set-mode-line-error-status (&optional error str)$/;"	f
magit-process-setup	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-setup (program args)$/;"	f
magit-process-truncate-log	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-truncate-log ()$/;"	f
magit-process-unset-mode-line	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-unset-mode-line (&optional directory)$/;"	f
magit-process-unset-mode-line-error-status	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-unset-mode-line-error-status ()$/;"	f
magit-process-username-prompt	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-username-prompt (process string)$/;"	f
magit-process-username-prompt-regexps	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-process-username-prompt-regexps$/;"	f
magit-process-yes-or-no-prompt	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-process-yes-or-no-prompt (process string)$/;"	f
magit-process-yes-or-no-prompt-regexp	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defcustom magit-process-yes-or-no-prompt-regexp$/;"	f
magit-prompt-with-default	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-prompt-with-default (prompt def)$/;"	f
magit-published-branches	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(defcustom magit-published-branches '("origin\/master")$/;"	f
magit-published-branches	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-published-branches)$/;"	f
magit-pull	.emacs.d/elpa/magit-20190709.1612/magit-pull.el	/^(define-transient-command magit-pull ()$/;"	f
magit-pull--pushbranch-description	.emacs.d/elpa/magit-20190709.1612/magit-pull.el	/^(defun magit-pull--pushbranch-description ()$/;"	f
magit-pull--upstream-description	.emacs.d/elpa/magit-20190709.1612/magit-pull.el	/^(defun magit-pull--upstream-description ()$/;"	f
magit-pull-arguments	.emacs.d/elpa/magit-20190709.1612/magit-pull.el	/^(defun magit-pull-arguments ()$/;"	f
magit-pull-branch	.emacs.d/elpa/magit-20190709.1612/magit-pull.el	/^(defun magit-pull-branch (source args)$/;"	f
magit-pull-from-pushremote	.emacs.d/elpa/magit-20190709.1612/magit-pull.el	/^(define-suffix-command magit-pull-from-pushremote (args)$/;"	f
magit-pull-from-upstream	.emacs.d/elpa/magit-20190709.1612/magit-pull.el	/^(define-suffix-command magit-pull-from-upstream (args)$/;"	f
magit-pull-or-fetch	.emacs.d/elpa/magit-20190709.1612/magit-pull.el	/^(defcustom magit-pull-or-fetch nil$/;"	f
magit-pull.rebase	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(define-infix-command magit-pull.rebase ()$/;"	f
magit-push	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(define-transient-command magit-push ()$/;"	f
magit-push--pushbranch-description	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push--pushbranch-description ()$/;"	f
magit-push--upstream-description	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push--upstream-description ()$/;"	f
magit-push-arguments	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push-arguments ()$/;"	f
magit-push-current	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push-current (target args)$/;"	f
magit-push-current-to-pushremote	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(define-suffix-command magit-push-current-to-pushremote (args)$/;"	f
magit-push-current-to-upstream	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(define-suffix-command magit-push-current-to-upstream (args)$/;"	f
magit-push-implicitly	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push-implicitly (args)$/;"	f
magit-push-implicitly--desc	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push-implicitly--desc ()$/;"	f
magit-push-matching	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push-matching (remote &optional args)$/;"	f
magit-push-other	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push-other (source target args)$/;"	f
magit-push-refspecs	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push-refspecs (remote refspecs args)$/;"	f
magit-push-refspecs-history	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defvar magit-push-refspecs-history nil)$/;"	f
magit-push-tag	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push-tag (tag remote &optional args)$/;"	f
magit-push-tags	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push-tags (remote &optional args)$/;"	f
magit-push-to-remote	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push-to-remote (remote args)$/;"	f
magit-push-to-remote--desc	.emacs.d/elpa/magit-20190709.1612/magit-push.el	/^(defun magit-push-to-remote--desc ()$/;"	f
magit-range-re	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defconst magit-range-re$/;"	f
magit-read-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-branch (prompt &optional secondary-default)$/;"	f
magit-read-branch-or-commit	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-branch-or-commit (prompt &optional secondary-default)$/;"	f
magit-read-branch-prefer-other	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-branch-prefer-other (prompt)$/;"	f
magit-read-changed-file	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-read-changed-file (rev-or-range prompt &optional default)$/;"	f
magit-read-char-case	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defmacro magit-read-char-case (prompt verbose &rest clauses)$/;"	f
magit-read-file	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-read-file (prompt &optional tracked-only)$/;"	f
magit-read-file-choice	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-read-file-choice (prompt files &optional error default)$/;"	f
magit-read-file-from-rev	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-read-file-from-rev (rev prompt &optional default)$/;"	f
magit-read-file-hist	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defvar magit-read-file-hist nil)$/;"	f
magit-read-file-trace	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-read-file-trace (&rest _ignored)$/;"	f
magit-read-files	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-read-files (prompt initial-input history)$/;"	f
magit-read-gpg-secret-key	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-read-gpg-secret-key (prompt &optional _initial-input history)$/;"	f
magit-read-local-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-local-branch (prompt &optional secondary-default)$/;"	f
magit-read-local-branch-or-commit	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-local-branch-or-commit (prompt)$/;"	f
magit-read-local-branch-or-ref	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-local-branch-or-ref (prompt &optional secondary-default)$/;"	f
magit-read-module-path	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-module-path (prompt &optional predicate)$/;"	f
magit-read-number-string	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-read-number-string (prompt &optional default _history)$/;"	f
magit-read-other-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-other-branch$/;"	f
magit-read-other-branch-or-commit	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-other-branch-or-commit$/;"	f
magit-read-other-local-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-other-local-branch$/;"	f
magit-read-range	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-range (prompt &optional default)$/;"	f
magit-read-range-or-commit	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-range-or-commit (prompt &optional secondary-default)$/;"	f
magit-read-ref-sort	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-read-ref-sort (prompt initial-input _history)$/;"	f
magit-read-refspec	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-refspec (prompt remote)$/;"	f
magit-read-remote	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-remote (prompt &optional default use-only)$/;"	f
magit-read-remote-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-remote-branch$/;"	f
magit-read-remote-or-url	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-remote-or-url (prompt &optional default)$/;"	f
magit-read-repository	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-read-repository (&optional read-directory-name)$/;"	f
magit-read-reuse-message	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(defun magit-read-reuse-message (prompt &optional default history)$/;"	f
magit-read-shell-command	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defun magit-read-shell-command (&optional toplevel initial-input)$/;"	f
magit-read-starting-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-starting-point (prompt &optional branch default)$/;"	f
magit-read-stash	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-stash (prompt)$/;"	f
magit-read-string	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-read-string (prompt &optional initial-input history default-value$/;"	f
magit-read-string-ns	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-read-string-ns (prompt &optional initial-input history$/;"	f
magit-read-tag	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-tag (prompt &optional require-match)$/;"	f
magit-read-tracked-file	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-read-tracked-file (prompt)$/;"	f
magit-read-upstream-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-read-upstream-branch (&optional branch prompt)$/;"	f
magit-read-url	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defun magit-read-url (prompt &optional initial-input)$/;"	f
magit-rebase	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(define-transient-command magit-rebase ()$/;"	f
magit-rebase--perl-editor	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase--perl-editor (action since)$/;"	f
magit-rebase--target-commit	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase--target-commit (since)$/;"	f
magit-rebase--todo	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase--todo ()$/;"	f
magit-rebase--upstream-description	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase--upstream-description ()$/;"	f
magit-rebase-abort	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-abort ()$/;"	f
magit-rebase-arguments	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-arguments ()$/;"	f
magit-rebase-autosquash	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-autosquash (args)$/;"	f
magit-rebase-branch	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-branch (target args)$/;"	f
magit-rebase-continue	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-continue (&optional noedit)$/;"	f
magit-rebase-edit	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-edit ()$/;"	f
magit-rebase-edit-commit	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-edit-commit (commit args)$/;"	f
magit-rebase-in-progress-p	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-in-progress-p ()$/;"	f
magit-rebase-insert-apply-sequence	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-insert-apply-sequence (onto)$/;"	f
magit-rebase-insert-merge-sequence	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-insert-merge-sequence (onto)$/;"	f
magit-rebase-interactive	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-interactive (commit args)$/;"	f
magit-rebase-interactive-1	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-interactive-1$/;"	f
magit-rebase-interactive-assert	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-interactive-assert$/;"	f
magit-rebase-merges-select-mode	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-merges-select-mode (&rest _ignore)$/;"	f
magit-rebase-onto-pushremote	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(define-suffix-command magit-rebase-onto-pushremote (args)$/;"	f
magit-rebase-onto-upstream	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(define-suffix-command magit-rebase-onto-upstream (args)$/;"	f
magit-rebase-patches	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-patches ()$/;"	f
magit-rebase-remove-commit	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-remove-commit (commit args)$/;"	f
magit-rebase-reword-commit	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-reword-commit (commit args)$/;"	f
magit-rebase-skip	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-skip ()$/;"	f
magit-rebase-subset	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-rebase-subset (newbase start args)$/;"	f
magit-ref-abbrev	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-ref-abbrev (refname)$/;"	f
magit-ref-ambiguous-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-ref-ambiguous-p (refname)$/;"	f
magit-ref-eq	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-ref-eq (a b)$/;"	f
magit-ref-equal	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-ref-equal (a b)$/;"	f
magit-ref-exists-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-ref-exists-p (ref)$/;"	f
magit-ref-fullname	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-ref-fullname (refname)$/;"	f
magit-ref-maybe-qualify	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-ref-maybe-qualify (refname &optional prefix)$/;"	f
magit-ref-namespaces	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-ref-namespaces$/;"	f
magit-ref-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-ref-p (rev)$/;"	f
magit-reflog-amend	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defface magit-reflog-amend '((t :foreground "magenta"))$/;"	f
magit-reflog-checkout	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defface magit-reflog-checkout '((t :foreground "blue"))$/;"	f
magit-reflog-cherry-pick	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defface magit-reflog-cherry-pick '((t :foreground "green"))$/;"	f
magit-reflog-commit	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defface magit-reflog-commit '((t :foreground "green"))$/;"	f
magit-reflog-current	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defun magit-reflog-current ()$/;"	f
magit-reflog-format-subject	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defun magit-reflog-format-subject (subject)$/;"	f
magit-reflog-head	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defun magit-reflog-head ()$/;"	f
magit-reflog-labels	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defvar magit-reflog-labels$/;"	f
magit-reflog-limit	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defcustom magit-reflog-limit 256$/;"	f
magit-reflog-margin	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defcustom magit-reflog-margin$/;"	f
magit-reflog-merge	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defface magit-reflog-merge '((t :foreground "green"))$/;"	f
magit-reflog-mode	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(define-derived-mode magit-reflog-mode magit-mode "Magit Reflog"$/;"	f
magit-reflog-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defvar magit-reflog-mode-map$/;"	f
magit-reflog-other	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defface magit-reflog-other '((t :foreground "cyan"))$/;"	f
magit-reflog-other	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defun magit-reflog-other (ref)$/;"	f
magit-reflog-rebase	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defface magit-reflog-rebase '((t :foreground "magenta"))$/;"	f
magit-reflog-refresh-buffer	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defun magit-reflog-refresh-buffer ()$/;"	f
magit-reflog-remote	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defface magit-reflog-remote '((t :foreground "cyan"))$/;"	f
magit-reflog-reset	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defface magit-reflog-reset '((t :foreground "red"))$/;"	f
magit-reflog-setup-buffer	.emacs.d/elpa/magit-20190709.1612/magit-reflog.el	/^(defun magit-reflog-setup-buffer (ref)$/;"	f
magit-reflog-subject-re	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defconst magit-reflog-subject-re$/;"	f
magit-refname	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-refname$/;"	f
magit-refname-pullreq	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-refname-pullreq$/;"	f
magit-refname-stash	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-refname-stash$/;"	f
magit-refname-wip	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-refname-wip$/;"	f
magit-refresh	.emacs.d/elpa/magit-20190709.1612/magit-core.el	/^(defgroup magit-refresh nil$/;"	f
magit-refresh	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-refresh ()$/;"	f
magit-refresh-all	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-refresh-all ()$/;"	f
magit-refresh-args	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-refresh-args nil$/;"	f
magit-refresh-buffer	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-refresh-buffer ()$/;"	f
magit-refresh-buffer-hook	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-refresh-buffer-hook nil$/;"	f
magit-refresh-get-relative-position	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-refresh-get-relative-position ()$/;"	f
magit-refresh-start-time	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-refresh-start-time nil)$/;"	f
magit-refresh-status-buffer	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-refresh-status-buffer t$/;"	f
magit-refresh-verbose	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-refresh-verbose nil$/;"	f
magit-refs	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defgroup magit-refs nil$/;"	f
magit-refs--format-focus-column	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-refs--format-focus-column (ref &optional type)$/;"	f
magit-refs--format-local-branch	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-refs--format-local-branch (line)$/;"	f
magit-refs--format-local-branches	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-refs--format-local-branches ()$/;"	f
magit-refs--format-margin	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-refs--format-margin (commit)$/;"	f
magit-refs--insert-cherry-commits	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-refs--insert-cherry-commits (ref)$/;"	f
magit-refs--insert-refname-p	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-refs--insert-refname-p (refname)$/;"	f
magit-refs--propertize-branch	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-refs--propertize-branch (branch ref &optional head-face)$/;"	f
magit-refs-filter-alist	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defcustom magit-refs-filter-alist nil$/;"	f
magit-refs-focus-column-width	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-refs-focus-column-width)$/;"	f
magit-refs-focus-column-width	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defcustom magit-refs-focus-column-width 5$/;"	f
magit-refs-margin	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-refs-margin)$/;"	f
magit-refs-margin	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defcustom magit-refs-margin$/;"	f
magit-refs-margin-for-tags	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defcustom magit-refs-margin-for-tags nil$/;"	f
magit-refs-mode	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(define-derived-mode magit-refs-mode magit-mode "Magit Refs"$/;"	f
magit-refs-mode-hook	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defcustom magit-refs-mode-hook nil$/;"	f
magit-refs-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defvar magit-refs-mode-map$/;"	f
magit-refs-pad-commit-counts	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defcustom magit-refs-pad-commit-counts nil$/;"	f
magit-refs-primary-column-width	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defcustom magit-refs-primary-column-width (cons 16 32)$/;"	f
magit-refs-refresh-buffer	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-refs-refresh-buffer ()$/;"	f
magit-refs-sections-hook	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defcustom magit-refs-sections-hook$/;"	f
magit-refs-set-show-commit-count	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-refs-set-show-commit-count ()$/;"	f
magit-refs-setup-buffer	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-refs-setup-buffer (ref args)$/;"	f
magit-refs-show-commit-count	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-refs-show-commit-count)$/;"	f
magit-refs-show-commit-count	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defcustom magit-refs-show-commit-count nil$/;"	f
magit-refs-show-push-remote	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defvar magit-refs-show-push-remote nil$/;"	f
magit-refs-show-remote-prefix	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defcustom magit-refs-show-remote-prefix nil$/;"	f
magit-region-highlight-hook	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-region-highlight-hook$/;"	f
magit-region-overlays	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar-local magit-region-overlays nil)$/;"	f
magit-region-sections	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-region-sections (&optional condition multiple)$/;"	f
magit-region-values	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-region-values (&optional condition multiple)$/;"	f
magit-related	.emacs.d/elpa/magit-20190709.1612/magit-core.el	/^(defgroup magit-related nil$/;"	f
magit-release-tag-regexp	.emacs.d/elpa/magit-20190709.1612/magit-tag.el	/^(defvar magit-release-tag-regexp "\\\\`\\$/;"	f
magit-remote	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(define-transient-command magit-remote (remote)$/;"	f
magit-remote--cleanup-push-variables	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defun magit-remote--cleanup-push-variables (remote &optional new-name)$/;"	f
magit-remote-add	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defun magit-remote-add (remote url &optional args)$/;"	f
magit-remote-add-set-remote.pushDefault	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defcustom magit-remote-add-set-remote.pushDefault 'ask-if-unset$/;"	f
magit-remote-at-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-remote-at-point ()$/;"	f
magit-remote-branch-at-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-remote-branch-at-point ()$/;"	f
magit-remote-branch-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-remote-branch-p (rev)$/;"	f
magit-remote-configure	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(define-transient-command magit-remote-configure (remote)$/;"	f
magit-remote-direct-configure	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defcustom magit-remote-direct-configure t$/;"	f
magit-remote-list-branches	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-remote-list-branches (remote)$/;"	f
magit-remote-list-refs	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-remote-list-refs (remote)$/;"	f
magit-remote-list-tags	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-remote-list-tags (remote)$/;"	f
magit-remote-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-remote-p (string)$/;"	f
magit-remote-prune	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defun magit-remote-prune (remote)$/;"	f
magit-remote-prune-refspecs	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defun magit-remote-prune-refspecs (remote)$/;"	f
magit-remote-remove	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defun magit-remote-remove (remote)$/;"	f
magit-remote-rename	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defun magit-remote-rename (old new)$/;"	f
magit-remote-section-map	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defvar magit-remote-section-map$/;"	f
magit-remote-set-head	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defun magit-remote-set-head (remote &optional branch)$/;"	f
magit-remote-unset-head	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(defun magit-remote-unset-head (remote)$/;"	f
magit-remote.<remote>.fetch	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(define-infix-command magit-remote.<remote>.fetch ()$/;"	f
magit-remote.<remote>.push	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(define-infix-command magit-remote.<remote>.push ()$/;"	f
magit-remote.<remote>.pushurl	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(define-infix-command magit-remote.<remote>.pushurl ()$/;"	f
magit-remote.<remote>.tagopt	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(define-infix-command magit-remote.<remote>.tagopt ()$/;"	f
magit-remote.<remote>.url	.emacs.d/elpa/magit-20190709.1612/magit-remote.el	/^(define-infix-command magit-remote.<remote>.url ()$/;"	f
magit-remote.pushDefault	.emacs.d/elpa/magit-20190709.1612/magit-branch.el	/^(define-infix-command magit-remote.pushDefault ()$/;"	f
magit-renamed-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-renamed-files (revA revB)$/;"	f
magit-repolist	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defgroup magit-repolist nil$/;"	f
magit-repolist-column-branch	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-column-branch (_id)$/;"	f
magit-repolist-column-branches	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-column-branches (_id)$/;"	f
magit-repolist-column-dirty	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-column-dirty (_id)$/;"	f
magit-repolist-column-ident	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-column-ident (id)$/;"	f
magit-repolist-column-path	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-column-path (_id)$/;"	f
magit-repolist-column-stashes	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-column-stashes (_id)$/;"	f
magit-repolist-column-unpulled-from-pushremote	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-column-unpulled-from-pushremote (_id)$/;"	f
magit-repolist-column-unpulled-from-upstream	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-column-unpulled-from-upstream (_id)$/;"	f
magit-repolist-column-unpushed-to-pushremote	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-column-unpushed-to-pushremote (_id)$/;"	f
magit-repolist-column-unpushed-to-upstream	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-column-unpushed-to-upstream (_id)$/;"	f
magit-repolist-column-upstream	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-column-upstream (_id)$/;"	f
magit-repolist-column-version	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-column-version (_id)$/;"	f
magit-repolist-columns	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defcustom magit-repolist-columns$/;"	f
magit-repolist-mode	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(define-derived-mode magit-repolist-mode tabulated-list-mode "Repos"$/;"	f
magit-repolist-mode-hook	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defcustom magit-repolist-mode-hook '(hl-line-mode)$/;"	f
magit-repolist-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defvar magit-repolist-mode-map$/;"	f
magit-repolist-refresh	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-refresh ()$/;"	f
magit-repolist-status	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repolist-status (&optional _button)$/;"	f
magit-repos-alist	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defun magit-repos-alist ()$/;"	f
magit-repository-directories	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defcustom magit-repository-directories nil$/;"	f
magit-repository-local-cache	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar magit-repository-local-cache nil$/;"	f
magit-repository-local-delete	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-repository-local-delete (key &optional repository)$/;"	f
magit-repository-local-exists-p	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-repository-local-exists-p (key &optional repository)$/;"	f
magit-repository-local-get	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-repository-local-get (key &optional default repository)$/;"	f
magit-repository-local-repository	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-repository-local-repository ()$/;"	f
magit-repository-local-set	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-repository-local-set (key value &optional repository)$/;"	f
magit-request-pull	.emacs.d/elpa/magit-20190709.1612/magit-patch.el	/^(defun magit-request-pull (url start end)$/;"	f
magit-reset	.emacs.d/elpa/magit-20190709.1612/magit-reset.el	/^(define-transient-command magit-reset ()$/;"	f
magit-reset-hard	.emacs.d/elpa/magit-20190709.1612/magit-reset.el	/^(defun magit-reset-hard (commit)$/;"	f
magit-reset-index	.emacs.d/elpa/magit-20190709.1612/magit-reset.el	/^(defun magit-reset-index (commit)$/;"	f
magit-reset-internal	.emacs.d/elpa/magit-20190709.1612/magit-reset.el	/^(defun magit-reset-internal (arg commit &optional path)$/;"	f
magit-reset-mixed	.emacs.d/elpa/magit-20190709.1612/magit-reset.el	/^(defun magit-reset-mixed (commit)$/;"	f
magit-reset-quickly	.emacs.d/elpa/magit-20190709.1612/magit-reset.el	/^(defun magit-reset-quickly (commit &optional hard)$/;"	f
magit-reset-read-branch-or-commit	.emacs.d/elpa/magit-20190709.1612/magit-reset.el	/^(defun magit-reset-read-branch-or-commit (prompt)$/;"	f
magit-reset-soft	.emacs.d/elpa/magit-20190709.1612/magit-reset.el	/^(defun magit-reset-soft (commit)$/;"	f
magit-reset-worktree	.emacs.d/elpa/magit-20190709.1612/magit-reset.el	/^(defun magit-reset-worktree (commit)$/;"	f
magit-reshelve-since	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-reshelve-since (rev)$/;"	f
magit-restore-section-visibility-cache	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-restore-section-visibility-cache (mode)$/;"	f
magit-restore-window-configuration	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-restore-window-configuration (&optional kill-buffer)$/;"	f
magit-rev-abbrev	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-abbrev (rev)$/;"	f
magit-rev-ancestor-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-ancestor-p (a b)$/;"	f
magit-rev-author-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-author-p (rev)$/;"	f
magit-rev-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-branch (rev)$/;"	f
magit-rev-diff-count	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-diff-count (a b)$/;"	f
magit-rev-eq	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-eq (a b)$/;"	f
magit-rev-equal	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-equal (a b)$/;"	f
magit-rev-format	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-format (format &optional rev args)$/;"	f
magit-rev-hash	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defalias 'magit-rev-hash 'magit-commit-p)$/;"	f
magit-rev-head-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-head-p (rev)$/;"	f
magit-rev-insert-format	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-insert-format (format &optional rev args)$/;"	f
magit-rev-name	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-name (rev &optional pattern not-anchored)$/;"	f
magit-rev-parse	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-parse (&rest args)$/;"	f
magit-rev-parse-false	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-parse-false (&rest args)$/;"	f
magit-rev-parse-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-parse-p (&rest args)$/;"	f
magit-rev-parse-safe	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-parse-safe (&rest args)$/;"	f
magit-rev-parse-true	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-parse-true (&rest args)$/;"	f
magit-rev-verify	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-rev-verify (rev)$/;"	f
magit-rev-verify-commit	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defalias 'magit-rev-verify-commit 'magit-commit-p)$/;"	f
magit-reverse	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-reverse (&rest args)$/;"	f
magit-reverse-apply	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-reverse-apply (section:s apply args)$/;"	f
magit-reverse-atomically	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defcustom magit-reverse-atomically nil$/;"	f
magit-reverse-file	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-reverse-file (section args)$/;"	f
magit-reverse-files	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-reverse-files (sections args)$/;"	f
magit-reverse-hunk	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-reverse-hunk (section args)$/;"	f
magit-reverse-hunks	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-reverse-hunks (sections args)$/;"	f
magit-reverse-in-index	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-reverse-in-index (&rest args)$/;"	f
magit-reverse-region	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-reverse-region (section args)$/;"	f
magit-revert	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(define-transient-command magit-revert ()$/;"	f
magit-revert-and-commit	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-revert-and-commit (commit &optional args)$/;"	f
magit-revert-in-progress-p	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-revert-in-progress-p ()$/;"	f
magit-revert-no-commit	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-revert-no-commit (commit &optional args)$/;"	f
magit-revert-read-args	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-revert-read-args (prompt)$/;"	f
magit-revert-rev-file-buffer	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-revert-rev-file-buffer (_ignore-auto noconfirm)$/;"	f
magit-revision	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defgroup magit-revision nil$/;"	f
magit-revision--wash-message	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-revision--wash-message ()$/;"	f
magit-revision-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-revision-files (rev)$/;"	f
magit-revision-fill-summary-line	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-revision-fill-summary-line nil$/;"	f
magit-revision-filter-files-on-follow	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-revision-filter-files-on-follow nil$/;"	f
magit-revision-headers-format	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-revision-headers-format "\\$/;"	f
magit-revision-history	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-revision-history nil)$/;"	f
magit-revision-insert-related-refs	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-revision-insert-related-refs t$/;"	f
magit-revision-mode	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-derived-mode magit-revision-mode magit-diff-mode "Magit Rev"$/;"	f
magit-revision-mode-hook	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-revision-mode-hook '(bug-reference-mode)$/;"	f
magit-revision-refresh-buffer	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-revision-refresh-buffer ()$/;"	f
magit-revision-sections-hook	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-revision-sections-hook$/;"	f
magit-revision-setup-buffer	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-revision-setup-buffer (rev args files)$/;"	f
magit-revision-show-gravatars	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-revision-show-gravatars nil$/;"	f
magit-revision-stack	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defvar magit-revision-stack nil)$/;"	f
magit-revision-use-gravatar-kludge	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-revision-use-gravatar-kludge nil$/;"	f
magit-revision-use-hash-sections	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defcustom magit-revision-use-hash-sections 'quicker$/;"	f
magit-root-section	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar-local magit-root-section nil$/;"	f
magit-run	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(define-transient-command magit-run ()$/;"	f
magit-run-git	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-run-git (&rest args)$/;"	f
magit-run-git-async	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-run-git-async (&rest args)$/;"	f
magit-run-git-gui	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-run-git-gui ()$/;"	f
magit-run-git-gui-blame	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-run-git-gui-blame (commit filename &optional linenum)$/;"	f
magit-run-git-sequencer	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-run-git-sequencer (&rest args)$/;"	f
magit-run-git-with-editor	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-run-git-with-editor (&rest args)$/;"	f
magit-run-git-with-input	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-run-git-with-input (&rest args)$/;"	f
magit-run-gitk	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-run-gitk ()$/;"	f
magit-run-gitk-all	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-run-gitk-all ()$/;"	f
magit-run-gitk-branches	.emacs.d/elpa/magit-20190709.1612/magit-extras.el	/^(defun magit-run-gitk-branches ()$/;"	f
magit-run-hook-with-benchmark	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-run-hook-with-benchmark (hook)$/;"	f
magit-run-section-hook	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-run-section-hook (hook &rest args)$/;"	f
magit-save-repository-buffers	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-save-repository-buffers t$/;"	f
magit-save-repository-buffers	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-save-repository-buffers (&optional arg)$/;"	f
magit-save-window-configuration	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-save-window-configuration ()$/;"	f
magit-section	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defclass magit-section ()$/;"	f
magit-section	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defgroup magit-section nil$/;"	f
magit-section--backward-find	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section--backward-find (predicate)$/;"	f
magit-section--backward-protected	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section--backward-protected ()$/;"	f
magit-section-backward	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-backward ()$/;"	f
magit-section-backward-sibling	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-backward-sibling ()$/;"	f
magit-section-cache-visibility	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defcustom magit-section-cache-visibility t$/;"	f
magit-section-cached-visibility	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-cached-visibility (section)$/;"	f
magit-section-case	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defmacro magit-section-case (&rest clauses)$/;"	f
magit-section-cycle	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-cycle (section)$/;"	f
magit-section-cycle-diffs	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-cycle-diffs ()$/;"	f
magit-section-cycle-global	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-cycle-global ()$/;"	f
magit-section-forward	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-forward ()$/;"	f
magit-section-forward-sibling	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-forward-sibling ()$/;"	f
magit-section-goto	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-goto (arg)$/;"	f
magit-section-goto-successor	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-goto-successor (section line char arg)$/;"	f
magit-section-goto-successor-1	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-goto-successor-1 (section)$/;"	f
magit-section-heading	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defface magit-section-heading$/;"	f
magit-section-heading-selection	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defface magit-section-heading-selection$/;"	f
magit-section-hidden-body	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-hidden-body (section &optional pred)$/;"	f
magit-section-hide	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-hide (section)$/;"	f
magit-section-hide-children	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-hide-children (section)$/;"	f
magit-section-highlight	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defface magit-section-highlight$/;"	f
magit-section-highlight	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-highlight (section selection)$/;"	f
magit-section-highlight-hook	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defcustom magit-section-highlight-hook$/;"	f
magit-section-highlight-overlays	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar-local magit-section-highlight-overlays nil)$/;"	f
magit-section-highlight-selection	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-highlight-selection (_ selection)$/;"	f
magit-section-highlighted-section	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar-local magit-section-highlighted-section nil)$/;"	f
magit-section-highlighted-sections	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar-local magit-section-highlighted-sections nil)$/;"	f
magit-section-ident	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-ident (section)$/;"	f
magit-section-initial-visibility-alist	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defcustom magit-section-initial-visibility-alist$/;"	f
magit-section-internal-region-p	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-internal-region-p (&optional section)$/;"	f
magit-section-invisible-p	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-invisible-p (section)$/;"	f
magit-section-lineage	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-lineage (section)$/;"	f
magit-section-make-overlay	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-make-overlay (start end face)$/;"	f
magit-section-match-1	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-match-1 (condition section)$/;"	f
magit-section-match-2	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-match-2 (condition section)$/;"	f
magit-section-match-assoc	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-match-assoc (section alist)$/;"	f
magit-section-maybe-paint-visibility-ellipses	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-maybe-paint-visibility-ellipses ()$/;"	f
magit-section-maybe-remove-visibility-indicator	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-maybe-remove-visibility-indicator (section)$/;"	f
magit-section-maybe-update-visibility-indicator	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-maybe-update-visibility-indicator (section)$/;"	f
magit-section-movement-hook	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defcustom magit-section-movement-hook$/;"	f
magit-section-parent-value	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-parent-value (section)$/;"	f
magit-section-position-in-heading-p	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-position-in-heading-p (&optional section pos)$/;"	f
magit-section-secondary-heading	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defface magit-section-secondary-heading '((t :weight bold))$/;"	f
magit-section-set-visibility-hook	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defcustom magit-section-set-visibility-hook$/;"	f
magit-section-set-window-start	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-set-window-start (section)$/;"	f
magit-section-show	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show (section)$/;"	f
magit-section-show-child-count	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defcustom magit-section-show-child-count t$/;"	f
magit-section-show-children	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-children (section &optional depth)$/;"	f
magit-section-show-children-1	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-children-1 (section &optional depth)$/;"	f
magit-section-show-headings	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-headings (section)$/;"	f
magit-section-show-headings-1	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-headings-1 (section)$/;"	f
magit-section-show-level	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-level (level)$/;"	f
magit-section-show-level-1	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-level-1 ()$/;"	f
magit-section-show-level-1-all	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-level-1-all ()$/;"	f
magit-section-show-level-2	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-level-2 ()$/;"	f
magit-section-show-level-2-all	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-level-2-all ()$/;"	f
magit-section-show-level-3	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-level-3 ()$/;"	f
magit-section-show-level-3-all	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-level-3-all ()$/;"	f
magit-section-show-level-4	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-level-4 ()$/;"	f
magit-section-show-level-4-all	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-show-level-4-all ()$/;"	f
magit-section-siblings	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-siblings (section &optional direction)$/;"	f
magit-section-toggle	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-toggle (section)$/;"	f
magit-section-toggle-children	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-toggle-children (section)$/;"	f
magit-section-unhighlight-hook	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defcustom magit-section-unhighlight-hook$/;"	f
magit-section-unhighlight-sections	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar-local magit-section-unhighlight-sections nil)$/;"	f
magit-section-up	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-up ()$/;"	f
magit-section-update-highlight	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-update-highlight ()$/;"	f
magit-section-update-region	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-update-region (_)$/;"	f
magit-section-value-if	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-section-value-if (condition &optional section)$/;"	f
magit-section-visibility-cache	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defvar-local magit-section-visibility-cache nil)$/;"	f
magit-section-visibility-indicator	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defcustom magit-section-visibility-indicator$/;"	f
magit-section-when	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defmacro magit-section-when (condition &rest body)$/;"	f
magit-sequence-done	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defface magit-sequence-done$/;"	f
magit-sequence-drop	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defface magit-sequence-drop$/;"	f
magit-sequence-exec	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defface magit-sequence-exec$/;"	f
magit-sequence-head	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defface magit-sequence-head$/;"	f
magit-sequence-insert-am-patch	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-sequence-insert-am-patch (type patch face)$/;"	f
magit-sequence-insert-commit	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-sequence-insert-commit (type hash face)$/;"	f
magit-sequence-insert-sequence	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-sequence-insert-sequence (stop onto &optional orig)$/;"	f
magit-sequence-onto	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defface magit-sequence-onto$/;"	f
magit-sequence-part	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defface magit-sequence-part$/;"	f
magit-sequence-pick	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defface magit-sequence-pick$/;"	f
magit-sequence-stop	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defface magit-sequence-stop$/;"	f
magit-sequencer-abort	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-sequencer-abort ()$/;"	f
magit-sequencer-continue	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-sequencer-continue ()$/;"	f
magit-sequencer-in-progress-p	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-sequencer-in-progress-p ()$/;"	f
magit-sequencer-process-sentinel	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-sequencer-process-sentinel (process event)$/;"	f
magit-sequencer-skip	.emacs.d/elpa/magit-20190709.1612/magit-sequence.el	/^(defun magit-sequencer-skip ()$/;"	f
magit-set	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-set (value &rest keys)$/;"	f
magit-set-all	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-set-all (values &rest keys)$/;"	f
magit-set-buffer-margin	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defun magit-set-buffer-margin (&optional reset refresh)$/;"	f
magit-set-buffer-margin-refresh	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defvar-local magit-set-buffer-margin-refresh nil)$/;"	f
magit-set-header-line-format	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-set-header-line-format (string)$/;"	f
magit-set-upstream-branch	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-set-upstream-branch (branch upstream)$/;"	f
magit-set-window-margin	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defun magit-set-window-margin (&optional window)$/;"	f
magit-setup-buffer	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defmacro magit-setup-buffer (mode &optional locked &rest bindings)$/;"	f
magit-setup-buffer-hook	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-setup-buffer-hook$/;"	f
magit-setup-buffer-internal	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-setup-buffer-internal (mode locked bindings)$/;"	f
magit-shell-command	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defun magit-shell-command (command)$/;"	f
magit-shell-command-topdir	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defun magit-shell-command-topdir (command)$/;"	f
magit-shell-command-verbose-prompt	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defcustom magit-shell-command-verbose-prompt t$/;"	f
magit-show-commit	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-show-commit (rev &optional args files module)$/;"	f
magit-show-commit--arguments	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defun magit-show-commit--arguments ()$/;"	f
magit-show-refs	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(define-transient-command magit-show-refs (&optional transient)$/;"	f
magit-show-refs-arguments	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-show-refs-arguments ()$/;"	f
magit-show-refs-current	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-show-refs-current (&optional args)$/;"	f
magit-show-refs-head	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-show-refs-head (&optional args)$/;"	f
magit-show-refs-other	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-show-refs-other (&optional ref args)$/;"	f
magit-signature-bad	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-signature-bad$/;"	f
magit-signature-error	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-signature-error$/;"	f
magit-signature-expired	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-signature-expired$/;"	f
magit-signature-expired-key	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-signature-expired-key$/;"	f
magit-signature-good	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-signature-good$/;"	f
magit-signature-revoked	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-signature-revoked$/;"	f
magit-signature-untrusted	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-signature-untrusted$/;"	f
magit-skip-worktree	.emacs.d/elpa/magit-20190709.1612/magit-gitignore.el	/^(defun magit-skip-worktree (file)$/;"	f
magit-skip-worktree-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-skip-worktree-files ()$/;"	f
magit-slow-confirm	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defcustom magit-slow-confirm '(drop-stashes)$/;"	f
magit-snapshot-both	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-snapshot-both (&optional include-untracked)$/;"	f
magit-snapshot-index	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-snapshot-index ()$/;"	f
magit-snapshot-read-args	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-snapshot-read-args ()$/;"	f
magit-snapshot-save	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-snapshot-save (index worktree untracked &optional refresh)$/;"	f
magit-snapshot-worktree	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-snapshot-worktree (&optional include-untracked)$/;"	f
magit-special-refnames	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-special-refnames$/;"	f
magit-split-branch-name	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-split-branch-name (branch)$/;"	f
magit-split-range	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-split-range (range)$/;"	f
magit-stage	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-stage (&optional intent)$/;"	f
magit-stage-1	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-stage-1 (arg &optional files)$/;"	f
magit-stage-file	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-stage-file (file)$/;"	f
magit-stage-modified	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-stage-modified (&optional all)$/;"	f
magit-stage-untracked	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-stage-untracked (&optional intent)$/;"	f
magit-staged-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-staged-files (&optional nomodules files)$/;"	f
magit-staged-section-map	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defvar magit-staged-section-map$/;"	f
magit-start-git	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-start-git (input &rest args)$/;"	f
magit-start-process	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun magit-start-process (program &optional input &rest args)$/;"	f
magit-startup-asserts	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defun magit-startup-asserts ()$/;"	f
magit-stash	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defgroup magit-stash nil$/;"	f
magit-stash	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(define-transient-command magit-stash ()$/;"	f
magit-stash-apply	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-apply (stash)$/;"	f
magit-stash-arguments	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-arguments ()$/;"	f
magit-stash-at-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-stash-at-point ()$/;"	f
magit-stash-both	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-both (message &optional include-untracked)$/;"	f
magit-stash-branch	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-branch (stash branch)$/;"	f
magit-stash-branch-here	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-branch-here (stash branch)$/;"	f
magit-stash-clear	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-clear (ref)$/;"	f
magit-stash-create	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-create (message index worktree untracked)$/;"	f
magit-stash-drop	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-drop (stash)$/;"	f
magit-stash-format-patch	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-format-patch (stash)$/;"	f
magit-stash-index	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-index (message)$/;"	f
magit-stash-insert-section	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-insert-section (commit range message &optional files)$/;"	f
magit-stash-keep-index	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-keep-index (message &optional include-untracked)$/;"	f
magit-stash-list	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-list ()$/;"	f
magit-stash-mode	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(define-derived-mode magit-stash-mode magit-diff-mode "Magit Stash"$/;"	f
magit-stash-pop	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-pop (stash)$/;"	f
magit-stash-read-args	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-read-args ()$/;"	f
magit-stash-read-message	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-read-message ()$/;"	f
magit-stash-read-untracked	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-read-untracked ()$/;"	f
magit-stash-refresh-buffer	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-refresh-buffer ()$/;"	f
magit-stash-save	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-save (message index worktree untracked$/;"	f
magit-stash-section-map	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defvar magit-stash-section-map$/;"	f
magit-stash-sections-hook	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defcustom magit-stash-sections-hook$/;"	f
magit-stash-setup-buffer	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-setup-buffer (stash args files)$/;"	f
magit-stash-show	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-show (stash &optional args files)$/;"	f
magit-stash-store	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-store (message ref commit)$/;"	f
magit-stash-summary	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-summary ()$/;"	f
magit-stash-worktree	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stash-worktree (message &optional include-untracked)$/;"	f
magit-stashes-margin	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defcustom magit-stashes-margin$/;"	f
magit-stashes-mode	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(define-derived-mode magit-stashes-mode magit-reflog-mode "Magit Stashes"$/;"	f
magit-stashes-refresh-buffer	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stashes-refresh-buffer ()$/;"	f
magit-stashes-section-map	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defvar magit-stashes-section-map$/;"	f
magit-stashes-setup-buffer	.emacs.d/elpa/magit-20190709.1612/magit-stash.el	/^(defun magit-stashes-setup-buffer ()$/;"	f
magit-status	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defgroup magit-status nil$/;"	f
magit-status	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-status (&optional directory cache)$/;"	f
magit-status-goto-initial-section	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-status-goto-initial-section ()$/;"	f
magit-status-goto-initial-section-1	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-status-goto-initial-section-1 ()$/;"	f
magit-status-headers-hook	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defcustom magit-status-headers-hook$/;"	f
magit-status-initial-section	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defcustom magit-status-initial-section '(1)$/;"	f
magit-status-internal	.emacs.d/elpa/magit-20190709.1612/magit-obsolete.el	/^(define-obsolete-function-alias 'magit-status-internal$/;"	f
magit-status-margin	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-status-margin)$/;"	f
magit-status-margin	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defcustom magit-status-margin$/;"	f
magit-status-maybe-update-blob-buffer	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-status-maybe-update-blob-buffer (&optional _)$/;"	f
magit-status-maybe-update-revision-buffer	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-status-maybe-update-revision-buffer (&optional _)$/;"	f
magit-status-mode	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(define-derived-mode magit-status-mode magit-mode "Magit"$/;"	f
magit-status-mode-hook	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defcustom magit-status-mode-hook nil$/;"	f
magit-status-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defvar magit-status-mode-map$/;"	f
magit-status-refresh-buffer	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-status-refresh-buffer ()$/;"	f
magit-status-sections-hook	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-status-sections-hook)$/;"	f
magit-status-sections-hook	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defcustom magit-status-sections-hook$/;"	f
magit-status-setup-buffer	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defun magit-status-setup-buffer (&optional directory)$/;"	f
magit-status-show-hashes-in-headers	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defcustom magit-status-show-hashes-in-headers nil$/;"	f
magit-submodule	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(define-transient-command magit-submodule ()$/;"	f
magit-submodule--maybe-reuse-gitdir	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-submodule--maybe-reuse-gitdir (name path)$/;"	f
magit-submodule--restore-worktree	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-submodule--restore-worktree (worktree gitdir)$/;"	f
magit-submodule-add	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(define-suffix-command magit-submodule-add (url &optional path name args)$/;"	f
magit-submodule-add-1	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-submodule-add-1 (url &optional path name args)$/;"	f
magit-submodule-arguments	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-submodule-arguments (&rest filters)$/;"	f
magit-submodule-list-columns	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defcustom magit-submodule-list-columns$/;"	f
magit-submodule-list-mode	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(define-derived-mode magit-submodule-list-mode tabulated-list-mode "Modules"$/;"	f
magit-submodule-list-mode-hook	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defcustom magit-submodule-list-mode-hook '(hl-line-mode)$/;"	f
magit-submodule-list-mode-map	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defvar magit-submodule-list-mode-map$/;"	f
magit-submodule-list-refresh	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-submodule-list-refresh ()$/;"	f
magit-submodule-populate	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(define-suffix-command magit-submodule-populate (modules)$/;"	f
magit-submodule-read-name-for-path	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-submodule-read-name-for-path (path &optional prefer-short)$/;"	f
magit-submodule-register	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(define-suffix-command magit-submodule-register (modules)$/;"	f
magit-submodule-remove	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-submodule-remove (modules args trash-gitdirs)$/;"	f
magit-submodule-remove-trash-gitdirs	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defcustom magit-submodule-remove-trash-gitdirs nil$/;"	f
magit-submodule-synchronize	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(define-suffix-command magit-submodule-synchronize (modules args)$/;"	f
magit-submodule-unpopulate	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(define-suffix-command magit-submodule-unpopulate (modules args)$/;"	f
magit-submodule-update	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(define-suffix-command magit-submodule-update (modules args)$/;"	f
magit-submodule-visit	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defun magit-submodule-visit (module &optional other-window)$/;"	f
magit-subtree	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(define-transient-command magit-subtree ()$/;"	f
magit-subtree-add	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(defun magit-subtree-add (prefix repository ref args)$/;"	f
magit-subtree-add-commit	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(defun magit-subtree-add-commit (prefix commit args)$/;"	f
magit-subtree-arguments	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(defun magit-subtree-arguments (transient)$/;"	f
magit-subtree-export	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(define-transient-command magit-subtree-export ()$/;"	f
magit-subtree-import	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(define-transient-command magit-subtree-import ()$/;"	f
magit-subtree-merge	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(defun magit-subtree-merge (prefix commit args)$/;"	f
magit-subtree-prefix	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(defun magit-subtree-prefix (transient prompt)$/;"	f
magit-subtree-pull	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(defun magit-subtree-pull (prefix repository ref args)$/;"	f
magit-subtree-push	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(defun magit-subtree-push (prefix repository ref args)$/;"	f
magit-subtree-read-prefix	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(defun magit-subtree-read-prefix (prompt &optional default _history)$/;"	f
magit-subtree-split	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(defun magit-subtree-split (prefix commit args)$/;"	f
magit-subtree:--annotate	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(define-infix-argument magit-subtree:--annotate ()$/;"	f
magit-subtree:--branch	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(define-infix-argument magit-subtree:--branch ()$/;"	f
magit-subtree:--message	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(define-infix-argument magit-subtree:--message ()$/;"	f
magit-subtree:--onto	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(define-infix-argument magit-subtree:--onto ()$/;"	f
magit-subtree:--prefix	.emacs.d/elpa/magit-20190709.1612/magit-subtree.el	/^(define-infix-argument magit-subtree:--prefix ()$/;"	f
magit-symbolic-ref-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-symbolic-ref-p (name)$/;"	f
magit-tag	.emacs.d/elpa/magit-20190709.1612/magit-tag.el	/^(define-transient-command magit-tag ()$/;"	f
magit-tag	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defface magit-tag$/;"	f
magit-tag-arguments	.emacs.d/elpa/magit-20190709.1612/magit-tag.el	/^(defun magit-tag-arguments ()$/;"	f
magit-tag-at-point	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-tag-at-point ()$/;"	f
magit-tag-create	.emacs.d/elpa/magit-20190709.1612/magit-tag.el	/^(defun magit-tag-create (name rev &optional args)$/;"	f
magit-tag-delete	.emacs.d/elpa/magit-20190709.1612/magit-tag.el	/^(defun magit-tag-delete (tags)$/;"	f
magit-tag-p	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-tag-p (rev)$/;"	f
magit-tag-prune	.emacs.d/elpa/magit-20190709.1612/magit-tag.el	/^(defun magit-tag-prune (tags remote-tags remote)$/;"	f
magit-tag-release	.emacs.d/elpa/magit-20190709.1612/magit-tag.el	/^(defun magit-tag-release (tag msg)$/;"	f
magit-tag-section-map	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defvar magit-tag-section-map$/;"	f
magit-tag:--local-user	.emacs.d/elpa/magit-20190709.1612/magit-tag.el	/^(define-infix-argument magit-tag:--local-user ()$/;"	f
magit-thingatpt--git-revision	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-thingatpt--git-revision ()$/;"	f
magit-this-error	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-this-error)$/;"	f
magit-this-error	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defvar-local magit-this-error nil)$/;"	f
magit-this-process	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defvar magit-this-process nil)$/;"	f
magit-toggle-buffer-lock	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-toggle-buffer-lock ()$/;"	f
magit-toggle-log-margin-style	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defun magit-toggle-log-margin-style ()$/;"	f
magit-toggle-margin	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defun magit-toggle-margin ()$/;"	f
magit-toggle-margin-details	.emacs.d/elpa/magit-20190709.1612/magit-margin.el	/^(defun magit-toggle-margin-details ()$/;"	f
magit-toplevel	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-toplevel (&optional directory)$/;"	f
magit-tracked-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-tracked-files ()$/;"	f
magit-tramp-process-environment	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-tramp-process-environment nil)$/;"	f
magit-transient-read-person	.emacs.d/elpa/magit-20190709.1612/magit-transient.el	/^(defun magit-transient-read-person (prompt initial-input history)$/;"	f
magit-transient-read-revision	.emacs.d/elpa/magit-20190709.1612/magit-transient.el	/^(defun magit-transient-read-revision (prompt initial-input history)$/;"	f
magit-turn-on-auto-revert-mode-if-desired	.emacs.d/elpa/magit-20190709.1612/magit-autorevert.el	/^(defun magit-turn-on-auto-revert-mode-if-desired (&optional file)$/;"	f
magit-unhighlight-region	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-unhighlight-region (rol)$/;"	f
magit-uniquify-buffer-names	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defcustom magit-uniquify-buffer-names t$/;"	f
magit-unmerged-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-unmerged-files ()$/;"	f
magit-unmerged-section-map	.emacs.d/elpa/magit-20190709.1612/magit-merge.el	/^(defvar magit-unmerged-section-map$/;"	f
magit-unpulled-section-map	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-unpulled-section-map$/;"	f
magit-unpushed-section-map	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(defvar magit-unpushed-section-map$/;"	f
magit-unstage	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-unstage ()$/;"	f
magit-unstage-1	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-unstage-1 (files)$/;"	f
magit-unstage-all	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-unstage-all ()$/;"	f
magit-unstage-committed	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defcustom magit-unstage-committed t$/;"	f
magit-unstage-file	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-unstage-file (file)$/;"	f
magit-unstage-intent	.emacs.d/elpa/magit-20190709.1612/magit-apply.el	/^(defun magit-unstage-intent (files)$/;"	f
magit-unstaged-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-unstaged-files (&optional nomodules files)$/;"	f
magit-unstaged-section-map	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(defvar magit-unstaged-section-map$/;"	f
magit-untracked-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-untracked-files (&optional all files)$/;"	f
magit-untracked-section-map	.emacs.d/elpa/magit-20190709.1612/magit-status.el	/^(defvar magit-untracked-section-map$/;"	f
magit-update-files	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-update-files (files)$/;"	f
magit-update-index	.emacs.d/elpa/magit-20190709.1612/magit-files.el	/^(defun magit-update-index ()$/;"	f
magit-update-other-window-delay	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defcustom magit-update-other-window-delay 0.2$/;"	f
magit-update-ref	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defun magit-update-ref (ref message rev &optional stashish)$/;"	f
magit-version	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defun magit-version (&optional print-dest)$/;"	f
magit-version	.emacs.d/elpa/magit-20190709.1612/magit.el	/^(defvar magit-version 'undefined$/;"	f
magit-view-git-manual-method	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defcustom magit-view-git-manual-method 'info$/;"	f
magit-visit-ref	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defun magit-visit-ref ()$/;"	f
magit-visit-ref-behavior	.emacs.d/elpa/magit-20190709.1612/magit-refs.el	/^(defcustom magit-visit-ref-behavior nil$/;"	f
magit-visit-thing	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-visit-thing ()$/;"	f
magit-wash-bisect-log	.emacs.d/elpa/magit-20190709.1612/magit-bisect.el	/^(defun magit-wash-bisect-log (_args)$/;"	f
magit-wash-sequence	.emacs.d/elpa/magit-20190709.1612/magit-section.el	/^(defun magit-wash-sequence (function)$/;"	f
magit-which-function	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-which-function ()$/;"	f
magit-whitespace-disallowed	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-whitespace-disallowed ()$/;"	f
magit-wip	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defgroup magit-wip nil$/;"	f
magit-wip-after-apply-mode	.emacs.d/elpa/magit-20190709.1612/magit-autoloads.el	/^(defvar magit-wip-after-apply-mode nil "\\$/;"	f
magit-wip-after-apply-mode	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(define-minor-mode magit-wip-after-apply-mode$/;"	f
magit-wip-after-apply-mode-lighter	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defcustom magit-wip-after-apply-mode-lighter ""$/;"	f
magit-wip-after-save-local-mode	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(define-minor-mode magit-wip-after-save-local-mode$/;"	f
magit-wip-after-save-local-mode-lighter	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defcustom magit-wip-after-save-local-mode-lighter ""$/;"	f
magit-wip-after-save-local-mode-turn-on	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-after-save-local-mode-turn-on ()$/;"	f
magit-wip-after-save-mode	.emacs.d/elpa/magit-20190709.1612/magit-autoloads.el	/^(defvar magit-wip-after-save-mode nil "\\$/;"	f
magit-wip-after-save-mode	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(define-globalized-minor-mode magit-wip-after-save-mode$/;"	f
magit-wip-any-enabled-p	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-any-enabled-p ()$/;"	f
magit-wip-before-change-mode	.emacs.d/elpa/magit-20190709.1612/magit-autoloads.el	/^(defvar magit-wip-before-change-mode nil "\\$/;"	f
magit-wip-before-change-mode	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defvar magit-wip-before-change-mode)$/;"	f
magit-wip-before-change-mode	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(define-minor-mode magit-wip-before-change-mode$/;"	f
magit-wip-before-change-mode-lighter	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defcustom magit-wip-before-change-mode-lighter ""$/;"	f
magit-wip-buffer-backed-up	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defvar-local magit-wip-buffer-backed-up nil)$/;"	f
magit-wip-commit	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-commit (&optional files msg)$/;"	f
magit-wip-commit-after-apply	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-commit-after-apply (&optional files msg)$/;"	f
magit-wip-commit-before-change	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-commit-before-change (&optional files msg)$/;"	f
magit-wip-commit-buffer-file	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-commit-buffer-file (&optional msg)$/;"	f
magit-wip-commit-index	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-commit-index (ref files msg)$/;"	f
magit-wip-commit-initial-backup	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-commit-initial-backup ()$/;"	f
magit-wip-commit-worktree	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-commit-worktree (ref files msg)$/;"	f
magit-wip-get-parent	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-get-parent (ref wipref)$/;"	f
magit-wip-get-ref	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-get-ref ()$/;"	f
magit-wip-initial-backup-mode	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(define-minor-mode magit-wip-initial-backup-mode$/;"	f
magit-wip-initial-backup-mode-lighter	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defcustom magit-wip-initial-backup-mode-lighter ""$/;"	f
magit-wip-legacy	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defgroup magit-wip-legacy nil$/;"	f
magit-wip-log	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-log (branch args files count)$/;"	f
magit-wip-log-current	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-log-current (branch args files count)$/;"	f
magit-wip-log-get-tips	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-log-get-tips (wipref count)$/;"	f
magit-wip-log-index	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-log-index (args files)$/;"	f
magit-wip-log-worktree	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-log-worktree (args files)$/;"	f
magit-wip-maybe-add-commit-hook	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-maybe-add-commit-hook ()$/;"	f
magit-wip-merge-branch	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defcustom magit-wip-merge-branch nil$/;"	f
magit-wip-mode	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(define-minor-mode magit-wip-mode$/;"	f
magit-wip-mode-lighter	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defcustom magit-wip-mode-lighter " Wip"$/;"	f
magit-wip-namespace	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defcustom magit-wip-namespace "refs\/wip\/"$/;"	f
magit-wip-update-wipref	.emacs.d/elpa/magit-20190709.1612/magit-wip.el	/^(defun magit-wip-update-wipref (ref wipref tree parent files msg start-msg)$/;"	f
magit-with-blob	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defmacro magit-with-blob (commit file &rest body)$/;"	f
magit-with-editor	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defmacro magit-with-editor (&rest body)$/;"	f
magit-with-editor-envvar	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defvar magit-with-editor-envvar "GIT_EDITOR"$/;"	f
magit-with-temp-index	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defmacro magit-with-temp-index (tree arg &rest body)$/;"	f
magit-with-toplevel	.emacs.d/elpa/magit-20190709.1612/magit-git.el	/^(defmacro magit-with-toplevel (&rest body)$/;"	f
magit-worktree	.emacs.d/elpa/magit-20190709.1612/magit-worktree.el	/^(define-transient-command magit-worktree ()$/;"	f
magit-worktree-branch	.emacs.d/elpa/magit-20190709.1612/magit-worktree.el	/^(defun magit-worktree-branch (path branch start-point &optional force)$/;"	f
magit-worktree-checkout	.emacs.d/elpa/magit-20190709.1612/magit-worktree.el	/^(defun magit-worktree-checkout (path branch)$/;"	f
magit-worktree-delete	.emacs.d/elpa/magit-20190709.1612/magit-worktree.el	/^(defun magit-worktree-delete (worktree)$/;"	f
magit-worktree-read-directory-name-function	.emacs.d/elpa/magit-20190709.1612/magit-worktree.el	/^(defcustom magit-worktree-read-directory-name-function 'read-directory-name$/;"	f
magit-worktree-section-map	.emacs.d/elpa/magit-20190709.1612/magit-worktree.el	/^(defvar magit-worktree-section-map$/;"	f
magit-worktree-status	.emacs.d/elpa/magit-20190709.1612/magit-worktree.el	/^(defun magit-worktree-status (worktree)$/;"	f
magit-xref-backward	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(define-button-type 'magit-xref-backward$/;"	f
magit-xref-forward	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(define-button-type 'magit-xref-forward$/;"	f
magit-xref-insert-button	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-xref-insert-button (label type)$/;"	f
magit-xref-modes	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defvar magit-xref-modes$/;"	f
magit-xref-restore	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-xref-restore (fn dir args)$/;"	f
magit-xref-setup	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-xref-setup (fn args)$/;"	f
magit-y-or-n-p	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun magit-y-or-n-p (prompt &optional action)$/;"	f
magit-zap-caches	.emacs.d/elpa/magit-20190709.1612/magit-mode.el	/^(defun magit-zap-caches ()$/;"	f
magit:--	.emacs.d/elpa/magit-20190709.1612/magit-diff.el	/^(define-infix-argument magit:-- ()$/;"	f
magit:--author	.emacs.d/elpa/magit-20190709.1612/magit-log.el	/^(define-infix-argument magit:--author ()$/;"	f
magit:--gpg-sign	.emacs.d/elpa/magit-20190709.1612/magit-commit.el	/^(define-infix-argument magit:--gpg-sign ()$/;"	f
org-man-export--magit-gitman	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun org-man-export--magit-gitman (fn link description format)$/;"	f
overwrite-query	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defvar overwrite-query)$/;"	f
package--compile	.emacs.d/elpa/async-20190503.656/async-bytecomp.el	/^(defadvice package--compile (around byte-compile-async)$/;"	f
package-alist	.emacs.d/elpa/async-20190503.656/async-bytecomp.el	/^(defvar package-alist)$/;"	f
package-archive-contents	.emacs.d/elpa/async-20190503.656/async-bytecomp.el	/^(defvar package-archive-contents)$/;"	f
post-transient-hook	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar post-transient-hook nil$/;"	f
quail-show-key	.emacs.d/evil/evil-integration.el	/^(defadvice quail-show-key (around evil activate)$/;"	f
read-key-sequence	.emacs.d/evil/evil-repeat.el	/^(defadvice read-key-sequence (before evil activate)$/;"	f
run	.emacs.d/evil/scripts/evil-release-stable	/^def run(cmd)$/;"	f
savehist-additional-variables	.emacs.d/evil/evil-jumps.el	/^(defvar savehist-additional-variables)$/;"	f
select-window	.emacs.d/evil/evil-core.el	/^(defadvice select-window (after evil activate)$/;"	f
server-switch-buffer--with-editor-server-window-alist	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun server-switch-buffer--with-editor-server-window-alist$/;"	f
server-visit-files--with-editor-file-name-history-exclude	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun server-visit-files--with-editor-file-name-history-exclude$/;"	f
set-window-buffer	.emacs.d/evil/evil-core.el	/^(defadvice set-window-buffer (before evil)$/;"	f
shell-command--shell-command-with-editor-mode	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun shell-command--shell-command-with-editor-mode$/;"	f
shell-command-with-editor-mode	.emacs.d/elpa/with-editor-20190511.1157/with-editor-autoloads.el	/^(defvar shell-command-with-editor-mode nil "\\$/;"	f
shell-command-with-editor-mode	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(define-minor-mode shell-command-with-editor-mode$/;"	f
should	.emacs.d/evil/lib/ert.el	/^(defmacro* should (form)$/;"	f
should-error	.emacs.d/evil/lib/ert.el	/^(defmacro* should-error (form &rest keys &key type exclude-subtypes)$/;"	f
should-not	.emacs.d/evil/lib/ert.el	/^(defmacro* should-not (form)$/;"	f
show-paren-function	.emacs.d/evil/evil-integration.el	/^(defadvice show-paren-function (around evil disable)$/;"	f
smerge-ediff-buf	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defvar smerge-ediff-buf)$/;"	f
smerge-ediff-windows	.emacs.d/elpa/magit-20190709.1612/magit-ediff.el	/^(defvar smerge-ediff-windows)$/;"	f
smtpmail-async	.emacs.d/elpa/async-20190503.656/smtpmail-async.el	/^(defgroup smtpmail-async nil$/;"	f
split-window-internal	.emacs.d/evil/evil-jumps.el	/^(defadvice split-window-internal (before evil-jumps activate)$/;"	f
start-file-process--with-editor-process-filter	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun start-file-process--with-editor-process-filter$/;"	f
switch-to-buffer	.emacs.d/evil/evil-jumps.el	/^(defadvice switch-to-buffer (before evil-jumps activate)$/;"	f
toggle-input-method	.emacs.d/evil/evil-core.el	/^(defadvice toggle-input-method (around evil)$/;"	f
tramp-sh-handle-process-file--magit-tramp-process-environment	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun tramp-sh-handle-process-file--magit-tramp-process-environment$/;"	f
tramp-sh-handle-start-file-process--magit-tramp-process-environment	.emacs.d/elpa/magit-20190709.1612/magit-process.el	/^(defun tramp-sh-handle-start-file-process--magit-tramp-process-environment$/;"	f
transient	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defgroup transient nil$/;"	f
transient--active-infix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--active-infix nil "The active infix awaiting user input.")$/;"	f
transient--buffer-name	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--buffer-name " *transient*"$/;"	f
transient--command-key	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--command-key (cmd)$/;"	f
transient--common-command-prefixes	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--common-command-prefixes '(?\\C-x))$/;"	f
transient--debug	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--debug (arg &rest args)$/;"	f
transient--debug	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--debug nil "Whether put debug information into *Messages*.")$/;"	f
transient--default-infix-command	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--default-infix-command ()$/;"	f
transient--delete-window	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--delete-window ()$/;"	f
transient--derive-shortarg	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--derive-shortarg (arg)$/;"	f
transient--describe-function	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--describe-function (fn)$/;"	f
transient--do-call	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--do-call ()$/;"	f
transient--do-exit	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--do-exit ()$/;"	f
transient--do-move	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--do-move ()$/;"	f
transient--do-noop	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--do-noop ()$/;"	f
transient--do-quit-all	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--do-quit-all ()$/;"	f
transient--do-quit-one	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--do-quit-one ()$/;"	f
transient--do-replace	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--do-replace ()$/;"	f
transient--do-stay	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--do-stay ()$/;"	f
transient--do-suspend	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--do-suspend ()$/;"	f
transient--do-warn	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--do-warn ()$/;"	f
transient--editp	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--editp nil "Whether edit-mode is active.")$/;"	f
transient--emergency-exit	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--emergency-exit ()$/;"	f
transient--ensure-infix-command	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--ensure-infix-command (obj)$/;"	f
transient--exit	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defconst transient--exit nil "Do exit the transient.")$/;"	f
transient--exitp	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--exitp nil "Whether to exit the transient.")$/;"	f
transient--expand-define-args	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--expand-define-args (args)$/;"	f
transient--export	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--export ()$/;"	f
transient--goto-argument-description	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--goto-argument-description (arg)$/;"	f
transient--goto-button	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--goto-button (command)$/;"	f
transient--group-member	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--group-member (loc group)$/;"	f
transient--helpp	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--helpp nil "Whether help-mode is active.")$/;"	f
transient--history	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--history nil)$/;"	f
transient--init-child	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--init-child (levels spec)$/;"	f
transient--init-group	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--init-group (levels spec)$/;"	f
transient--init-objects	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--init-objects (name layout params)$/;"	f
transient--init-suffix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--init-suffix (levels spec)$/;"	f
transient--init-transient	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--init-transient ()$/;"	f
transient--insert-groups	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--insert-groups ()$/;"	f
transient--insert-help	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--insert-help ()$/;"	f
transient--insert-suffix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--insert-suffix (prefix loc suffix action)$/;"	f
transient--isearch-exit	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--isearch-exit ()$/;"	f
transient--isearch-mode-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--isearch-mode-map$/;"	f
transient--isearch-setup	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--isearch-setup ()$/;"	f
transient--kbd	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--kbd (keys)$/;"	f
transient--key-unreachable-p	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--key-unreachable-p (obj)$/;"	f
transient--layout	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--layout nil)$/;"	f
transient--layout-member	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--layout-member (loc prefix &optional remove)$/;"	f
transient--layout-member-1	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--layout-member-1 (loc layout remove)$/;"	f
transient--lookup-key	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--lookup-key (keymap key)$/;"	f
transient--make-predicate-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--make-predicate-map ()$/;"	f
transient--make-redisplay-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--make-redisplay-map ()$/;"	f
transient--make-transient-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--make-transient-map ()$/;"	f
transient--minibuffer-exit	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--minibuffer-exit ()$/;"	f
transient--minibuffer-setup	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--minibuffer-setup ()$/;"	f
transient--nthcdr	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--nthcdr (n list)$/;"	f
transient--original-buffer	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--original-buffer nil$/;"	f
transient--original-window	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--original-window nil$/;"	f
transient--parse-child	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--parse-child (prefix spec)$/;"	f
transient--parse-group	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--parse-group (prefix spec)$/;"	f
transient--parse-suffix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--parse-suffix (prefix spec)$/;"	f
transient--pop-keymap	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--pop-keymap (map)$/;"	f
transient--post-command	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--post-command ()$/;"	f
transient--pp-to-file	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--pp-to-file (object file)$/;"	f
transient--pre-command	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--pre-command ()$/;"	f
transient--pre-exit	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--pre-exit ()$/;"	f
transient--predicate-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--predicate-map nil)$/;"	f
transient--prefix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--prefix nil)$/;"	f
transient--push-keymap	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--push-keymap (map)$/;"	f
transient--read-file-contents	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--read-file-contents (file)$/;"	f
transient--read-number-N	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--read-number-N (prompt initial-input history include-zero)$/;"	f
transient--redisplay	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--redisplay ()$/;"	f
transient--redisplay-key	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--redisplay-key nil)$/;"	f
transient--redisplay-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--redisplay-map nil)$/;"	f
transient--restore-winconf	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar-local transient--restore-winconf nil)$/;"	f
transient--resume-which-key-mode	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--resume-which-key-mode ()$/;"	f
transient--show	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--show ()$/;"	f
transient--show-brief	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--show-brief ()$/;"	f
transient--show-manpage	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--show-manpage (manpage &optional argument)$/;"	f
transient--showp	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--showp nil "Whether the transient is show in a popup buffer.")$/;"	f
transient--source-buffer	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(define-obsolete-variable-alias 'transient--source-buffer$/;"	f
transient--stack	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--stack nil)$/;"	f
transient--stack-pop	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--stack-pop ()$/;"	f
transient--stack-push	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--stack-push ()$/;"	f
transient--stack-zap	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--stack-zap ()$/;"	f
transient--stay	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defconst transient--stay t   "Do not exist the transient.")$/;"	f
transient--suffix-command	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--suffix-command (arg)$/;"	f
transient--suffixes	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--suffixes nil)$/;"	f
transient--suspend-which-key-mode	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--suspend-which-key-mode ()$/;"	f
transient--timer	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--timer nil)$/;"	f
transient--timer-cancel	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--timer-cancel ()$/;"	f
transient--timer-start	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--timer-start ()$/;"	f
transient--transient-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--transient-map nil)$/;"	f
transient--unset-incompatible	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--unset-incompatible t)$/;"	f
transient--use-level-p	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--use-level-p (level &optional edit)$/;"	f
transient--use-suffix-p	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--use-suffix-p (obj)$/;"	f
transient--value-match	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient--value-match (re)$/;"	f
transient--window	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient--window nil$/;"	f
transient--with-emergency-exit	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defmacro transient--with-emergency-exit (&rest body)$/;"	f
transient-active-infix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-active-infix '((t :inherit secondary-selection))$/;"	f
transient-append-suffix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-append-suffix (prefix loc suffix)$/;"	f
transient-args	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-args (&optional prefix separate)$/;"	f
transient-argument	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-argument (transient-infix) ()$/;"	f
transient-argument	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-argument '((t :inherit font-lock-warning-face))$/;"	f
transient-backward-button	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-backward-button (n)$/;"	f
transient-base-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient-base-map$/;"	f
transient-bind-q-to-quit	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-bind-q-to-quit ()$/;"	f
transient-button	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(define-button-type 'transient-button$/;"	f
transient-child	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-child ()$/;"	f
transient-column	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-column (transient-group) ()$/;"	f
transient-columns	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-columns (transient-group) ()$/;"	f
transient-default-level	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-default-level 4$/;"	f
transient-detect-key-conflicts	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-detect-key-conflicts nil$/;"	f
transient-disabled-suffix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-disabled-suffix$/;"	f
transient-display-buffer-action	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-display-buffer-action$/;"	f
transient-edit-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient-edit-map$/;"	f
transient-enable-popup-navigation	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-enable-popup-navigation nil$/;"	f
transient-enabled-suffix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-enabled-suffix$/;"	f
transient-faces	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defgroup transient-faces nil$/;"	f
transient-files	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-files (transient-infix) ()$/;"	f
transient-font-lock-keywords	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defconst transient-font-lock-keywords$/;"	f
transient-forward-button	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-forward-button (n)$/;"	f
transient-get-suffix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-get-suffix (prefix loc)$/;"	f
transient-group	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-group (transient-child)$/;"	f
transient-heading	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-heading '((t :inherit font-lock-keyword-face))$/;"	f
transient-help	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-help ()$/;"	f
transient-highlight-mismatched-keys	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-highlight-mismatched-keys nil$/;"	f
transient-history	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient-history$/;"	f
transient-history-file	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-history-file$/;"	f
transient-history-limit	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-history-limit 10$/;"	f
transient-history-next	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-history-next ()$/;"	f
transient-history-prev	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-history-prev ()$/;"	f
transient-inactive-argument	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-inactive-argument '((t :inherit shadow))$/;"	f
transient-inactive-value	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-inactive-value '((t :inherit shadow))$/;"	f
transient-infix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-infix (transient-suffix)$/;"	f
transient-insert-suffix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-insert-suffix (prefix loc suffix)$/;"	f
transient-isearch-abort	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-isearch-abort ()$/;"	f
transient-isearch-backward	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-isearch-backward (&optional regexp-p)$/;"	f
transient-isearch-cancel	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-isearch-cancel ()$/;"	f
transient-isearch-exit	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-isearch-exit ()$/;"	f
transient-isearch-forward	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-isearch-forward (&optional regexp-p)$/;"	f
transient-key	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-key '((t :inherit font-lock-builtin-face))$/;"	f
transient-levels	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient-levels$/;"	f
transient-levels-file	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-levels-file$/;"	f
transient-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient-map$/;"	f
transient-maybe-save-history	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-maybe-save-history ()$/;"	f
transient-mismatched-key	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-mismatched-key '((t :underline t))$/;"	f
transient-mode-line-format	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-mode-line-format 'line$/;"	f
transient-mouse-push-button	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-mouse-push-button (&optional pos)$/;"	f
transient-nonstandard-key	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-nonstandard-key '((t :underline t))$/;"	f
transient-noop	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-noop ()$/;"	f
transient-option	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-option (transient-argument) ()$/;"	f
transient-popup-navigation-help	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-popup-navigation-help ()$/;"	f
transient-popup-navigation-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient-popup-navigation-map$/;"	f
transient-popup-navigation-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient-popup-navigation-map)$/;"	f
transient-predicate-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient-predicate-map$/;"	f
transient-prefix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-prefix ()$/;"	f
transient-push-button	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-push-button ()$/;"	f
transient-quit-all	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-quit-all ()$/;"	f
transient-quit-one	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-quit-one ()$/;"	f
transient-quit-seq	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-quit-seq ()$/;"	f
transient-read-date	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-read-date (prompt default-time _history)$/;"	f
transient-read-directory	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-read-directory (prompt _initial-input _history)$/;"	f
transient-read-existing-directory	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-read-existing-directory (prompt _initial-input _history)$/;"	f
transient-read-number-N+	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-read-number-N+ (prompt initial-input history)$/;"	f
transient-read-number-N0	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-read-number-N0 (prompt initial-input history)$/;"	f
transient-read-with-initial-input	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-read-with-initial-input t$/;"	f
transient-rebind-quit-commands	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-rebind-quit-commands (obj)$/;"	f
transient-remove-suffix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-remove-suffix (prefix loc)$/;"	f
transient-replace-suffix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-replace-suffix (prefix loc suffix)$/;"	f
transient-resume	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-resume ()$/;"	f
transient-resume-mode	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(define-minor-mode transient-resume-mode$/;"	f
transient-resume-mode	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient-resume-mode)$/;"	f
transient-resume-mode-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient-resume-mode-map$/;"	f
transient-row	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-row (transient-group) ()$/;"	f
transient-save	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-save ()$/;"	f
transient-save-history	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-save-history t$/;"	f
transient-save-history	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-save-history ()$/;"	f
transient-save-levels	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-save-levels ()$/;"	f
transient-save-values	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-save-values ()$/;"	f
transient-scroll-down	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-scroll-down (&optional arg)$/;"	f
transient-scroll-up	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-scroll-up (&optional arg)$/;"	f
transient-separator	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-separator$/;"	f
transient-set	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-set ()$/;"	f
transient-set-level	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-set-level (&optional command level)$/;"	f
transient-setup	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-setup (&optional name layout edit &rest params)$/;"	f
transient-show	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-show ()$/;"	f
transient-show-common-commands	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-show-common-commands nil$/;"	f
transient-show-popup	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-show-popup t$/;"	f
transient-sticky-map	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient-sticky-map$/;"	f
transient-subgroups	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-subgroups (transient-group) ()$/;"	f
transient-substitute-key-function	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-substitute-key-function nil$/;"	f
transient-suffix	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-suffix (transient-child)$/;"	f
transient-suffix-object	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-suffix-object (&optional command)$/;"	f
transient-suffix-put	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-suffix-put (prefix loc prop value)$/;"	f
transient-suspend	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-suspend ()$/;"	f
transient-switch	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-switch (transient-argument) ()$/;"	f
transient-switches	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-switches (transient-argument)$/;"	f
transient-toggle-common	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-toggle-common ()$/;"	f
transient-undefined	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-undefined ()$/;"	f
transient-unreachable	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-unreachable '((t :inherit shadow))$/;"	f
transient-unreachable-key	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-unreachable-key '((t :inherit shadow))$/;"	f
transient-update	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defun transient-update ()$/;"	f
transient-value	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defface transient-value '((t :inherit font-lock-string-face))$/;"	f
transient-values	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defvar transient-values$/;"	f
transient-values-file	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defcustom transient-values-file$/;"	f
transient-variable	.emacs.d/elpa/transient-20190630.1359/transient.el	/^(defclass transient-variable (transient-infix)$/;"	f
turn-off-evil-mode	.emacs.d/evil/evil-core.el	/^(defun turn-off-evil-mode (&optional arg)$/;"	f
turn-on-evil-mode	.emacs.d/evil/evil-core.el	/^(defun turn-on-evil-mode (&optional arg)$/;"	f
turn-on-undo-tree-mode	.emacs.d/evil/lib/undo-tree.el	/^(defun turn-on-undo-tree-mode (&optional print-message)$/;"	f
undo-adjusted-markers	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-adjusted-markers nil)$/;"	f
undo-list-GCd-marker-elt-p	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-list-GCd-marker-elt-p (elt)$/;"	f
undo-list-byte-size	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-list-byte-size (undo-list)$/;"	f
undo-list-clean-GCd-elts	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-list-clean-GCd-elts (undo-list)$/;"	f
undo-list-marker-elt-p	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-list-marker-elt-p (elt)$/;"	f
undo-list-pop-changeset	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-list-pop-changeset (&optional discard-pos)$/;"	f
undo-list-rebuild-from-tree	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-list-rebuild-from-tree ()$/;"	f
undo-list-transfer-to-tree	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-list-transfer-to-tree ()$/;"	f
undo-tree	.emacs.d/evil/lib/undo-tree.el	/^(defgroup undo-tree nil$/;"	f
undo-tree-adjust-elements-to-elt	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-adjust-elements-to-elt (node undo-elt &optional below)$/;"	f
undo-tree-apply-deltas	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-apply-deltas (undo-elt deltas &optional sgn)$/;"	f
undo-tree-auto-save-history	.emacs.d/evil/lib/undo-tree.el	/^(defcustom undo-tree-auto-save-history nil$/;"	f
undo-tree-clear-visualizer-data	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-clear-visualizer-data (tree)$/;"	f
undo-tree-compute-widths	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-compute-widths (node)$/;"	f
undo-tree-copy-list	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-copy-list (undo-list)$/;"	f
undo-tree-decircle	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-decircle (undo-tree)$/;"	f
undo-tree-diff	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-diff (&optional node)$/;"	f
undo-tree-diff-buffer-name	.emacs.d/evil/lib/undo-tree.el	/^(defconst undo-tree-diff-buffer-name "*undo-tree Diff*")$/;"	f
undo-tree-discard-history	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-discard-history ()$/;"	f
undo-tree-discard-node	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-discard-node (node)$/;"	f
undo-tree-draw-node	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-draw-node (node &optional current)$/;"	f
undo-tree-draw-subtree	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-draw-subtree (node &optional active-branch)$/;"	f
undo-tree-draw-tree	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-draw-tree (undo-tree)$/;"	f
undo-tree-enable-undo-in-region	.emacs.d/evil/lib/undo-tree.el	/^(defcustom undo-tree-enable-undo-in-region t$/;"	f
undo-tree-expand-down	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-expand-down (from &optional to)$/;"	f
undo-tree-expand-up	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-expand-up (from &optional to)$/;"	f
undo-tree-extend-down	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-extend-down (node &optional bottom)$/;"	f
undo-tree-extend-up	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-extend-up (node &optional top)$/;"	f
undo-tree-generate-id	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-generate-id ()$/;"	f
undo-tree-grow	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-grow (undo)$/;"	f
undo-tree-grow-backwards	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-grow-backwards (node undo &optional redo)$/;"	f
undo-tree-highlight-active-branch	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-highlight-active-branch (node &optional end)$/;"	f
undo-tree-history-directory-alist	.emacs.d/evil/lib/undo-tree.el	/^(defcustom undo-tree-history-directory-alist nil$/;"	f
undo-tree-incompatible-major-modes	.emacs.d/evil/lib/undo-tree.el	/^(defcustom undo-tree-incompatible-major-modes '(term-mode)$/;"	f
undo-tree-inhibit-kill-visualizer	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-inhibit-kill-visualizer nil)$/;"	f
undo-tree-insert	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-insert (str &optional arg)$/;"	f
undo-tree-insert-face	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-insert-face nil)$/;"	f
undo-tree-kill-visualizer	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-kill-visualizer (&rest _dummy)$/;"	f
undo-tree-load-history	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-load-history (&optional filename noerror)$/;"	f
undo-tree-load-history-hook	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-load-history-hook ()$/;"	f
undo-tree-make-history-save-file-name	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-make-history-save-file-name (file)$/;"	f
undo-tree-map	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-map nil$/;"	f
undo-tree-mapc	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-mapc (--undo-tree-mapc-function-- node)$/;"	f
undo-tree-mode	.emacs.d/evil/lib/undo-tree.el	/^(define-minor-mode undo-tree-mode$/;"	f
undo-tree-mode-lighter	.emacs.d/evil/lib/undo-tree.el	/^(defcustom undo-tree-mode-lighter " Undo-Tree"$/;"	f
undo-tree-move-GC-elts-to-pool	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-move-GC-elts-to-pool (elt)$/;"	f
undo-tree-move-backward	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-move-backward (&optional arg)$/;"	f
undo-tree-move-down	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-move-down (&optional arg)$/;"	f
undo-tree-move-forward	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-move-forward (&optional arg)$/;"	f
undo-tree-move-to-parent	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-move-to-parent (node)$/;"	f
undo-tree-move-up	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-move-up (&optional arg)$/;"	f
undo-tree-node-char-lwidth	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-node-char-lwidth (node)$/;"	f
undo-tree-node-char-rwidth	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-node-char-rwidth (node)$/;"	f
undo-tree-node-clear-region-data	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-node-clear-region-data (node)$/;"	f
undo-tree-node-clear-visualizer-data	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-node-clear-visualizer-data (node)$/;"	f
undo-tree-node-compute-widths	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-node-compute-widths (node)$/;"	f
undo-tree-node-cwidth	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-node-cwidth (node)$/;"	f
undo-tree-node-cwidth	.emacs.d/evil/lib/undo-tree.el	/^(defsetf undo-tree-node-cwidth (node) (val)$/;"	f
undo-tree-node-lwidth	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-node-lwidth (node)$/;"	f
undo-tree-node-lwidth	.emacs.d/evil/lib/undo-tree.el	/^(defsetf undo-tree-node-lwidth (node) (val)$/;"	f
undo-tree-node-marker	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-node-marker (node)$/;"	f
undo-tree-node-marker	.emacs.d/evil/lib/undo-tree.el	/^(defsetf undo-tree-node-marker (node) (val)$/;"	f
undo-tree-node-p	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-node-p (n)$/;"	f
undo-tree-node-redo-beginning	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-node-redo-beginning (node)$/;"	f
undo-tree-node-redo-beginning	.emacs.d/evil/lib/undo-tree.el	/^(defsetf undo-tree-node-redo-beginning (node) (val)$/;"	f
undo-tree-node-redo-end	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-node-redo-end (node)$/;"	f
undo-tree-node-redo-end	.emacs.d/evil/lib/undo-tree.el	/^(defsetf undo-tree-node-redo-end (node) (val)$/;"	f
undo-tree-node-register	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-node-register (node)$/;"	f
undo-tree-node-register	.emacs.d/evil/lib/undo-tree.el	/^(defsetf undo-tree-node-register (node) (val)$/;"	f
undo-tree-node-rwidth	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-node-rwidth (node)$/;"	f
undo-tree-node-rwidth	.emacs.d/evil/lib/undo-tree.el	/^(defsetf undo-tree-node-rwidth (node) (val)$/;"	f
undo-tree-node-undo-beginning	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-node-undo-beginning (node)$/;"	f
undo-tree-node-undo-beginning	.emacs.d/evil/lib/undo-tree.el	/^(defsetf undo-tree-node-undo-beginning (node) (val)$/;"	f
undo-tree-node-undo-end	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-node-undo-end (node)$/;"	f
undo-tree-node-undo-end	.emacs.d/evil/lib/undo-tree.el	/^(defsetf undo-tree-node-undo-end (node) (val)$/;"	f
undo-tree-node-unmodified-p	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-node-unmodified-p (node &optional mtime)$/;"	f
undo-tree-num-branches	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-num-branches ()$/;"	f
undo-tree-old-undo-menu-item	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-old-undo-menu-item nil)$/;"	f
undo-tree-oldest-leaf	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-oldest-leaf (node)$/;"	f
undo-tree-overridden-undo-bindings-p	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-overridden-undo-bindings-p ()$/;"	f
undo-tree-position	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-position (node list)$/;"	f
undo-tree-pull-redo-in-region-branch	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-pull-redo-in-region-branch (start end)$/;"	f
undo-tree-pull-undo-in-region-branch	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-pull-undo-in-region-branch (start end)$/;"	f
undo-tree-recircle	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-recircle (undo-tree)$/;"	f
undo-tree-redo	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-redo (&optional arg)$/;"	f
undo-tree-redo-1	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-redo-1 (&optional arg preserve-undo preserve-timestamps)$/;"	f
undo-tree-region-data-p	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-region-data-p (r)$/;"	f
undo-tree-register-data-p	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-register-data-p (data)$/;"	f
undo-tree-register-data-print-func	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-register-data-print-func (data)$/;"	f
undo-tree-repeated-redo-in-region-p	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-repeated-redo-in-region-p (start end)$/;"	f
undo-tree-repeated-undo-in-region-p	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-repeated-undo-in-region-p (start end)$/;"	f
undo-tree-restore-GC-elts-from-pool	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-restore-GC-elts-from-pool (elt)$/;"	f
undo-tree-restore-state-from-register	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-restore-state-from-register (register)$/;"	f
undo-tree-reverting-redo-in-region-p	.emacs.d/evil/lib/undo-tree.el	/^(defalias 'undo-tree-reverting-redo-in-region-p$/;"	f
undo-tree-reverting-undo-in-region-p	.emacs.d/evil/lib/undo-tree.el	/^(defalias 'undo-tree-reverting-undo-in-region-p$/;"	f
undo-tree-save-history	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-save-history (&optional filename overwrite)$/;"	f
undo-tree-save-history-hook	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-save-history-hook ()$/;"	f
undo-tree-save-state-to-register	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-save-state-to-register (register)$/;"	f
undo-tree-set	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-set (node &optional preserve-timestamps)$/;"	f
undo-tree-snip-node	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-snip-node (node)$/;"	f
undo-tree-splice-node	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-splice-node (node splice)$/;"	f
undo-tree-switch-branch	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-switch-branch (branch)$/;"	f
undo-tree-timestamp-to-string	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-timestamp-to-string$/;"	f
undo-tree-undo	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-undo (&optional arg)$/;"	f
undo-tree-undo-1	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-undo-1 (&optional arg preserve-redo preserve-timestamps)$/;"	f
undo-tree-update-menu-bar	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-update-menu-bar ()$/;"	f
undo-tree-visualize	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualize ()$/;"	f
undo-tree-visualize-redo	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualize-redo (&optional arg)$/;"	f
undo-tree-visualize-redo-to-x	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualize-redo-to-x (&optional x)$/;"	f
undo-tree-visualize-switch-branch-left	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualize-switch-branch-left (arg)$/;"	f
undo-tree-visualize-switch-branch-right	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualize-switch-branch-right (arg)$/;"	f
undo-tree-visualize-undo	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualize-undo (&optional arg)$/;"	f
undo-tree-visualize-undo-to-x	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualize-undo-to-x (&optional x)$/;"	f
undo-tree-visualizer-abort	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-abort ()$/;"	f
undo-tree-visualizer-active-branch-face	.emacs.d/evil/lib/undo-tree.el	/^(defface undo-tree-visualizer-active-branch-face$/;"	f
undo-tree-visualizer-buffer-name	.emacs.d/evil/lib/undo-tree.el	/^(defconst undo-tree-visualizer-buffer-name " *undo-tree*")$/;"	f
undo-tree-visualizer-calculate-spacing	.emacs.d/evil/lib/undo-tree.el	/^(defsubst undo-tree-visualizer-calculate-spacing ()$/;"	f
undo-tree-visualizer-current-face	.emacs.d/evil/lib/undo-tree.el	/^(defface undo-tree-visualizer-current-face$/;"	f
undo-tree-visualizer-data-p	.emacs.d/evil/lib/undo-tree.el	/^(defmacro undo-tree-visualizer-data-p (v)$/;"	f
undo-tree-visualizer-default-face	.emacs.d/evil/lib/undo-tree.el	/^(defface undo-tree-visualizer-default-face$/;"	f
undo-tree-visualizer-diff	.emacs.d/evil/lib/undo-tree.el	/^(defcustom undo-tree-visualizer-diff nil$/;"	f
undo-tree-visualizer-hide-diff	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-hide-diff ()$/;"	f
undo-tree-visualizer-initial-node	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-visualizer-initial-node nil)$/;"	f
undo-tree-visualizer-lazy-drawing	.emacs.d/evil/lib/undo-tree.el	/^(defcustom undo-tree-visualizer-lazy-drawing 100$/;"	f
undo-tree-visualizer-mode-map	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-visualizer-mode-map nil$/;"	f
undo-tree-visualizer-mouse-select	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-mouse-select (pos)$/;"	f
undo-tree-visualizer-mouse-set	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-mouse-set (pos)$/;"	f
undo-tree-visualizer-needs-extending-down	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-visualizer-needs-extending-down nil)$/;"	f
undo-tree-visualizer-needs-extending-up	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-visualizer-needs-extending-up nil)$/;"	f
undo-tree-visualizer-parent-buffer	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-visualizer-parent-buffer nil$/;"	f
undo-tree-visualizer-parent-mtime	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-visualizer-parent-mtime nil)$/;"	f
undo-tree-visualizer-quit	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-quit ()$/;"	f
undo-tree-visualizer-register-face	.emacs.d/evil/lib/undo-tree.el	/^(defface undo-tree-visualizer-register-face$/;"	f
undo-tree-visualizer-relative-timestamps	.emacs.d/evil/lib/undo-tree.el	/^(defcustom undo-tree-visualizer-relative-timestamps t$/;"	f
undo-tree-visualizer-scroll-down	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-scroll-down (&optional arg)$/;"	f
undo-tree-visualizer-scroll-left	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-scroll-left (&optional arg)$/;"	f
undo-tree-visualizer-scroll-right	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-scroll-right (&optional arg)$/;"	f
undo-tree-visualizer-scroll-up	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-scroll-up (&optional arg)$/;"	f
undo-tree-visualizer-select	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-select (pos)$/;"	f
undo-tree-visualizer-select-left	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-select-left (&optional arg)$/;"	f
undo-tree-visualizer-select-next	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-select-next (&optional arg)$/;"	f
undo-tree-visualizer-select-previous	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-select-previous (&optional arg)$/;"	f
undo-tree-visualizer-select-right	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-select-right (&optional arg)$/;"	f
undo-tree-visualizer-selected-node	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-visualizer-selected-node nil)$/;"	f
undo-tree-visualizer-selection-mode	.emacs.d/evil/lib/undo-tree.el	/^(define-minor-mode undo-tree-visualizer-selection-mode$/;"	f
undo-tree-visualizer-selection-mode-map	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-visualizer-selection-mode-map nil$/;"	f
undo-tree-visualizer-selection-toggle-diff	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-selection-toggle-diff ()$/;"	f
undo-tree-visualizer-set	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-set (&optional pos)$/;"	f
undo-tree-visualizer-show-diff	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-show-diff (&optional node)$/;"	f
undo-tree-visualizer-spacing	.emacs.d/evil/lib/undo-tree.el	/^(defvar undo-tree-visualizer-spacing nil)$/;"	f
undo-tree-visualizer-timestamps	.emacs.d/evil/lib/undo-tree.el	/^(defcustom undo-tree-visualizer-timestamps nil$/;"	f
undo-tree-visualizer-toggle-diff	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-toggle-diff ()$/;"	f
undo-tree-visualizer-toggle-timestamps	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-toggle-timestamps ()$/;"	f
undo-tree-visualizer-unmodified-face	.emacs.d/evil/lib/undo-tree.el	/^(defface undo-tree-visualizer-unmodified-face$/;"	f
undo-tree-visualizer-update-diff	.emacs.d/evil/lib/undo-tree.el	/^(defun undo-tree-visualizer-update-diff (&optional node)$/;"	f
use-global-map	.emacs.d/evil/evil-core.el	/^(defadvice use-global-map (after evil activate)$/;"	f
use-local-map	.emacs.d/evil/evil-core.el	/^(defadvice use-local-map (after evil activate)$/;"	f
wdired-do-renames	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defadvice wdired-do-renames (around wdired-async)$/;"	f
wdired-use-interactive-rename	.emacs.d/elpa/async-20190503.656/dired-async.el	/^(defvar wdired-use-interactive-rename)$/;"	f
whitespace-dont-turn-on-in-magit-mode	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defun whitespace-dont-turn-on-in-magit-mode (fn)$/;"	f
whitespace-mode	.emacs.d/elpa/magit-20190709.1612/magit-utils.el	/^(defvar whitespace-mode)$/;"	f
with-editor	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defgroup with-editor nil$/;"	f
with-editor	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defmacro with-editor (&rest body)$/;"	f
with-editor*	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defmacro with-editor* (envvar &rest body)$/;"	f
with-editor--envvar	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor--envvar nil "For internal use.")$/;"	f
with-editor--pid	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar-local with-editor--pid nil "For internal use.")$/;"	f
with-editor--setup	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor--setup ()$/;"	f
with-editor-async-shell-command	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-async-shell-command$/;"	f
with-editor-cancel	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-cancel (force)$/;"	f
with-editor-cancel-alist	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-cancel-alist nil)$/;"	f
with-editor-cancel-message	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-cancel-message nil)$/;"	f
with-editor-cancel-query-functions	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defcustom with-editor-cancel-query-functions nil$/;"	f
with-editor-debug	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-debug ()$/;"	f
with-editor-emacsclient-executable	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defcustom with-editor-emacsclient-executable (with-editor-locate-emacsclient)$/;"	f
with-editor-emacsclient-path	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-emacsclient-path ()$/;"	f
with-editor-emacsclient-version	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-emacsclient-version (exec)$/;"	f
with-editor-emulate-terminal	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-emulate-terminal (process string)$/;"	f
with-editor-envvars	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-envvars '("EDITOR" "GIT_EDITOR" "HG_EDITOR"))$/;"	f
with-editor-export-git-editor	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-export-git-editor ()$/;"	f
with-editor-export-hg-editor	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-export-hg-editor ()$/;"	f
with-editor-file-name-history-exclude	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-file-name-history-exclude nil$/;"	f
with-editor-filter-visit-hook	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-filter-visit-hook nil)$/;"	f
with-editor-finish	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-finish (force)$/;"	f
with-editor-finish-query-functions	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defcustom with-editor-finish-query-functions nil$/;"	f
with-editor-font-lock-keywords	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defconst with-editor-font-lock-keywords$/;"	f
with-editor-kill-buffer-noop	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-kill-buffer-noop ()$/;"	f
with-editor-locate-emacsclient	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-locate-emacsclient ()$/;"	f
with-editor-locate-emacsclient-1	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-locate-emacsclient-1 (path depth)$/;"	f
with-editor-mode	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(define-minor-mode with-editor-mode$/;"	f
with-editor-mode-lighter	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defcustom with-editor-mode-lighter " WE"$/;"	f
with-editor-mode-map	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-mode-map$/;"	f
with-editor-output-filter	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-output-filter (string)$/;"	f
with-editor-post-cancel-hook	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-post-cancel-hook nil)$/;"	f
with-editor-post-cancel-hook-1	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-post-cancel-hook-1 nil)$/;"	f
with-editor-post-finish-hook	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-post-finish-hook nil)$/;"	f
with-editor-post-finish-hook-1	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-post-finish-hook-1 nil)$/;"	f
with-editor-pre-cancel-hook	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-pre-cancel-hook nil)$/;"	f
with-editor-pre-finish-hook	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-pre-finish-hook nil)$/;"	f
with-editor-previous-winconf	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-previous-winconf nil)$/;"	f
with-editor-process-filter	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-process-filter$/;"	f
with-editor-return	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-return (cancel)$/;"	f
with-editor-server-window	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-server-window ()$/;"	f
with-editor-server-window-alist	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-server-window-alist nil$/;"	f
with-editor-set-process-filter	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-set-process-filter (process filter)$/;"	f
with-editor-shell-command	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-shell-command$/;"	f
with-editor-shell-command-read-args	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-shell-command-read-args (prompt &optional async)$/;"	f
with-editor-shell-command-use-emacsclient	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defcustom with-editor-shell-command-use-emacsclient t$/;"	f
with-editor-show-usage	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defvar with-editor-show-usage t)$/;"	f
with-editor-sleeping-editor	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defcustom with-editor-sleeping-editor "\\$/;"	f
with-editor-usage-message	.emacs.d/elpa/with-editor-20190511.1157/with-editor.el	/^(defun with-editor-usage-message ()$/;"	f
x-stretch-cursor	.emacs.d/elpa/magit-20190709.1612/magit-repos.el	/^(defvar x-stretch-cursor)$/;"	f
x-stretch-cursor	.emacs.d/elpa/magit-20190709.1612/magit-submodule.el	/^(defvar x-stretch-cursor)$/;"	f
